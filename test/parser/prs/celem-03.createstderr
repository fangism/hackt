
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	32	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	33	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	40	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	41	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	42	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	45	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	footprnt	0	#HEAD#	#TAIL#	578
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	62	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	63	##ADDR##	footprnt	0	#HEAD#	#TAIL#	471
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    celem2inv = process-definition (defined) celem2inv(
        bool<> !GND
        bool<> !Vdd
        bool<> a[0..1]
        bool<> _o
      )
      In definition "celem2inv", we have: {
      Instances:
        !GND = bool<> celem2inv::!GND
        !Vdd = bool<> celem2inv::!Vdd
        _o = bool<> celem2inv::_o
        a = bool<> celem2inv::a^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a[0..1]
          bool<> _o
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        (&:i:[0..1]: a[$i]) -> _o-
        (&:i:[0..1]: ~a[$i]) -> _o+
        }
      footprint: {
        !GND = bool^0 = celem2inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = celem2inv<>::!Vdd (2) @[ supply_high port-alias ] 
        _o = bool^0 = celem2inv<>::_o (3) @[ port-alias loc-FI- loc-FI+ ] 
        a = bool^1
          {
            [0] = celem2inv<>::a[0] (4) @[ port-alias loc-FO- loc-FO+ ] 
            [1] = celem2inv<>::a[1] (5) @[ port-alias loc-FO- loc-FO+ ] 
          }
        Created state:
        bool instance pool: (5 ports, 0 local, 0 mapped)
        1	celem2inv<>::!GND @[ supply_low port-alias ]	
        2	celem2inv<>::!Vdd @[ supply_high port-alias ]	
        3	celem2inv<>::_o @[ port-alias loc-FI- loc-FI+ ]	
        4	celem2inv<>::a[0] @[ port-alias loc-FO- loc-FO+ ]	
        5	celem2inv<>::a[1] @[ port-alias loc-FO- loc-FO+ ]	
        resolved prs:
        a[0] & a[1] -> _o-
        ~a[0] & ~a[1] -> _o+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    c = celem2inv<> c
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  c = process celem2inv<>^0 = c (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    a = bool^1
      {
        [0] = c.a[0] (3) @[ sub-FO- sub-FO+ ] 
        [1] = c.a[1] (4) @[ sub-FO- sub-FO+ ] 
      }
    _o = bool^0 = c._o (5) @[ sub-FI- sub-FI+ ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	c	celem2inv<>
    bool: 1,2,5,3,4
  bool instance pool: (0 ports, 5 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	c.a[0] @[ sub-FO- sub-FO+ ]	
  4	c.a[1] @[ sub-FO- sub-FO+ ]	
  5	c._o @[ sub-FI- sub-FI+ ]	
}
