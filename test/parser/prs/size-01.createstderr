
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	287
	5	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	12	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	17	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	19	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	24	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    size_test = process-definition (defined) size_test(
        bool<> a
        bool<> b
      )
      In definition "size_test", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a<10> -> b-
        ~a<10> -> b+
      footprint: {
        bool^0 a (instantiated) = ::size_test::a (1) 
        bool^0 b (instantiated) = ::size_test::b (2) 
        bool instance pool:
        1	::size_test::a
        2	::size_test::b
        resolved prs:
        a<10> -> b-
        ~a<10> -> b+
      }
      }

  Instances:
    x = process size_test<>^0 x (instantiated) = ::x (1) (
      bool^0 a (instantiated) = ::x.a (1) 
      bool^0 b (instantiated) = ::x.b (2) 
    )
}

Created state:
process instance pool:
1	::x
bool instance pool:
1	::x.a
2	::x.b

