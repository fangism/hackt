
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	8	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	9	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	procdefn	0	#HEAD#	#TAIL#	98
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	footprnt	0	#HEAD#	#TAIL#	282
	17	##ADDR##	footprnt	0	#HEAD#	#TAIL#	323
	18	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	footprnt	0	#HEAD#	#TAIL#	314
	34	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	37	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	39	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	40	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	48	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	52	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	55	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	56	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	footprnt	0	#HEAD#	#TAIL#	515
	59	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	62	##ADDR##	procdefn	0	#HEAD#	#TAIL#	113
	63	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	64	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	65	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	66	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	70	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	71	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	72	##ADDR##	footprnt	0	#HEAD#	#TAIL#	475
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	74	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	75	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	78	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	79	##ADDR##	footprnt	0	#HEAD#	#TAIL#	382
	80	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  5 definitions
  0 typedefs
  Definitions:
    alt_e1of2 = process-definition (defined) alt_e1of2(
        e1of2<> a
      )
      In definition "alt_e1of2", we have: {
      Instances:
        a = e1of2<> alt_e1of2::a
      unroll sequence: 
        ports: (
          e1of2<> a
        )
      footprint: {
        a = process e1of2<>^0 = alt_e1of2<>::a (1) (
          e = bool^0 = alt_e1of2<>::a.e (1) 
        )
        Created state:
        process instance pool:
        1	alt_e1of2<>::a
        bool instance pool:
        1	alt_e1of2<>::a.e
      }
      }

    blah2 = process-definition (defined) blah2(
        bool<> !GND
        bool<> !Vdd
        bool<> l
      )
      In definition "blah2", we have: {
      Instances:
        !GND = bool<> blah2::!GND
        !Vdd = bool<> blah2::!Vdd
        l = bool<> blah2::l
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> l
        )
        l@[iscomb=1]
      footprint: {
        !GND = bool^0 = blah2<>::!GND (1) 
        !Vdd = bool^0 = blah2<>::!Vdd (2) 
        l = bool^0 = blah2<>::l (3) @[ iscomb ] 
        Created state:
        bool instance pool:
        1	blah2<>::!GND
        2	blah2<>::!Vdd
        3	blah2<>::l @[ iscomb ]
      }
      }

    blah3 = process-definition (defined) blah3(
        bool<> !GND
        bool<> !Vdd
        alt_e1of2<> in
      )
      In definition "blah3", we have: {
      Instances:
        !GND = bool<> blah3::!GND
        !Vdd = bool<> blah3::!Vdd
        in = alt_e1of2<> blah3::in
        in_a = bool<> blah3::in_a
        ma = blah2<> blah3::ma
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          alt_e1of2<> in
        )
        bool<> in_a
        in_a = in.a.e;
        blah2<> ma
        ma ( , , in_a);
      footprint: {
        !GND = bool^0 = blah3<>::!GND (2) 
        !Vdd = bool^0 = blah3<>::!Vdd (3) 
        in = process alt_e1of2<>^0 = blah3<>::in (1) (
          a = process e1of2<>^0 = blah3<>::in.a (2) (
            e = bool^0 = blah3<>::in_a (1) @[ iscomb ] 
          )
        )
        in_a = bool^0 = blah3<>::in_a (1) @[ iscomb ] 
        ma = process blah2<>^0 = blah3<>::ma (3) (
          !GND = bool^0 = blah3<>::!GND (2) 
          !Vdd = bool^0 = blah3<>::!Vdd (3) 
          l = bool^0 = blah3<>::in_a (1) @[ iscomb ] 
        )
        Created state:
        process instance pool:
        1	blah3<>::in
        2	blah3<>::in.a
        3	blah3<>::ma
        bool instance pool:
        1	blah3<>::in_a @[ iscomb ]
        2	blah3<>::!GND
        3	blah3<>::!Vdd
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        e = bool<> e1of2::e
      unroll sequence: 
        ports: (
          bool<> e
        )
      footprint: {
        e = bool^0 = e1of2<>::e (1) 
        Created state:
        bool instance pool:
        1	e1of2<>::e
      }
      }

    obox = process-definition (defined) obox(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "obox", we have: {
      Instances:
        !GND = bool<> obox::!GND
        !Vdd = bool<> obox::!Vdd
        bar = blah3<> obox::bar
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        blah3<> bar
      footprint: {
        !GND = bool^0 = obox<>::!GND (1) 
        !Vdd = bool^0 = obox<>::!Vdd (2) 
        bar = process blah3<>^0 = obox<>::bar (1) (
          !GND = bool^0 = obox<>::!GND (1) 
          !Vdd = bool^0 = obox<>::!Vdd (2) 
          in = process alt_e1of2<>^0 = obox<>::bar.in (2) (
            a = process e1of2<>^0 = obox<>::bar.in.a (3) (
              e = bool^0 = obox<>::bar.in.a.e (3) @[ iscomb ] 
            )
          )
        )
        Created state:
        process instance pool:
        1	obox<>::bar
        2	obox<>::bar.in
        3	obox<>::bar.in.a
        bool instance pool:
        1	obox<>::!GND
        2	obox<>::!Vdd
        3	obox<>::bar.in.a.e @[ iscomb ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = obox<> foo
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  foo = process obox<>^0 = foo (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
  )
  Created state:
  process instance pool:
  1	foo
  bool instance pool:
  1	!GND
  2	!Vdd
}
