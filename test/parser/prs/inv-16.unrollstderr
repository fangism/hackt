
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	204
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	11	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	15	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	25	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	26	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	27	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	29	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	33	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	35	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	36	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	42	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	47	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	50	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	51	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	52	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	53	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	55	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	56	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	57	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	58	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	59	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	62	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	64	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> ::inv::a
        b = bool<> ::inv::b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a -> b-
        ~a -> b+
      footprint: {
        a = bool^0 = ::inv::a 
        b = bool^0 = ::inv::b 
      }
      }

  Instances:
    i1 = inv<> i1
    i2 = inv<> i2
    i3 = inv<> i3
    p = bool<> p
    q = bool<> q
    x = bool<> x
    y = bool<> y
}

footprint: {
  i1 = process inv<>^0 = ::i1 (
    a = bool^0 = ::i1.a 
    b = bool^0 = ::i1.b 
  )
  i2 = process inv<>^0 = ::i2 (
    a = bool^0 = ::i2.a 
    b = bool^0 = ::i2.b 
  )
  i3 = process inv<>^0 = ::i3 (
    a = bool^0 = ::i3.a 
    b = bool^0 = ::i3.b 
  )
  p = bool^0 = ::i2.a 
  q = bool^0 = ::i3.b 
  x = bool^0 = ::i1.a 
  y = bool^0 = ::i1.b 
}
