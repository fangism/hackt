
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	121
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	32	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	34
	35	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	36	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	34
	40	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	footprnt	0	#HEAD#	#TAIL#	578
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	procdefn	0	#HEAD#	#TAIL#	123
	48	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	49	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	50	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	51	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	52	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	53	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	55	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	58	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	59	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	61	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	62	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	63	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	64	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	68	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	69	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	70	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	footprnt	0	#HEAD#	#TAIL#	981
	74	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	76	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	77	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	78	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	79	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	80	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	81	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	83	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	85	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	86	##ADDR##	footprnt	0	#HEAD#	#TAIL#	835
	87	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	88	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	89	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	94	##ADDR##	footprnt	0	#HEAD#	#TAIL#	922
	95	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    deep = process-definition (defined) deep(
        bool<> !GND
        bool<> !Vdd
        inv<> x
      )
      In definition "deep", we have: {
      Instances:
        !GND = bool<> deep::!GND
        !Vdd = bool<> deep::!Vdd
        x = inv<> deep::x
        y = inv<> deep::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> x
        )
        inv<> y
        x.a@[autokeeper=0]
        y.b@[autokeeper=0]
      footprint: {
        !GND = bool^0 = deep<>::!GND (1) 
        !Vdd = bool^0 = deep<>::!Vdd (2) 
        x = process inv<>^0 = deep<>::x (1) (
          !GND = bool^0 = deep<>::!GND (1) 
          !Vdd = bool^0 = deep<>::!Vdd (2) 
          a = bool^0 = deep<>::x.a (3) @[ iscomb !autokeeper ] 
          b = bool^0 = deep<>::x.b (4) 
        )
        y = process inv<>^0 = deep<>::y (2) (
          !GND = bool^0 = deep<>::!GND (1) 
          !Vdd = bool^0 = deep<>::!Vdd (2) 
          a = bool^0 = deep<>::y.a (5) @[ iscomb ] 
          b = bool^0 = deep<>::y.b (6) @[ !autokeeper ] 
        )
        Created state:
        process instance pool:
        1	deep<>::x
        2	deep<>::y
        bool instance pool:
        1	deep<>::!GND
        2	deep<>::!Vdd
        3	deep<>::x.a @[ iscomb !autokeeper ]
        4	deep<>::x.b
        5	deep<>::y.a @[ iscomb ]
        6	deep<>::y.b @[ !autokeeper ]
        bool port aliases:
        1: deep<>::x.!GND = deep<>::!GND
        2: deep<>::x.!Vdd = deep<>::!Vdd
      }
      }

    deeper = process-definition (defined) deeper(
        bool<> !GND
        bool<> !Vdd
        deep<> d[0..1]
      )
      In definition "deeper", we have: {
      Instances:
        !GND = bool<> deeper::!GND
        !Vdd = bool<> deeper::!Vdd
        d = deep<> deeper::d^1
        e = deep<> deeper::e
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          deep<> d[0..1]
        )
        deep<> e
        d[0].x.b@[iscomb]
        d[0].x.a@[iscomb]
      footprint: {
        !GND = bool^0 = deeper<>::!GND (1) 
        !Vdd = bool^0 = deeper<>::!Vdd (2) 
        d = process deep<>^1
          {
            [0] = deeper<>::d[0] (1) (
              !GND = bool^0 = deeper<>::!GND (1) 
              !Vdd = bool^0 = deeper<>::!Vdd (2) 
              x = process inv<>^0 = deeper<>::d[0].x (2) (
                !GND = bool^0 = deeper<>::!GND (1) 
                !Vdd = bool^0 = deeper<>::!Vdd (2) 
                a = bool^0 = deeper<>::d[0].x.a (3) @[ iscomb !autokeeper ] 
                b = bool^0 = deeper<>::d[0].x.b (4) @[ iscomb ] 
              )
            )
            [1] = deeper<>::d[1] (3) (
              !GND = bool^0 = deeper<>::!GND (1) 
              !Vdd = bool^0 = deeper<>::!Vdd (2) 
              x = process inv<>^0 = deeper<>::d[1].x (4) (
                !GND = bool^0 = deeper<>::!GND (1) 
                !Vdd = bool^0 = deeper<>::!Vdd (2) 
                a = bool^0 = deeper<>::d[1].x.a (5) @[ iscomb !autokeeper ] 
                b = bool^0 = deeper<>::d[1].x.b (6) 
              )
            )
          }
        e = process deep<>^0 = deeper<>::e (5) (
          !GND = bool^0 = deeper<>::!GND (1) 
          !Vdd = bool^0 = deeper<>::!Vdd (2) 
          x = process inv<>^0 = deeper<>::e.x (6) (
            !GND = bool^0 = deeper<>::!GND (1) 
            !Vdd = bool^0 = deeper<>::!Vdd (2) 
            a = bool^0 = deeper<>::e.x.a (7) @[ iscomb !autokeeper ] 
            b = bool^0 = deeper<>::e.x.b (8) 
          )
        )
        Created state:
        process instance pool:
        1	deeper<>::d[0]
        2	deeper<>::d[0].x
        3	deeper<>::d[1]
        4	deeper<>::d[1].x
        5	deeper<>::e
        6	deeper<>::e.x
        bool instance pool:
        1	deeper<>::!GND
        2	deeper<>::!Vdd
        3	deeper<>::d[0].x.a @[ iscomb !autokeeper ]
        4	deeper<>::d[0].x.b @[ iscomb ]
        5	deeper<>::d[1].x.a @[ iscomb !autokeeper ]
        6	deeper<>::d[1].x.b
        7	deeper<>::e.x.a @[ iscomb !autokeeper ]
        8	deeper<>::e.x.b
        bool port aliases:
        1: deeper<>::d[0].!GND = deeper<>::d[0].x.!GND = deeper<>::d[1].!GND = deeper<>::d[1].x.!GND = deeper<>::!GND
        2: deeper<>::d[0].!Vdd = deeper<>::d[0].x.!Vdd = deeper<>::d[1].!Vdd = deeper<>::d[1].x.!Vdd = deeper<>::!Vdd
      }
      }

    deepest = process-definition (defined) deepest(
        bool<> !GND
        bool<> !Vdd
        deeper<> y
      )
      In definition "deepest", we have: {
      Instances:
        !GND = bool<> deepest::!GND
        !Vdd = bool<> deepest::!Vdd
        y = deeper<> deepest::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          deeper<> y
        )
      footprint: {
        !GND = bool^0 = deepest<>::!GND (1) 
        !Vdd = bool^0 = deepest<>::!Vdd (2) 
        y = process deeper<>^0 = deepest<>::y (1) (
          !GND = bool^0 = deepest<>::!GND (1) 
          !Vdd = bool^0 = deepest<>::!Vdd (2) 
          d = process deep<>^1
            {
              [0] = deepest<>::y.d[0] (2) (
                !GND = bool^0 = deepest<>::!GND (1) 
                !Vdd = bool^0 = deepest<>::!Vdd (2) 
                x = process inv<>^0 = deepest<>::y.d[0].x (3) (
                  !GND = bool^0 = deepest<>::!GND (1) 
                  !Vdd = bool^0 = deepest<>::!Vdd (2) 
                  a = bool^0 = deepest<>::y.d[0].x.a (3) @[ iscomb !autokeeper ] 
                  b = bool^0 = deepest<>::y.d[0].x.b (4) @[ iscomb ] 
                )
              )
              [1] = deepest<>::y.d[1] (4) (
                !GND = bool^0 = deepest<>::!GND (1) 
                !Vdd = bool^0 = deepest<>::!Vdd (2) 
                x = process inv<>^0 = deepest<>::y.d[1].x (5) (
                  !GND = bool^0 = deepest<>::!GND (1) 
                  !Vdd = bool^0 = deepest<>::!Vdd (2) 
                  a = bool^0 = deepest<>::y.d[1].x.a (5) @[ iscomb !autokeeper ] 
                  b = bool^0 = deepest<>::y.d[1].x.b (6) 
                )
              )
            }
        )
        Created state:
        process instance pool:
        1	deepest<>::y
        2	deepest<>::y.d[0]
        3	deepest<>::y.d[0].x
        4	deepest<>::y.d[1]
        5	deepest<>::y.d[1].x
        bool instance pool:
        1	deepest<>::!GND
        2	deepest<>::!Vdd
        3	deepest<>::y.d[0].x.a @[ iscomb !autokeeper ]
        4	deepest<>::y.d[0].x.b @[ iscomb ]
        5	deepest<>::y.d[1].x.a @[ iscomb !autokeeper ]
        6	deepest<>::y.d[1].x.b
        bool port aliases:
        1: deepest<>::y.!GND = deepest<>::y.d[0].!GND = deepest<>::y.d[0].x.!GND = deepest<>::y.d[1].!GND = deepest<>::y.d[1].x.!GND = deepest<>::!GND
        2: deepest<>::y.!Vdd = deepest<>::y.d[0].!Vdd = deepest<>::y.d[0].x.!Vdd = deepest<>::y.d[1].!Vdd = deepest<>::y.d[1].x.!Vdd = deepest<>::!Vdd
      }
      }

    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        a@[iscomb]
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) 
        !Vdd = bool^0 = inv<>::!Vdd (2) 
        a = bool^0 = inv<>::a (3) @[ iscomb ] 
        b = bool^0 = inv<>::b (4) 
        Created state:
        bool instance pool:
        1	inv<>::!GND
        2	inv<>::!Vdd
        3	inv<>::a @[ iscomb ]
        4	inv<>::b
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    sh1t = deepest<> sh1t
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  sh1t = process deepest<>^0 = sh1t (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    y = process deeper<>^0 = sh1t.y (2) (
      !GND = bool^0 = !GND (1) 
      !Vdd = bool^0 = !Vdd (2) 
      d = process deep<>^1
        {
          [0] = sh1t.y.d[0] (3) (
            !GND = bool^0 = !GND (1) 
            !Vdd = bool^0 = !Vdd (2) 
            x = process inv<>^0 = sh1t.y.d[0].x (4) (
              !GND = bool^0 = !GND (1) 
              !Vdd = bool^0 = !Vdd (2) 
              a = bool^0 = sh1t.y.d[0].x.a (3) @[ iscomb !autokeeper ] 
              b = bool^0 = sh1t.y.d[0].x.b (4) @[ iscomb ] 
            )
          )
          [1] = sh1t.y.d[1] (5) (
            !GND = bool^0 = !GND (1) 
            !Vdd = bool^0 = !Vdd (2) 
            x = process inv<>^0 = sh1t.y.d[1].x (6) (
              !GND = bool^0 = !GND (1) 
              !Vdd = bool^0 = !Vdd (2) 
              a = bool^0 = sh1t.y.d[1].x.a (5) @[ iscomb !autokeeper ] 
              b = bool^0 = sh1t.y.d[1].x.b (6) 
            )
          )
        }
    )
  )
  Created state:
  process instance pool:
  1	sh1t
  2	sh1t.y
  3	sh1t.y.d[0]
  4	sh1t.y.d[0].x
  5	sh1t.y.d[1]
  6	sh1t.y.d[1].x
  bool instance pool:
  1	!GND
  2	!Vdd
  3	sh1t.y.d[0].x.a @[ iscomb !autokeeper ]
  4	sh1t.y.d[0].x.b @[ iscomb ]
  5	sh1t.y.d[1].x.a @[ iscomb !autokeeper ]
  6	sh1t.y.d[1].x.b
}
