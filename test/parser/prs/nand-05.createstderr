
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	522
	4	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	9	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	10	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	11	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	12	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	14	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	33
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	20	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	21	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	22	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	25	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	34	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	78
	38	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	33
	40	##ADDR##	proccoll	0	#HEAD#	#TAIL#	56
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	43	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	78
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	33

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    nandN = process-definition (defined) nandN<
      pint<> N
      >(
        bool<> in

        bool<> _out
      )
      In definition "nandN", we have: {
      Parameters:
        N = pint<> N
      Instances:
        _out = bool<> _out
        in = bool<> in

      unroll sequence: 
        pint<> N
        bool<> in[0..N-1]
        bool<> _out
      prs:
        (&:i:[0..N-1]: in[$i]) -> _out-
        (|:i:[0..N-1]: ~in[$i]) -> _out+
      footprint collection: {
        <4> {
          bool^1 in
            unrolled indices: {
              0 = ::nandN::in[0] (1) 
              1 = ::nandN::in[1] (2) 
              2 = ::nandN::in[2] (3) 
              3 = ::nandN::in[3] (4) 
            }
          pint^0 N value: ?
          bool^0 _out (instantiated) = ::nandN::_out (5) 
          bool instance pool:
          1	::nandN::in[0]
          2	::nandN::in[1]
          3	::nandN::in[2]
          4	::nandN::in[3]
          5	::nandN::_out
          resolved prs:
          in[0] & in[1] & in[2] & in[3] -> _out-
          ~in[0] | ~in[1] | ~in[2] | ~in[3] -> _out+
        }
      }
      }

  Instances:
    foo = process nandN<4>^0 foo (instantiated) = ::foo (1) (
      bool^1 in
        unrolled indices: {
          0 = ::foo.in[0] (1) 
          1 = ::foo.in[1] (2) 
          2 = ::foo.in[2] (3) 
          3 = ::foo.in[3] (4) 
        }
      bool^0 _out (instantiated) = ::foo._out (5) 
    )
}

Created state:
process instance pool:
1	::foo
bool instance pool:
1	::foo.in[0]
2	::foo.in[1]
3	::foo.in[2]
4	::foo.in[3]
5	::foo._out

