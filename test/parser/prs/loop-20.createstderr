
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	10	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	24	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	28
	29	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	30	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	24
	32	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	34	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	35	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	38	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	44	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	45	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	24
	50	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	51	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	54	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	24
	57	##ADDR##	PRSrcond	0	#HEAD#	#TAIL#	28
	58	##ADDR##	pireltex	0	#HEAD#	#TAIL#	22
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	62	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	63	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	64	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	67	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	71	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	74	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	75	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	76	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1370
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	88	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	89	##ADDR##	footprnt	0	#HEAD#	#TAIL#	492
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    nandN = process-definition (defined) nandN<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> in[0..N-1]
        bool<> _out
      )
      In definition "nandN", we have: {
      Parameters:
        N = pint<> nandN::N
      Instances:
        !GND = bool<> nandN::!GND
        !Vdd = bool<> nandN::!Vdd
        _out = bool<> nandN::_out
        in = bool<> nandN::in^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> in[0..N-1]
          bool<> _out
        )
      prs:
        (:k:[0..1]:
          {
          (&:i:[0..N-1]: in[($i+$k)%N]) -> _out-
          }
          (:i:[0..N-1]:
            {
            [ $i!=0 ->
              (&:j:[0..$i-1]: ~in[($i+$k+1)%N]) -> _out+
            ]
            }
          )
        )
      footprint collection: {
        <4> {
          !GND = bool^0 = nandN<4>::!GND (1) 
          !Vdd = bool^0 = nandN<4>::!Vdd (2) 
          N = pint^0 value: 4
          _out = bool^0 = nandN<4>::_out (3) 
          in = bool^1
            {
              [0] = nandN<4>::in[0] (4) 
              [1] = nandN<4>::in[1] (5) 
              [2] = nandN<4>::in[2] (6) 
              [3] = nandN<4>::in[3] (7) 
            }
          Created state:
          bool instance pool: (7 ports)
          1	nandN<4>::!GND	
          2	nandN<4>::!Vdd	
          3	nandN<4>::_out	
          4	nandN<4>::in[0]	
          5	nandN<4>::in[1]	
          6	nandN<4>::in[2]	
          7	nandN<4>::in[3]	
          resolved prs:
          in[0] & in[1] & in[2] & in[3] -> _out-
          ~in[2] -> _out+
          ~in[3] & ~in[3] -> _out+
          ~in[0] & ~in[0] & ~in[0] -> _out+
          in[1] & in[2] & in[3] & in[0] -> _out-
          ~in[3] -> _out+
          ~in[0] & ~in[0] -> _out+
          ~in[1] & ~in[1] & ~in[1] -> _out+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..0 none none : 2, 1
          1..1 none none : 2, 1
          2..2 none none : 2, 1
          3..3 none none : 2, 1
          4..4 none none : 2, 1
          5..5 none none : 2, 1
          6..6 none none : 2, 1
          7..7 none none : 2, 1
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = nandN<4> foo
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  foo = process nandN<4>^0 = foo (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    in = bool^1
      {
        [0] = foo.in[0] (3) 
        [1] = foo.in[1] (4) 
        [2] = foo.in[2] (5) 
        [3] = foo.in[3] (6) 
      }
    _out = bool^0 = foo._out (7) 
  )
  Created state:
  process instance pool: (0 ports)
  1	foo	nandN<4>
    bool: 1,2,7,3,4,5,6
  bool instance pool: (0 ports)
  1	!GND	
  2	!Vdd	
  3	foo.in[0]	
  4	foo.in[1]	
  5	foo.in[2]	
  6	foo.in[3]	
  7	foo._out	
}
