
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	100
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	11	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	15	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	footprnt	0	#HEAD#	#TAIL#	371
	20	##ADDR##	procdefn	0	#HEAD#	#TAIL#	94
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	footprnt	0	#HEAD#	#TAIL#	336
	28	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	29	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	30	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	31	##ADDR##	procdefn	0	#HEAD#	#TAIL#	175
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	33	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	34	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	35	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	36	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	37	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	43	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	49	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	50	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	54	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	55	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	59	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	60	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	65	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	69	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	70	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	73	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	75	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	76	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	77	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	78	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	82	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	83	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	88	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	89	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	90	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	91	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	95	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	96	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	101	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	102	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	103	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	104	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	109	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	111	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	112	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	114	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	115	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	116	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	117	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	118	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	119	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	120	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	121	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	123	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	124	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	126	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	127	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	128	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	129	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	130	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	131	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	132	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	133	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	136	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	137	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	138	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	139	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	141	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	142	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	143	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	144	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	145	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	146	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	147	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	148	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	149	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	150	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	151	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	152	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	153	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1158
	155	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	156	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	157	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	158	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	159	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	160	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	161	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	162	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	163	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	164	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	165	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	166	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	167	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	168	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	169	##ADDR##	footprnt	0	#HEAD#	#TAIL#	710
	170	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	171	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	172	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
      unroll sequence: 
        bool<> d[0..1]
        bool<> e
      footprint: {
        d = bool^1
          {
            [0] = e1of2::d[0] (2) 
            [1] = e1of2::d[1] (3) 
          }
        e = bool^0 = e1of2::e (1) 
        Created state:
        bool instance pool:
        1	e1of2::e
        2	e1of2::d[0]
        3	e1of2::d[1]
      }
      }

    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a -> b-
        ~a -> b+
      footprint: {
        a = bool^0 = inv::a (1) 
        b = bool^0 = inv::b (2) 
        Created state:
        bool instance pool:
        1	inv::a
        2	inv::b
        resolved prs:
        a -> b-
        ~a -> b+
      }
      }

    wchb_e1of2 = process-definition (defined) wchb_e1of2(
        e1of2<> L
        e1of2<> R
      )
      In definition "wchb_e1of2", we have: {
      Instances:
        L = e1of2<> wchb_e1of2::L
        R = e1of2<> wchb_e1of2::R
        _r = bool<> wchb_e1of2::_r^1
        r0 = inv<> wchb_e1of2::r0
        r1 = inv<> wchb_e1of2::r1
        re = inv<> wchb_e1of2::re
        rv = bool<> wchb_e1of2::rv
      unroll sequence: 
        e1of2<> L
        e1of2<> R
        bool<> _r[0..1]
        bool<> rv
        inv<> r0
        r0 (_r[0], R.d[0]);
        inv<> r1
        r1 (_r[1], R.d[1]);
        inv<> re
        re (rv, L.e);
      prs:
        L.d[0] & R.e -> _r[0]-
        L.d[1] & R.e -> _r[1]-
        ~_r[0] | ~_r[1] -> rv+
        ~L.d[0] & ~R.e -> _r[0]+
        ~L.d[1] & ~R.e -> _r[1]+
        _r[0] & _r[1] -> rv-
      footprint: {
        L = process e1of2<>^0 = wchb_e1of2::L (1) (
          d = bool^1
            {
              [0] = wchb_e1of2::L.d[0] (1) 
              [1] = wchb_e1of2::L.d[1] (2) 
            }
          e = bool^0 = wchb_e1of2::L.e (3) 
        )
        R = process e1of2<>^0 = wchb_e1of2::R (2) (
          d = bool^1
            {
              [0] = wchb_e1of2::R.d[0] (4) 
              [1] = wchb_e1of2::R.d[1] (5) 
            }
          e = bool^0 = wchb_e1of2::R.e (6) 
        )
        _r = bool^1
          {
            [0] = wchb_e1of2::_r[0] (7) 
            [1] = wchb_e1of2::_r[1] (8) 
          }
        r0 = process inv<>^0 = wchb_e1of2::r0 (3) (
          a = bool^0 = wchb_e1of2::_r[0] (7) 
          b = bool^0 = wchb_e1of2::R.d[0] (4) 
        )
        r1 = process inv<>^0 = wchb_e1of2::r1 (4) (
          a = bool^0 = wchb_e1of2::_r[1] (8) 
          b = bool^0 = wchb_e1of2::R.d[1] (5) 
        )
        re = process inv<>^0 = wchb_e1of2::re (5) (
          a = bool^0 = wchb_e1of2::rv (9) 
          b = bool^0 = wchb_e1of2::L.e (3) 
        )
        rv = bool^0 = wchb_e1of2::rv (9) 
        Created state:
        process instance pool:
        1	wchb_e1of2::L
        2	wchb_e1of2::R
        3	wchb_e1of2::r0
        4	wchb_e1of2::r1
        5	wchb_e1of2::re
        bool instance pool:
        1	wchb_e1of2::L.d[0]
        2	wchb_e1of2::L.d[1]
        3	wchb_e1of2::L.e
        4	wchb_e1of2::R.d[0]
        5	wchb_e1of2::R.d[1]
        6	wchb_e1of2::R.e
        7	wchb_e1of2::_r[0]
        8	wchb_e1of2::_r[1]
        9	wchb_e1of2::rv
        resolved prs:
        L.d[0] & R.e -> _r[0]-
        L.d[1] & R.e -> _r[1]-
        ~_r[0] | ~_r[1] -> rv+
        ~L.d[0] & ~R.e -> _r[0]+
        ~L.d[1] & ~R.e -> _r[1]+
        _r[0] & _r[1] -> rv-
      }
      }

  Instances:
    L = e1of2<> L
    R = e1of2<> R
    b = wchb_e1of2<> b
}

footprint: {
  L = process e1of2<>^0 = L (1) (
    d = bool^1
      {
        [0] = L.d[0] (1) 
        [1] = L.d[1] (2) 
      }
    e = bool^0 = L.e (3) 
  )
  R = process e1of2<>^0 = R (2) (
    d = bool^1
      {
        [0] = R.d[0] (4) 
        [1] = R.d[1] (5) 
      }
    e = bool^0 = R.e (6) 
  )
  b = process wchb_e1of2<>^0 = b (3) (
    L = process e1of2<>^0 = L (1) (
      d = bool^1
        {
          [0] = L.d[0] (1) 
          [1] = L.d[1] (2) 
        }
      e = bool^0 = L.e (3) 
    )
    R = process e1of2<>^0 = R (2) (
      d = bool^1
        {
          [0] = R.d[0] (4) 
          [1] = R.d[1] (5) 
        }
      e = bool^0 = R.e (6) 
    )
  )
  Created state:
  process instance pool:
  1	L
  2	R
  3	b
  bool instance pool:
  1	L.d[0]
  2	L.d[1]
  3	L.e
  4	R.d[0]
  5	R.d[1]
  6	R.e
}
