
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	144
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	37
	16	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	17	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	37
	25	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	26	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	28	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	37
	31	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	37
	35	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	37	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	37
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	37
	44	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	46	##ADDR##	footprnt	0	#HEAD#	#TAIL#	666
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	55	##ADDR##	footprnt	0	#HEAD#	#TAIL#	400
	56	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> x
        bool<> y
        bool<> z
        bool<> w
      )
      In definition "foo", we have: {
      Instances:
        w = bool<> foo::w
        x = bool<> foo::x
        y = bool<> foo::y
        z = bool<> foo::z
      unroll sequence: 
        bool<> x
        bool<> y
        bool<> z
        bool<> w
      prs:
        x & y -> z- [iskeeper=1; ]
        ~x & ~y -> z+ [iskeeper=1; ]
        y -> z- [iskeeper=; ]
        ~y -> z+ [iskeeper=; ]
        x -> z- [iskeeper=0; ]
        ~x -> z+ [iskeeper=0; ]
      footprint: {
        w = bool^0 = foo::w (4) 
        x = bool^0 = foo::x (1) 
        y = bool^0 = foo::y (2) 
        z = bool^0 = foo::z (3) 
        Created state:
        bool instance pool:
        1	foo::x
        2	foo::y
        3	foo::z
        4	foo::w
        resolved prs:
        x & y -> z- [iskeeper=1; ]
        ~x & ~y -> z+ [iskeeper=1; ]
        y -> z- [iskeeper=; ]
        ~y -> z+ [iskeeper=; ]
        x -> z- [iskeeper=0; ]
        ~x -> z+ [iskeeper=0; ]
      }
      }

  Instances:
    f = foo<> f
}

footprint: {
  f = process foo<>^0 = f (1) (
    x = bool^0 = f.x (1) 
    y = bool^0 = f.y (2) 
    z = bool^0 = f.z (3) 
    w = bool^0 = f.w (4) 
  )
  Created state:
  process instance pool:
  1	f
  bool instance pool:
  1	f.x
  2	f.y
  3	f.z
  4	f.w
}
