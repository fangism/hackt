
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	footprnt	0	#HEAD#	#TAIL#	316
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	39	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	42	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	footprnt	0	#HEAD#	#TAIL#	560
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	50	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	51	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	52	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	53	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	54	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	55	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	56	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	62	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	63	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	65	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	75	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	76	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	footprnt	0	#HEAD#	#TAIL#	899
	82	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	85	##ADDR##	procdefn	0	#HEAD#	#TAIL#	114
	86	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	87	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	88	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	89	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	90	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	92	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	94	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	98	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	102	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	103	##ADDR##	footprnt	0	#HEAD#	#TAIL#	643
	104	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	105	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	106	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	107	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	108	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	109	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	110	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	112	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	113	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	114	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	115	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	116	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	117	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	118	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	119	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	120	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    A = process-definition (defined) A(
        bool<> !GND
        bool<> !Vdd
        e1of2<> l
        e1of2<> r
      )
      In definition "A", we have: {
      Instances:
        !GND = bool<> A::!GND
        !Vdd = bool<> A::!Vdd
        l = e1of2<> A::l
        l_e = bool<> A::l_e
        r = e1of2<> A::r
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<> l
          e1of2<> r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> l_e
        l_e = l.e;
        l_e@[iscomb=1]
      footprint: {
        !GND = bool^0 = A<>::!GND (7) @[ supply_low port-alias ] 
        !Vdd = bool^0 = A<>::!Vdd (8) @[ supply_high port-alias ] 
        l = process e1of2<>^0 = A<>::l (1) @[ port-alias ] (
          t = bool^0 = A<>::l.t (1) @[ port-alias ] 
          f = bool^0 = A<>::l.f (2) @[ port-alias ] 
          e = bool^0 = A<>::l_e (3) @[ iscomb port-alias ] 
        )
        l_e = bool^0 = A<>::l_e (3) @[ iscomb port-alias ] 
        r = process e1of2<>^0 = A<>::r (2) @[ port-alias ] (
          t = bool^0 = A<>::r.t (4) @[ port-alias ] 
          f = bool^0 = A<>::r.f (5) @[ port-alias ] 
          e = bool^0 = A<>::r.e (6) @[ port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	A<>::l @[ port-alias ]	e1of2<>
          bool: 1,2,3
        2	A<>::r @[ port-alias ]	e1of2<>
          bool: 4,5,6
        bool instance pool: (8 ports, 0 local, 0 mapped)
        1	A<>::l.t @[ port-alias ]	
        2	A<>::l.f @[ port-alias ]	
        3	A<>::l_e @[ iscomb port-alias ]	
        4	A<>::r.t @[ port-alias ]	
        5	A<>::r.f @[ port-alias ]	
        6	A<>::r.e @[ port-alias ]	
        7	A<>::!GND @[ supply_low port-alias ]	
        8	A<>::!Vdd @[ supply_high port-alias ]	
      }
      }

    B = process-definition (defined) B(
        bool<> !GND
        bool<> !Vdd
        e1of2<> l[0..0]
        e1of2<> r
      )
      In definition "B", we have: {
      Instances:
        !GND = bool<> B::!GND
        !Vdd = bool<> B::!Vdd
        l = e1of2<> B::l^1
        m = A<> B::m
        r = e1of2<> B::r
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<> l[0..0]
          e1of2<> r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        A<> m
        m ( , , l[0], r);
      footprint: {
        !GND = bool^0 = B<>::!GND (4) @[ supply_low port-alias ] 
        !Vdd = bool^0 = B<>::!Vdd (5) @[ supply_high port-alias ] 
        l = process e1of2<>^1
          {
            [0] = B<>::l[0] (2) @[ port-alias ] (
              t = bool^0 = B<>::l[0].t (6) @[ port-alias ] 
              f = bool^0 = B<>::l[0].f (7) @[ port-alias ] 
              e = bool^0 = B<>::l[0].e (8) @[ iscomb port-alias ] 
            )
          }
        m = process A<>^0 = B<>::m (3) (
          !GND = bool^0 = B<>::!GND (4) @[ supply_low port-alias ] 
          !Vdd = bool^0 = B<>::!Vdd (5) @[ supply_high port-alias ] 
          l = process e1of2<>^0 = B<>::l[0] (2) @[ port-alias ] (
            t = bool^0 = B<>::l[0].t (6) @[ port-alias ] 
            f = bool^0 = B<>::l[0].f (7) @[ port-alias ] 
            e = bool^0 = B<>::l[0].e (8) @[ iscomb port-alias ] 
          )
          r = process e1of2<>^0 = B<>::r (1) @[ port-alias ] (
            t = bool^0 = B<>::r.t (1) @[ port-alias ] 
            f = bool^0 = B<>::r.f (2) @[ port-alias ] 
            e = bool^0 = B<>::r.e (3) @[ port-alias ] 
          )
        )
        r = process e1of2<>^0 = B<>::r (1) @[ port-alias ] (
          t = bool^0 = B<>::r.t (1) @[ port-alias ] 
          f = bool^0 = B<>::r.f (2) @[ port-alias ] 
          e = bool^0 = B<>::r.e (3) @[ port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 1 local, 0 mapped)
        1	B<>::r @[ port-alias ]	e1of2<>
          bool: 1,2,3
        2	B<>::l[0] @[ port-alias ]	e1of2<>
          bool: 6,7,8
        3	B<>::m	A<>
          process: 2,1
          bool: 6,7,8,1,2,3,4,5
        bool instance pool: (8 ports, 0 local, 0 mapped)
        1	B<>::r.t @[ port-alias ]	
        2	B<>::r.f @[ port-alias ]	
        3	B<>::r.e @[ port-alias ]	
        4	B<>::!GND @[ supply_low port-alias ]	
        5	B<>::!Vdd @[ supply_high port-alias ]	
        6	B<>::l[0].t @[ port-alias ]	
        7	B<>::l[0].f @[ port-alias ]	
        8	B<>::l[0].e @[ iscomb port-alias ]	
      }
      }

    C = process-definition (defined) C(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "C", we have: {
      Instances:
        !GND = bool<> C::!GND
        !Vdd = bool<> C::!Vdd
        bar = B<> C::bar
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        B<> bar
      footprint: {
        !GND = bool^0 = C<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = C<>::!Vdd (2) @[ supply_high port-alias ] 
        bar = process B<>^0 = C<>::bar (1) (
          !GND = bool^0 = C<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = C<>::!Vdd (2) @[ supply_high port-alias ] 
          l = process e1of2<>^1
            {
              [0] = C<>::bar.l[0] (2) (
                t = bool^0 = C<>::bar.l[0].t (3) 
                f = bool^0 = C<>::bar.l[0].f (4) 
                e = bool^0 = C<>::bar.l[0].e (5) @[ iscomb ] 
              )
            }
          r = process e1of2<>^0 = C<>::bar.r (3) (
            t = bool^0 = C<>::bar.r.t (6) 
            f = bool^0 = C<>::bar.r.f (7) 
            e = bool^0 = C<>::bar.r.e (8) 
          )
        )
        Created state:
        process instance pool: (0 ports, 3 local, 1 mapped)
        1	C<>::bar	B<>
          process: 3,2
          bool: 6,7,8,1,2,3,4,5
        2	C<>::bar.l[0]	e1of2<>
          bool: 3,4,5
        3	C<>::bar.r	e1of2<>
          bool: 6,7,8
        private sub-process index map:
          (1 -> 0)
          (4 -> 1)
        bool instance pool: (2 ports, 6 local, 0 mapped)
        1	C<>::!GND @[ supply_low port-alias ]	
        2	C<>::!Vdd @[ supply_high port-alias ]	
        3	C<>::bar.l[0].t	
        4	C<>::bar.l[0].f	
        5	C<>::bar.l[0].e @[ iscomb ]	
        6	C<>::bar.r.t	
        7	C<>::bar.r.f	
        8	C<>::bar.r.e	
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> t
        bool<> f
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        e = bool<> e1of2::e
        f = bool<> e1of2::f
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> t
          bool<> f
          bool<> e
        )
      footprint: {
        e = bool^0 = e1of2<>::e (3) @[ port-alias ] 
        f = bool^0 = e1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	e1of2<>::t @[ port-alias ]	
        2	e1of2<>::f @[ port-alias ]	
        3	e1of2<>::e @[ port-alias ]	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = C<> foo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  foo = process C<>^0 = foo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 4 mapped)
  1	foo	C<>
    bool: 1,2
  private sub-process index map:
    (1 -> 0)
    (2 -> 4)
  bool instance pool: (0 ports, 2 local, 6 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 6)
}
