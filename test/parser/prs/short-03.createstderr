
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	141
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	25	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	32	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	33	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	36	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	44	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	45	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	46	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	footprnt	0	#HEAD#	#TAIL#	560
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	footprnt	0	#HEAD#	#TAIL#	694
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	62	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	67	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	71	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	77	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	footprnt	0	#HEAD#	#TAIL#	666
	80	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    nand = process-definition (defined) nand<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> in[0..N-1]
        bool<> out
      )
      In definition "nand", we have: {
      Parameters:
        N = pint<> nand::N
      Instances:
        !GND = bool<> nand::!GND
        !Vdd = bool<> nand::!Vdd
        in = bool<> nand::in^1
        out = bool<> nand::out
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> in[0..N-1]
          bool<> out
        )
      prs:
        {
        (&:i:[0..N-1]: in[$i]) -> out-
        (|:i:[0..N-1]: ~in[$i]) -> out+
        }
      footprint collection: {
        <2> {
          !GND = bool^0 = nand<2>::!GND (1) 
          !Vdd = bool^0 = nand<2>::!Vdd (2) 
          N = pint^0 value: 2
          in = bool^1
            {
              [0] = nand<2>::in[0] (4) 
              [1] = nand<2>::in[1] (5) 
            }
          out = bool^0 = nand<2>::out (3) 
          Created state:
          bool instance pool: (5 ports, 0 local, 0 mapped)
          1	nand<2>::!GND	
          2	nand<2>::!Vdd	
          3	nand<2>::out	
          4	nand<2>::in[0]	
          5	nand<2>::in[1]	
          resolved prs:
          in[0] & in[1] -> out-
          ~in[0] | ~in[1] -> out+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..1 none none : 2, 1 | 2, 1
        }
        <4> {
          !GND = bool^0 = nand<4>::!GND (1) 
          !Vdd = bool^0 = nand<4>::!Vdd (2) 
          N = pint^0 value: 4
          in = bool^1
            {
              [0] = nand<4>::in[0] (4) 
              [1] = nand<4>::in[1] (5) 
              [2] = nand<4>::in[2] (6) 
              [3] = nand<4>::in[3] (7) 
            }
          out = bool^0 = nand<4>::out (3) 
          Created state:
          bool instance pool: (7 ports, 0 local, 0 mapped)
          1	nand<4>::!GND	
          2	nand<4>::!Vdd	
          3	nand<4>::out	
          4	nand<4>::in[0]	
          5	nand<4>::in[1]	
          6	nand<4>::in[2]	
          7	nand<4>::in[3]	
          resolved prs:
          in[0] & in[1] & in[2] & in[3] -> out-
          ~in[0] | ~in[1] | ~in[2] | ~in[3] -> out+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..1 none none : 2, 1 | 2, 1
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = nand<2> a
    b = nand<4> b
    z = bool<> z
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  a = process nand<2>^0 = a (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    in = bool^1
      {
        [0] = a.in[0] (3) 
        [1] = a.in[1] (4) 
      }
    out = bool^0 = z (5) 
  )
  b = process nand<4>^0 = b (2) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    in = bool^1
      {
        [0] = b.in[0] (6) 
        [1] = b.in[1] (7) 
        [2] = b.in[2] (8) 
        [3] = b.in[3] (9) 
      }
    out = bool^0 = z (5) 
  )
  z = bool^0 = z (5) 
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	a	nand<2>
    bool: 1,2,5,3,4
  2	b	nand<4>
    bool: 1,2,5,6,7,8,9
  bool instance pool: (0 ports, 9 local, 0 mapped)
  1	!GND	
  2	!Vdd	
  3	a.in[0]	
  4	a.in[1]	
  5	z	
  6	b.in[0]	
  7	b.in[1]	
  8	b.in[2]	
  9	b.in[3]	
}
