
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	30	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	35	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	37	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	footprnt	0	#HEAD#	#TAIL#	471
	40	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	41	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	43	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	44	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	45	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	62	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	63	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	68	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	69	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	footprnt	0	#HEAD#	#TAIL#	471
	72	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	73	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	74	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	75	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	78	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	81	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	87	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	88	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	90	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	91	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	96	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	97	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	footprnt	0	#HEAD#	#TAIL#	636
	101	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	102	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  6 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bool_sink = process-definition (defined) bool_sink(
        bool<> !GND
        bool<> !Vdd
        bool<>? li
        bool<>! lo
      )
      In definition "bool_sink", we have: {
      Instances:
        !GND = bool<> bool_sink::!GND
        !Vdd = bool<> bool_sink::!Vdd
        li = bool<>? bool_sink::li
        lo = bool<>! bool_sink::lo
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<>? li
          bool<>! lo
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        li -> lo+
        ~li -> lo-
        }
      footprint: {
        !GND = bool^0 = bool_sink<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bool_sink<>::!Vdd (2) @[ supply_high port-alias ] 
        li = bool^0 = bool_sink<>::li (3) @[ port? port-alias loc-FO- loc-FO+ ] 
        lo = bool^0 = bool_sink<>::lo (4) @[ port! port-alias loc-FI- loc-FI+ ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	bool_sink<>::!GND @[ supply_low port-alias ]	
        2	bool_sink<>::!Vdd @[ supply_high port-alias ]	
        3	bool_sink<>::li @[ port? port-alias loc-FO- loc-FO+ ]	
        4	bool_sink<>::lo @[ port! port-alias loc-FI- loc-FI+ ]	
        resolved prs:
        li -> lo+
        ~li -> lo-
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

    bool_source = process-definition (defined) bool_source(
        bool<> !GND
        bool<> !Vdd
        bool<>? li
        bool<>! lo
      )
      In definition "bool_source", we have: {
      Instances:
        !GND = bool<> bool_source::!GND
        !Vdd = bool<> bool_source::!Vdd
        li = bool<>? bool_source::li
        lo = bool<>! bool_source::lo
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<>? li
          bool<>! lo
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        ~li -> lo+
        li -> lo-
        }
      footprint: {
        !GND = bool^0 = bool_source<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bool_source<>::!Vdd (2) @[ supply_high port-alias ] 
        li = bool^0 = bool_source<>::li (3) @[ port? port-alias loc-FO- loc-FO+ ] 
        lo = bool^0 = bool_source<>::lo (4) @[ port! port-alias loc-FI- loc-FI+ ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	bool_source<>::!GND @[ supply_low port-alias ]	
        2	bool_source<>::!Vdd @[ supply_high port-alias ]	
        3	bool_source<>::li @[ port? port-alias loc-FO- loc-FO+ ]	
        4	bool_source<>::lo @[ port! port-alias loc-FI- loc-FI+ ]	
        resolved prs:
        ~li -> lo+
        li -> lo-
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    SNK = bool_sink<> SNK
    SRC = bool_source<> SRC
    lack = bool<> lack
    lreq = bool<> lreq
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  SNK = process bool_sink<>^0 = SNK (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    li = bool^0 = lreq (4) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
    lo = bool^0 = lack (3) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
  )
  SRC = process bool_source<>^0 = SRC (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    li = bool^0 = lack (3) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
    lo = bool^0 = lreq (4) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
  )
  lack = bool^0 = lack (3) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
  lreq = bool^0 = lreq (4) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	SRC	bool_source<>
    bool: 1,2,3,4
  2	SNK	bool_sink<>
    bool: 1,2,4,3
  bool instance pool: (0 ports, 4 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	lack @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
  4	lreq @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
}
