
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	SPCinvar	0	#HEAD#	#TAIL#	16
	29	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	31	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	430
	36	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	37	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	40	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	41	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	42	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	SPCinvar	0	#HEAD#	#TAIL#	16
	58	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	59	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	footprnt	0	#HEAD#	#TAIL#	417
	64	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	69	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	81	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	82	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	87	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	88	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	footprnt	0	#HEAD#	#TAIL#	636
	92	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	93	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  6 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        bool<> !GND
        bool<> !Vdd
        bool<> w
        bool<> z
      )
      In definition "bar", we have: {
      Instances:
        !GND = bool<> bar::!GND
        !Vdd = bool<> bar::!Vdd
        w = bool<> bar::w
        z = bool<> bar::z
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> w
          bool<> z
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      spec:
        $(~(w & z))
      footprint: {
        !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
        w = bool^0 = bar<>::w (3) @[ port-alias ] 
        z = bool^0 = bar<>::z (4) @[ port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	bar<>::!GND @[ supply_low port-alias ]	
        2	bar<>::!Vdd @[ supply_high port-alias ]	
        3	bar<>::w @[ port-alias ]	
        4	bar<>::z @[ port-alias ]	
        invariant exprs: 
        $(~(w & z))
      }
      }

    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        x = bool<> foo::x
        y = bool<> foo::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      spec:
        $(x | y)
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
        x = bool^0 = foo<>::x (3) @[ port-alias ] 
        y = bool^0 = foo<>::y (4) @[ port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	foo<>::!GND @[ supply_low port-alias ]	
        2	foo<>::!Vdd @[ supply_high port-alias ]	
        3	foo<>::x @[ port-alias ]	
        4	foo<>::y @[ port-alias ]	
        invariant exprs: 
        $(x | y)
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = bool<> a
    b = bool<> b
    barfu = bar<> barfu
    fubar = foo<> fubar
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  a = bool^0 = a (3) 
  b = bool^0 = b (4) 
  barfu = process bar<>^0 = barfu (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    w = bool^0 = b (4) 
    z = bool^0 = a (3) 
  )
  fubar = process foo<>^0 = fubar (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^0 = a (3) 
    y = bool^0 = b (4) 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	fubar	foo<>
    bool: 1,2,3,4
  2	barfu	bar<>
    bool: 1,2,4,3
  bool instance pool: (0 ports, 4 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	a	
  4	b	
}
