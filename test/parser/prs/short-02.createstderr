
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	384
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	37
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	31
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	12	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	15	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	16	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	17	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	20	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	21	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	22	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	25	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	28	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	32	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	34	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	35	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	38	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	43	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	45	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	48	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	52
	49	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	50	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	51	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	52	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	57
	57	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	41
	58	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	41
	59	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	60	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	61	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	62	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	63	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	57
	67	##ADDR##	portconn	0	#HEAD#	#TAIL#	24
	68	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	69	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	70	##ADDR##	portconn	0	#HEAD#	#TAIL#	24
	71	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	72	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    celem = process-definition (defined) celem<
      pint<> N
      >(
        bool<> in with indices: {
          [0..::celem::N-1]
        }

        bool<> out
      )
      In definition "celem", we have: {
      Parameters:
        N = pint<> N
      Instances:
        in = bool<> in with indices: {
          [0..::celem::N-1]
        }

        out = bool<> out
      unroll sequence: 
        pint<> N
        bool<> in[0..N-1]
        bool<> out
      prs:
        (&:i:[0..N-1]: in[$i]) -> out-
        (&:i:[0..N-1]: ~in[$i]) -> out+
      footprint collection: {
        <2> {
          bool^0 out (instantiated) = ::celem::out (3) 
          bool^1 in with indices: {
          }
            unrolled indices: {
              0 = ::celem::in[0] (1) 
              1 = ::celem::in[1] (2) 
            }
          pint^0 N value: ?
          bool instance pool:
          1	::celem::in[0]
          2	::celem::in[1]
          3	::celem::out
          resolved prs:
          in[0] & in[1] -> out-
          ~in[0] & ~in[1] -> out+
        }
      }
      }

  Instances:
    a = process celem<2>^0 a (instantiated) = ::a (1) (
      bool^1 in with indices: {
        [0..::celem::N-1]
      }
        unrolled indices: {
          0 = ::a.in[0] (1) 
          1 = ::a.in[1] (2) 
        }
      bool^0 out (instantiated) = ::z (3) 
    )
    b = process celem<2>^0 b (instantiated) = ::b (2) (
      bool^1 in with indices: {
        [0..::celem::N-1]
      }
        unrolled indices: {
          0 = ::b.in[0] (4) 
          1 = ::b.in[1] (5) 
        }
      bool^0 out (instantiated) = ::a.out (3) 
    )
    z = bool^0 z (instantiated) = ::b.out (3) 
}

Created state:
process instance pool:
1	::a
2	::b
bool instance pool:
1	::a.in[0]
2	::a.in[1]
3	::z
4	::b.in[0]
5	::b.in[1]

