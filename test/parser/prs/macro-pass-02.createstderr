
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	65
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	355
	5	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	12	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	procdefn	0	#HEAD#	#TAIL#	267
	15	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	37
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	28	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	29	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	procdefn	0	#HEAD#	#TAIL#	267
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	40	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	37
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	45	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	51	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	52	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	57	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	64	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	65	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	66	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	70	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	71	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	72	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	73	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	74	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	76	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	77	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	79	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	80	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	81	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	82	##ADDR##	proccoll	0	#HEAD#	#TAIL#	60
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	84	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	85	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	86	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	88	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	89	##ADDR##	proccoll	0	#HEAD#	#TAIL#	60
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	91	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	92	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	93	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	94	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	95	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    passn = process-definition (defined) passn(
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passn", we have: {
      Instances:
        d = bool<> d
        g = bool<> g
        s = bool<> s
      unroll sequence: 
        bool<> g
        bool<> s
        bool<> d
      prs:
        passn(g,s,d)
      footprint: {
        bool^0 d (instantiated) = ::passn::d (3) 
        bool^0 g (instantiated) = ::passn::g (1) 
        bool^0 s (instantiated) = ::passn::s (2) 
        bool instance pool:
        1	::passn::g
        2	::passn::s
        3	::passn::d
        resolved macros:
        passn(g,s,d)
      }
      }

    passnp = process-definition (defined) passnp(
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
      )
      In definition "passnp", we have: {
      Instances:
        _g = bool<> _g
        d = bool<> d
        g = bool<> g
        n = passn<> n
        p = passp<> p
        s = bool<> s
      unroll sequence: 
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
        passn<> n
        n (g, s, d);
        passp<> p
        p (_g, s, d);
      footprint: {
        bool^0 d (instantiated) = ::passnp::p.d (3) 
        bool^0 g (instantiated) = ::passnp::n.g (1) 
        process passn<>^0 n (instantiated) = ::passnp::n (1) (
          bool^0 g (instantiated) = ::passnp::g (1) 
          bool^0 s (instantiated) = ::passnp::s (2) 
          bool^0 d (instantiated) = ::passnp::d (3) 
        )
        process passp<>^0 p (instantiated) = ::passnp::p (2) (
          bool^0 g (instantiated) = ::passnp::_g (4) 
          bool^0 s (instantiated) = ::passnp::n.s (2) 
          bool^0 d (instantiated) = ::passnp::n.d (3) 
        )
        bool^0 s (instantiated) = ::passnp::p.s (2) 
        bool^0 _g (instantiated) = ::passnp::p.g (4) 
        process instance pool:
        1	::passnp::n
        2	::passnp::p
        bool instance pool:
        1	::passnp::g
        2	::passnp::s
        3	::passnp::d
        4	::passnp::_g
      }
      }

    passp = process-definition (defined) passp(
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passp", we have: {
      Instances:
        d = bool<> d
        g = bool<> g
        s = bool<> s
      unroll sequence: 
        bool<> g
        bool<> s
        bool<> d
      prs:
        passp(g,s,d)
      footprint: {
        bool^0 d (instantiated) = ::passp::d (3) 
        bool^0 g (instantiated) = ::passp::g (1) 
        bool^0 s (instantiated) = ::passp::s (2) 
        bool instance pool:
        1	::passp::g
        2	::passp::s
        3	::passp::d
        resolved macros:
        passp(g,s,d)
      }
      }

  Instances:
    _n_ = process passn<>^0 _n_ (instantiated) = ::_n_ (1) (
      bool^0 g (instantiated) = ::_n_.g (1) 
      bool^0 s (instantiated) = ::_n_.s (2) 
      bool^0 d (instantiated) = ::_n_.d (3) 
    )
    _np_ = process passnp<>^0 _np_ (instantiated) = ::_np_ (3) (
      bool^0 g (instantiated) = ::_np_.g (7) 
      bool^0 _g (instantiated) = ::_np_._g (8) 
      bool^0 s (instantiated) = ::_np_.s (9) 
      bool^0 d (instantiated) = ::_np_.d (10) 
    )
    _p_ = process passp<>^0 _p_ (instantiated) = ::_p_ (2) (
      bool^0 g (instantiated) = ::_p_.g (4) 
      bool^0 s (instantiated) = ::_p_.s (5) 
      bool^0 d (instantiated) = ::_p_.d (6) 
    )
}

Created state:
process instance pool:
1	::_n_
2	::_p_
3	::_np_
bool instance pool:
1	::_n_.g
2	::_n_.s
3	::_n_.d
4	::_p_.g
5	::_p_.s
6	::_p_.d
7	::_np_.g
8	::_np_._g
9	::_np_.s
10	::_np_.d

