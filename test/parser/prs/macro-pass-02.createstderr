
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	359
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	283
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	34	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	35	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	procdefn	0	#HEAD#	#TAIL#	283
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	43	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	44	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	55	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	56	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	57	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	63	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	65	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	66	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	67	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	68	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	69	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	70	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	71	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	72	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	73	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	74	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	75	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	76	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	77	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	78	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	79	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	80	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	81	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	82	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	83	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	85	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	86	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	87	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	88	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	89	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	91	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	92	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	93	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	94	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	95	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	96	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	97	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	98	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    passn = process-definition (defined) passn(
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passn", we have: {
      Instances:
        d = bool<> passn::d
        g = bool<> passn::g
        s = bool<> passn::s
      unroll sequence: 
        bool<> g
        bool<> s
        bool<> d
      prs:
        passn(g,s,d)
      footprint: {
        d = bool^0 = passn::d (1) 
        g = bool^0 = passn::g (2) 
        s = bool^0 = passn::s (3) 
        Created state:
        bool instance pool:
        1	passn::d
        2	passn::g
        3	passn::s
        resolved macros:
        passn(g,s,d)
      }
      }

    passnp = process-definition (defined) passnp(
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
      )
      In definition "passnp", we have: {
      Instances:
        _g = bool<> passnp::_g
        d = bool<> passnp::d
        g = bool<> passnp::g
        n = passn<> passnp::n
        p = passp<> passnp::p
        s = bool<> passnp::s
      unroll sequence: 
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
        passn<> n
        n (g, s, d);
        passp<> p
        p (_g, s, d);
      footprint: {
        _g = bool^0 = passnp::_g (4) 
        d = bool^0 = passnp::d (1) 
        g = bool^0 = passnp::g (2) 
        n = process passn<>^0 = passnp::n (1) (
          g = bool^0 = passnp::g (2) 
          s = bool^0 = passnp::s (3) 
          d = bool^0 = passnp::d (1) 
        )
        p = process passp<>^0 = passnp::p (2) (
          g = bool^0 = passnp::_g (4) 
          s = bool^0 = passnp::s (3) 
          d = bool^0 = passnp::d (1) 
        )
        s = bool^0 = passnp::s (3) 
        Created state:
        process instance pool:
        1	passnp::n
        2	passnp::p
        bool instance pool:
        1	passnp::d
        2	passnp::g
        3	passnp::s
        4	passnp::_g
      }
      }

    passp = process-definition (defined) passp(
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passp", we have: {
      Instances:
        d = bool<> passp::d
        g = bool<> passp::g
        s = bool<> passp::s
      unroll sequence: 
        bool<> g
        bool<> s
        bool<> d
      prs:
        passp(g,s,d)
      footprint: {
        d = bool^0 = passp::d (1) 
        g = bool^0 = passp::g (2) 
        s = bool^0 = passp::s (3) 
        Created state:
        bool instance pool:
        1	passp::d
        2	passp::g
        3	passp::s
        resolved macros:
        passp(g,s,d)
      }
      }

  Instances:
    _n_ = passn<> _n_
    _np_ = passnp<> _np_
    _p_ = passp<> _p_
}

footprint: {
  _n_ = process passn<>^0 = _n_ (2) (
    g = bool^0 = _n_.g (5) 
    s = bool^0 = _n_.s (6) 
    d = bool^0 = _n_.d (7) 
  )
  _np_ = process passnp<>^0 = _np_ (1) (
    g = bool^0 = _np_.g (1) 
    _g = bool^0 = _np_._g (2) 
    s = bool^0 = _np_.s (3) 
    d = bool^0 = _np_.d (4) 
  )
  _p_ = process passp<>^0 = _p_ (3) (
    g = bool^0 = _p_.g (8) 
    s = bool^0 = _p_.s (9) 
    d = bool^0 = _p_.d (10) 
  )
  Created state:
  process instance pool:
  1	_np_
  2	_n_
  3	_p_
  bool instance pool:
  1	_np_.g
  2	_np_._g
  3	_np_.s
  4	_np_.d
  5	_n_.g
  6	_n_.s
  7	_n_.d
  8	_p_.g
  9	_p_.s
  10	_p_.d
}
