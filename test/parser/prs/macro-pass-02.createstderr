
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	143
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	footprnt	0	#HEAD#	#TAIL#	430
	32	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	33	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	39	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	40	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	41	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	44	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	47	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	footprnt	0	#HEAD#	#TAIL#	430
	52	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	53	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	footprnt	0	#HEAD#	#TAIL#	712
	58	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	59	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	60	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	62	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	63	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	64	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	65	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	66	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	67	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	867
	69	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	70	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	71	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    passn = process-definition (defined) passn(
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passn", we have: {
      Instances:
        d = bool<> passn::d
        g = bool<> passn::g
        s = bool<> passn::s
      unroll sequence: 
        bool<> g
        bool<> s
        bool<> d
      prs:
        passn(g,s,d)
      footprint: {
        d = bool^0 = passn::d (3) 
        g = bool^0 = passn::g (1) 
        s = bool^0 = passn::s (2) 
        Created state:
        bool instance pool:
        1	passn::g
        2	passn::s
        3	passn::d
        resolved macros:
        passn(g,s,d)
      }
      }

    passnp = process-definition (defined) passnp(
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
      )
      In definition "passnp", we have: {
      Instances:
        _g = bool<> passnp::_g
        d = bool<> passnp::d
        g = bool<> passnp::g
        n = passn<> passnp::n
        p = passp<> passnp::p
        s = bool<> passnp::s
      unroll sequence: 
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
        passn<> n
        n (g, s, d);
        passp<> p
        p (_g, s, d);
      footprint: {
        _g = bool^0 = passnp::_g (4) 
        d = bool^0 = passnp::d (3) 
        g = bool^0 = passnp::g (1) 
        n = process passn<>^0 = passnp::n (1) (
          g = bool^0 = passnp::g (1) 
          s = bool^0 = passnp::s (2) 
          d = bool^0 = passnp::d (3) 
        )
        p = process passp<>^0 = passnp::p (2) (
          g = bool^0 = passnp::_g (4) 
          s = bool^0 = passnp::s (2) 
          d = bool^0 = passnp::d (3) 
        )
        s = bool^0 = passnp::s (2) 
        Created state:
        process instance pool:
        1	passnp::n
        2	passnp::p
        bool instance pool:
        1	passnp::g
        2	passnp::s
        3	passnp::d
        4	passnp::_g
      }
      }

    passp = process-definition (defined) passp(
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passp", we have: {
      Instances:
        d = bool<> passp::d
        g = bool<> passp::g
        s = bool<> passp::s
      unroll sequence: 
        bool<> g
        bool<> s
        bool<> d
      prs:
        passp(g,s,d)
      footprint: {
        d = bool^0 = passp::d (3) 
        g = bool^0 = passp::g (1) 
        s = bool^0 = passp::s (2) 
        Created state:
        bool instance pool:
        1	passp::g
        2	passp::s
        3	passp::d
        resolved macros:
        passp(g,s,d)
      }
      }

  Instances:
    _n_ = passn<> _n_
    _np_ = passnp<> _np_
    _p_ = passp<> _p_
}

footprint: {
  _n_ = process passn<>^0 = _n_ (1) (
    g = bool^0 = _n_.g (1) 
    s = bool^0 = _n_.s (2) 
    d = bool^0 = _n_.d (3) 
  )
  _np_ = process passnp<>^0 = _np_ (3) (
    g = bool^0 = _np_.g (7) 
    _g = bool^0 = _np_._g (8) 
    s = bool^0 = _np_.s (9) 
    d = bool^0 = _np_.d (10) 
  )
  _p_ = process passp<>^0 = _p_ (2) (
    g = bool^0 = _p_.g (4) 
    s = bool^0 = _p_.s (5) 
    d = bool^0 = _p_.d (6) 
  )
  Created state:
  process instance pool:
  1	_n_
  2	_p_
  3	_np_
  bool instance pool:
  1	_n_.g
  2	_n_.s
  3	_n_.d
  4	_p_.g
  5	_p_.s
  6	_p_.d
  7	_np_.g
  8	_np_._g
  9	_np_.s
  10	_np_.d
}
