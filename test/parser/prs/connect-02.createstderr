
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	124
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	28	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	49	##ADDR##	footprnt	0	#HEAD#	#TAIL#	542
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	52	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	53	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	54	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	55	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	56	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	62	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	63	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	footprnt	0	#HEAD#	#TAIL#	515
	71	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	72	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	75	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	85	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	86	##ADDR##	footprnt	0	#HEAD#	#TAIL#	610
	87	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    deep = process-definition (defined) deep(
        bool<> !GND
        bool<> !Vdd
        inv<> x
      )
      In definition "deep", we have: {
      Instances:
        !GND = bool<> deep::!GND
        !Vdd = bool<> deep::!Vdd
        x = inv<> deep::x
        y = inv<> deep::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> x
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        inv<> y
      footprint: {
        !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
        x = process inv<>^0 = deep<>::x (1) @[ port-alias ] (
          !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = deep<>::x.a (3) @[ port-alias ] 
        )
        y = process inv<>^0 = deep<>::y (2) (
          !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = deep<>::y.a (4) 
        )
        Created state:
        process instance pool: (1 ports, 1 local, 0 mapped)
        1	deep<>::x @[ port-alias ]	inv<>
          bool: 1,2,3
        2	deep<>::y	inv<>
          bool: 1,2,4
        bool instance pool: (3 ports, 1 local, 1 mapped)
        1	deep<>::!GND @[ supply_low port-alias ]	
        2	deep<>::!Vdd @[ supply_high port-alias ]	
        3	deep<>::x.a @[ port-alias ]	
        4	deep<>::y.a	
        private sub-bool index map:
          (2 -> 0)
          (3 -> 1)
        bool port aliases:
        1: deep<>::x.!GND = deep<>::!GND @[ supply_low port-alias ]
        2: deep<>::x.!Vdd = deep<>::!Vdd @[ supply_high port-alias ]
      }
      }

    deeper = process-definition (defined) deeper(
        bool<> !GND
        bool<> !Vdd
        deep<> d
      )
      In definition "deeper", we have: {
      Instances:
        !GND = bool<> deeper::!GND
        !Vdd = bool<> deeper::!Vdd
        d = deep<> deeper::d
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          deep<> d
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = deeper<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = deeper<>::!Vdd (2) @[ supply_high port-alias ] 
        d = process deep<>^0 = deeper<>::d (1) @[ port-alias ] (
          !GND = bool^0 = deeper<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deeper<>::!Vdd (2) @[ supply_high port-alias ] 
          x = process inv<>^0 = deeper<>::d.x (2) @[ port-alias ] (
            !GND = bool^0 = deeper<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = deeper<>::!Vdd (2) @[ supply_high port-alias ] 
            a = bool^0 = deeper<>::d.x.a (3) @[ port-alias ] 
          )
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	deeper<>::d @[ port-alias ]	deep<>
          process: 2
          bool: 1,2,3
        2	deeper<>::d.x @[ port-alias ]	inv<>
          bool: 1,2,3
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	deeper<>::!GND @[ supply_low port-alias ]	
        2	deeper<>::!Vdd @[ supply_high port-alias ]	
        3	deeper<>::d.x.a @[ port-alias ]	
        bool port aliases:
        1: deeper<>::d.!GND = deeper<>::d.x.!GND = deeper<>::!GND @[ supply_low port-alias ]
        2: deeper<>::d.!Vdd = deeper<>::d.x.!Vdd = deeper<>::!Vdd @[ supply_high port-alias ]
      }
      }

    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> a
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = inv<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = inv<>::a (3) @[ port-alias ] 
        b = bool^0 = inv<>::b (4) 
        Created state:
        bool instance pool: (3 ports, 1 local, 0 mapped)
        1	inv<>::!GND @[ supply_low port-alias ]	
        2	inv<>::!Vdd @[ supply_high port-alias ]	
        3	inv<>::a @[ port-alias ]	
        4	inv<>::b	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    sh1t = deeper<> sh1t
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  sh1t = process deeper<>^0 = sh1t (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    d = process deep<>^0 = sh1t.d (2) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      x = process inv<>^0 = sh1t.d.x (3) (
        !GND = bool^0 = !GND (1) @[ supply_low ] 
        !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
        a = bool^0 = sh1t.d.x.a (3) 
      )
    )
  )
  Created state:
  process instance pool: (0 ports, 3 local, 1 mapped)
  1	sh1t	deeper<>
    process: 2,3
    bool: 1,2,3
  2	sh1t.d	deep<>
    process: 3
    bool: 1,2,3
  3	sh1t.d.x	inv<>
    bool: 1,2,3
  private sub-process index map:
    (2 -> 0)
    (4 -> 1)
  bool instance pool: (0 ports, 3 local, 3 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	sh1t.d.x.a	
  private sub-bool index map:
    (2 -> 0)
    (3 -> 2)
    (4 -> 3)
}
