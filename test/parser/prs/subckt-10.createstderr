
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	152
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	40
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	20
	27	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	28	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	28
	37	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	42	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	46	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	48	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	49
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	679
	53	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	55	##ADDR##	footprnt	0	#HEAD#	#TAIL#	485
	56	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> x
        bool<> y
        bool<> z
        bool<> w
        bool<> p
        bool<> q
        bool<> r
      )
      In definition "foo", we have: {
      Instances:
        p = bool<> foo::p
        q = bool<> foo::q
        r = bool<> foo::r
        w = bool<> foo::w
        x = bool<> foo::x
        y = bool<> foo::y
        z = bool<> foo::z
      unroll sequence: 
        ports: (
          bool<> x
          bool<> y
          bool<> z
          bool<> w
          bool<> p
          bool<> q
          bool<> r
        )
      prs:
        passn(x,y,z)
        subckt <""> {
          ~y -> z+
        }
        z -> w-
        subckt <""> {
          passp(z,w,q)
          p -> q-
          ~p -> q+
        }
        passp(p,q,r)
      footprint: {
        p = bool^0 = foo<>::p (5) 
        q = bool^0 = foo<>::q (6) 
        r = bool^0 = foo<>::r (7) 
        w = bool^0 = foo<>::w (4) 
        x = bool^0 = foo<>::x (1) 
        y = bool^0 = foo<>::y (2) 
        z = bool^0 = foo<>::z (3) 
        Created state:
        bool instance pool:
        1	foo<>::x
        2	foo<>::y
        3	foo<>::z
        4	foo<>::w
        5	foo<>::p
        6	foo<>::q
        7	foo<>::r
        resolved prs:
        ~y -> z+
        z -> w-
        p -> q-
        ~p -> q+
        resolved macros:
        passn(x,y,z)
        passp(z,w,q)
        passp(p,q,r)
        subcircuit (rules, macros, @nodes): 
        1: 0..0 none none 
        2: 2..3 1..1 none 
      }
      }

  Instances:
    bar = foo<> bar
}

footprint: {
  bar = process foo<>^0 = bar (1) (
    x = bool^0 = bar.x (1) 
    y = bool^0 = bar.y (2) 
    z = bool^0 = bar.z (3) 
    w = bool^0 = bar.w (4) 
    p = bool^0 = bar.p (5) 
    q = bool^0 = bar.q (6) 
    r = bool^0 = bar.r (7) 
  )
  Created state:
  process instance pool:
  1	bar
  bool instance pool:
  1	bar.x
  2	bar.y
  3	bar.z
  4	bar.w
  5	bar.p
  6	bar.q
  7	bar.r
}
