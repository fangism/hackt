
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	258
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	73
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	28	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	29	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	30	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	31	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	32	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	33	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	35	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	38	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    lvs_order = process-definition (defined) lvs_order(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "lvs_order", we have: {
      Instances:
        a = bool<> ::lvs_order::a
        b = bool<> ::lvs_order::b
        c = bool<> ::lvs_order::c
        d = bool<> ::lvs_order::d
        e = bool<> ::lvs_order::e
        f = bool<> ::lvs_order::f
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
        bool<> d
        bool<> e
        bool<> f
      spec:
        order(f,e,d,c,b,a)
      footprint: {
        a = bool^0 = ::lvs_order::a 
        b = bool^0 = ::lvs_order::b 
        c = bool^0 = ::lvs_order::c 
        d = bool^0 = ::lvs_order::d 
        e = bool^0 = ::lvs_order::e 
        f = bool^0 = ::lvs_order::f 
      }
      }

  Instances:
    foo = lvs_order<> foo
}

footprint: {
  foo = process lvs_order<>^0 = ::foo (
    a = bool^0 = ::foo.a 
    b = bool^0 = ::foo.b 
    c = bool^0 = ::foo.c 
  )
}
