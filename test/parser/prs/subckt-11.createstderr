
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	44
	33	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	28
	34	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	35	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	37	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	40	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	44	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	46	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	47	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	24
	51	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	footprnt	0	#HEAD#	#TAIL#	821

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  9 instantiation-collections
  0 sub-namespaces
  0 definitions
  0 typedefs
  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    p = bool<> p
    q = bool<> q
    r = bool<> r
    w = bool<> w
    x = bool<> x
    y = bool<> y
    z = bool<> z
}

top-level prs:
  {
  subckt <""> {
    ~y -> z+
    p -> q-
    ~p -> q+
  }
  z -> w-
  subckt <""> {
    passp(z,w,q)
    passp(p,q,r)
  }
  passn(x,y,z)
  }

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  p = bool^0 = p (7) @[ loc-FO- loc-FO+ ] 
  q = bool^0 = q (8) @[ loc-FO+ loc-FI- loc-FI+ ] 
  r = bool^0 = r (9) @[ loc-FI+ ] 
  w = bool^0 = w (6) @[ loc-FO+ loc-FI- ] 
  x = bool^0 = x (3) @[ loc-FO- ] 
  y = bool^0 = y (4) @[ loc-FO- loc-FO+ ] 
  z = bool^0 = z (5) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
  Created state:
  bool instance pool: (0 ports, 9 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	x @[ loc-FO- ]	
  4	y @[ loc-FO- loc-FO+ ]	
  5	z @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
  6	w @[ loc-FO+ loc-FI- ]	
  7	p @[ loc-FO- loc-FO+ ]	
  8	q @[ loc-FO+ loc-FI- loc-FI+ ]	
  9	r @[ loc-FI+ ]	
  resolved prs:
  ~y -> z+
  p -> q-
  ~p -> q+
  z -> w-
  resolved macros:
  passp(z,w,q)
  passp(p,q,r)
  passn(x,y,z)
  subcircuit (rules, macros, @nodes): 
  1: 0..2 none none 
  2: none 0..1 none 
  rule supply map: (rules, macros, @nodes : Vdd, GND)
  0..3 0..2 none : 2, 1 | 2, 1
}
