
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	212
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	portscop	0	#HEAD#	#TAIL#	52
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	footprnt	0	#HEAD#	#TAIL#	426
	66	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	566
	69	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> w
        bool<> x
        bool<> y
        bool<> z
        bool<> a
        bool<> b
        bool<> c
        bool<> d
        bool<> e
        bool<> f
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a
        b = bool<> foo::b
        c = bool<> foo::c
        d = bool<> foo::d
        e = bool<> foo::e
        f = bool<> foo::f
        w = bool<> foo::w
        x = bool<> foo::x
        y = bool<> foo::y
        z = bool<> foo::z
      unroll sequence: 
        ports: (
          bool<> w
          bool<> x
          bool<> y
          bool<> z
          bool<> a
          bool<> b
          bool<> c
          bool<> d
          bool<> e
          bool<> f
        )
        w@[iscomb]
        x@[iscomb=0]
        w = x;
        y = z;
        z@[iscomb]
        a = b;
        a@[iscomb]
        b@[iscomb=0]
        c@[iscomb]
        c = d;
        d@[iscomb=0]
        e = f;
        e@[iscomb]
      footprint: {
        a = bool^0 = foo<>::a (3) @[ iscomb ] 
        b = bool^0 = foo<>::a (3) @[ iscomb ] 
        c = bool^0 = foo<>::c (4) @[ iscomb ] 
        d = bool^0 = foo<>::c (4) @[ iscomb ] 
        e = bool^0 = foo<>::e (5) @[ iscomb ] 
        f = bool^0 = foo<>::e (5) @[ iscomb ] 
        w = bool^0 = foo<>::w (1) @[ iscomb ] 
        x = bool^0 = foo<>::w (1) @[ iscomb ] 
        y = bool^0 = foo<>::y (2) @[ iscomb ] 
        z = bool^0 = foo<>::y (2) @[ iscomb ] 
        Created state:
        bool instance pool:
        1	foo<>::w @[ iscomb ]
        2	foo<>::y @[ iscomb ]
        3	foo<>::a @[ iscomb ]
        4	foo<>::c @[ iscomb ]
        5	foo<>::e @[ iscomb ]
        bool port aliases:
        1: foo<>::w = foo<>::x @[ iscomb ]
        2: foo<>::y = foo<>::z @[ iscomb ]
        3: foo<>::a = foo<>::b @[ iscomb ]
        4: foo<>::c = foo<>::d @[ iscomb ]
        5: foo<>::e = foo<>::f @[ iscomb ]
      }
      }

  Instances:
    bar = foo<> bar
}

footprint: {
  bar = process foo<>^0 = bar (1) (
    w = bool^0 = bar.w (1) @[ iscomb ] 
    x = bool^0 = bar.w (1) @[ iscomb ] 
    y = bool^0 = bar.y (2) @[ iscomb ] 
    z = bool^0 = bar.y (2) @[ iscomb ] 
    a = bool^0 = bar.a (3) @[ iscomb ] 
    b = bool^0 = bar.a (3) @[ iscomb ] 
    c = bool^0 = bar.c (4) @[ iscomb ] 
    d = bool^0 = bar.c (4) @[ iscomb ] 
    e = bool^0 = bar.e (5) @[ iscomb ] 
    f = bool^0 = bar.e (5) @[ iscomb ] 
  )
  Created state:
  process instance pool:
  1	bar
  bool instance pool:
  1	bar.w @[ iscomb ]
  2	bar.y @[ iscomb ]
  3	bar.a @[ iscomb ]
  4	bar.c @[ iscomb ]
  5	bar.e @[ iscomb ]
}
