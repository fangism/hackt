
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	47
	16	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	pintplch	0	#HEAD#	#TAIL#	32
	18	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	19	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	footprnt	0	#HEAD#	#TAIL#	368
	22	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	footprnt	0	#HEAD#	#TAIL#	407
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  1 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    blah = pint<> blah
  Definitions:
    ass = process-definition (defined) ass(
        bool<> q
      )
      In definition "ass", we have: {
      Instances:
        a = bool<> ass::a
        b = bool<> ass::b
        c = bool<> ass::c
        q = bool<> ass::q
      unroll sequence: 
        bool<> q
        bool<> a
        bool<> b
        bool<> c
      spec:
        min_sep<blah>(a,b)
      footprint: {
        a = bool^0 = ass::a 
        b = bool^0 = ass::b 
        c = bool^0 = ass::c 
        q = bool^0 = ass::q 
      }
      }

  Instances:
    myass = ass<> myass
    x = bool<> x
}

footprint: {
  blah = pint^0 value: 5
  myass = process ass<>^0 = myass (
    q = bool^0 = myass.q 
  )
  x = bool^0 = myass.q 
}
