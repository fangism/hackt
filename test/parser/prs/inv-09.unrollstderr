
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	24
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	30
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	14	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	18	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	21	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	22	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	23	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	25	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	29	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	32	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	35	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    crazy_inv = process-definition (defined) crazy_inv<
      pint<> N
      pint<> I
      pint<> J
      >(
        bool<> a with indices: {
          [0..::crazy_inv::N-1]
        }

      )
      In definition "crazy_inv", we have: {
      Parameters:
        I = pint<> I
        J = pint<> J
        N = pint<> N
      Instances:
        a = bool<> a with indices: {
          [0..::crazy_inv::N-1]
        }

      unroll sequence: 
        pint<> N
        pint<> I
        pint<> J
        bool<> a[0..N-1]
      prs:
        a[I] -> a[J]-
        ~a[I] -> a[J]+
      }

}

