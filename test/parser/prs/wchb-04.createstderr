
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	56
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	269
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	11	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	15	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	21	##ADDR##	procdefn	0	#HEAD#	#TAIL#	234
	22	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	28	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	29	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	30	##ADDR##	procdefn	0	#HEAD#	#TAIL#	364
	31	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	33	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	36	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	39	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	40	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	46	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	47	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	55	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	56	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	57	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	58	##ADDR##	procdefn	0	#HEAD#	#TAIL#	751
	59	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	60	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	61	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	62	##ADDR##	procdefn	0	#HEAD#	#TAIL#	368
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	65	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	66	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	69	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	70	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	71	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	72	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	78	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	79	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	88	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	89	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	90	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	91	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	92	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	93	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	94	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	96	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	97	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	98	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	99	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	100	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	101	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	102	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	103	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	104	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	105	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	106	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	107	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	108	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	109	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	110	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	111	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	112	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	113	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	114	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	116	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	117	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	118	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	119	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	120	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	121	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	122	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	123	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	126	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	127	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	128	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	129	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	130	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	132	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	133	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	134	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	135	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	136	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	137	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	141	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	142	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	143	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	144	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	146	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	147	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	148	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	150	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	151	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	152	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	153	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	155	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	156	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	157	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	159	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	160	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	161	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	162	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	163	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	164	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	165	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	166	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	167	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	168	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	169	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	170	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	171	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	172	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	173	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	174	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	175	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	176	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	177	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	178	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	179	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	180	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	181	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	182	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	183	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	184	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	185	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	186	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	187	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	188	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	189	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	190	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	191	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	192	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	60
	193	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	194	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	195	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	196	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	197	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	198	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	199	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	200	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	201	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	202	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	203	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	204	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	205	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	206	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	207	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	208	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	209	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	210	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	211	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	212	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	213	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	214	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	215	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	216	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	217	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	218	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	219	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	220	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	221	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	222	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	223	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	224	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	225	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	226	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	227	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	228	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	229	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	230	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	231	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	232	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	233	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	234	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	235	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	236	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	237	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	238	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	239	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	240	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	241	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	242	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	243	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	244	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	245	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	246	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	247	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	248	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	249	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	250	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	251	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	252	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	253	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	254	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	255	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	256	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	257	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	258	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	259	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	260	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	261	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	262	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	263	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	264	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	265	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	266	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	267	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	268	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	269	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	270	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	271	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	272	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	273	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	274	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	275	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	276	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  5 definitions
  0 typedefs
  Definitions:
    celem2inv = process-definition (defined) celem2inv(
        bool<> a
        bool<> b
        bool<> _o
      )
      In definition "celem2inv", we have: {
      Instances:
        _o = bool<> _o
        a = bool<> a
        b = bool<> b
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> _o
      prs:
        a & b -> _o-
        ~a & ~b -> _o+
      footprint: {
        bool^0 _o (instantiated) = ::celem2inv::_o (1) 
        bool^0 a (instantiated) = ::celem2inv::a (2) 
        bool^0 b (instantiated) = ::celem2inv::b (3) 
        bool instance pool:
        1	::celem2inv::_o
        2	::celem2inv::a
        3	::celem2inv::b
        resolved prs:
        a & b -> _o-
        ~a & ~b -> _o+
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> d

        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> d

        e = bool<> e
      unroll sequence: 
        bool<> d[0..1]
        bool<> e
      footprint: {
        bool^1 d
          unrolled indices: {
            0 = ::e1of2::d[0] (1) 
            1 = ::e1of2::d[1] (2) 
          }
        bool^0 e (instantiated) = ::e1of2::e (3) 
        bool instance pool:
        1	::e1of2::d[0]
        2	::e1of2::d[1]
        3	::e1of2::e
      }
      }

    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a -> b-
        ~a -> b+
      footprint: {
        bool^0 a (instantiated) = ::inv::a (1) 
        bool^0 b (instantiated) = ::inv::b (2) 
        bool instance pool:
        1	::inv::a
        2	::inv::b
        resolved prs:
        a -> b-
        ~a -> b+
      }
      }

    nand2 = process-definition (defined) nand2(
        bool<> a
        bool<> b
        bool<> _o
      )
      In definition "nand2", we have: {
      Instances:
        _o = bool<> _o
        a = bool<> a
        b = bool<> b
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> _o
      prs:
        a & b -> _o-
        ~a | ~b -> _o+
      footprint: {
        bool^0 _o (instantiated) = ::nand2::_o (1) 
        bool^0 a (instantiated) = ::nand2::a (2) 
        bool^0 b (instantiated) = ::nand2::b (3) 
        bool instance pool:
        1	::nand2::_o
        2	::nand2::a
        3	::nand2::b
        resolved prs:
        a & b -> _o-
        ~a | ~b -> _o+
      }
      }

    wchb_e1of2 = process-definition (defined) wchb_e1of2(
        e1of2<> L
        e1of2<> R
      )
      In definition "wchb_e1of2", we have: {
      Instances:
        L = e1of2<> L
        R = e1of2<> R
        __l1__ = celem2inv<> __l1__
        __la__ = nand2<> __la__
        __r0__ = inv<> __r0__
        _r = bool<> _r

        l0 = celem2inv<> l0
        l1 = celem2inv<> l1
        la = nand2<> la
        r0 = inv<> r0
        r1 = inv<> r1
        re = inv<> re
        rv = bool<> rv
      unroll sequence: 
        e1of2<> L
        e1of2<> R
        bool<> _r[0..1]
        bool<> rv
        inv<> r0
        r0 (_r[0], R.d[0]);
        inv<> r1
        r1 (_r[1], R.d[1]);
        inv<> re
        re (rv, L.e);
        celem2inv<> l0
        l0 (L.d[0], R.e, _r[0]);
        celem2inv<> l1
        l1 (L.d[1], R.e, _r[1]);
        nand2<> la
        la (_r[0], _r[1], rv);
        inv<> __r0__
        __r0__ = r0;
        celem2inv<> __l1__
        __l1__ = l1;
        nand2<> __la__
        __la__ = la;
      footprint: {
        process celem2inv<>^0 l0 (instantiated) = ::wchb_e1of2::l0 (1) (
          bool^0 a (instantiated) = ::wchb_e1of2::l0.a (1) 
          bool^0 b (instantiated) = ::wchb_e1of2::__l1__.b (2) 
          bool^0 _o (instantiated) = ::wchb_e1of2::__la__.a (3) 
        )
        bool^1 _r
          unrolled indices: {
            0 = ::wchb_e1of2::__la__.a (3) 
            1 = ::wchb_e1of2::__la__.b (4) 
          }
        process celem2inv<>^0 l1 (instantiated) = ::wchb_e1of2::l1 (2) (
          bool^0 a (instantiated) = ::wchb_e1of2::__l1__.a (5) 
          bool^0 b (instantiated) = ::wchb_e1of2::__l1__.b (2) 
          bool^0 _o (instantiated) = ::wchb_e1of2::__la__.b (4) 
        )
        process celem2inv<>^0 __l1__ (instantiated) = ::wchb_e1of2::l1 (2) (
          bool^0 a (instantiated) = ::wchb_e1of2::__l1__.a (5) 
          bool^0 b (instantiated) = ::wchb_e1of2::__l1__.b (2) 
          bool^0 _o (instantiated) = ::wchb_e1of2::__la__.b (4) 
        )
        process inv<>^0 r0 (instantiated) = ::wchb_e1of2::r0 (3) (
          bool^0 a (instantiated) = ::wchb_e1of2::__la__.a (3) 
          bool^0 b (instantiated) = ::wchb_e1of2::__r0__.b (6) 
        )
        process inv<>^0 r1 (instantiated) = ::wchb_e1of2::r1 (4) (
          bool^0 a (instantiated) = ::wchb_e1of2::__la__.b (4) 
          bool^0 b (instantiated) = ::wchb_e1of2::r1.b (7) 
        )
        process nand2<>^0 la (instantiated) = ::wchb_e1of2::la (5) (
          bool^0 a (instantiated) = ::wchb_e1of2::__la__.a (3) 
          bool^0 b (instantiated) = ::wchb_e1of2::__la__.b (4) 
          bool^0 _o (instantiated) = ::wchb_e1of2::__la__._o (8) 
        )
        process nand2<>^0 __la__ (instantiated) = ::wchb_e1of2::la (5) (
          bool^0 a (instantiated) = ::wchb_e1of2::__la__.a (3) 
          bool^0 b (instantiated) = ::wchb_e1of2::__la__.b (4) 
          bool^0 _o (instantiated) = ::wchb_e1of2::__la__._o (8) 
        )
        process e1of2<>^0 L (instantiated) = ::wchb_e1of2::L (6) (
          bool^1 d
            unrolled indices: {
              0 = ::wchb_e1of2::l0.a (1) 
              1 = ::wchb_e1of2::__l1__.a (5) 
            }
          bool^0 e (instantiated) = ::wchb_e1of2::re.b (9) 
        )
        process e1of2<>^0 R (instantiated) = ::wchb_e1of2::R (7) (
          bool^1 d
            unrolled indices: {
              0 = ::wchb_e1of2::__r0__.b (6) 
              1 = ::wchb_e1of2::r1.b (7) 
            }
          bool^0 e (instantiated) = ::wchb_e1of2::__l1__.b (2) 
        )
        process inv<>^0 re (instantiated) = ::wchb_e1of2::re (8) (
          bool^0 a (instantiated) = ::wchb_e1of2::__la__._o (8) 
          bool^0 b (instantiated) = ::wchb_e1of2::re.b (9) 
        )
        bool^0 rv (instantiated) = ::wchb_e1of2::__la__._o (8) 
        process inv<>^0 __r0__ (instantiated) = ::wchb_e1of2::r0 (3) (
          bool^0 a (instantiated) = ::wchb_e1of2::__la__.a (3) 
          bool^0 b (instantiated) = ::wchb_e1of2::__r0__.b (6) 
        )
        process instance pool:
        1	::wchb_e1of2::l0
        2	::wchb_e1of2::l1
        3	::wchb_e1of2::r0
        4	::wchb_e1of2::r1
        5	::wchb_e1of2::la
        6	::wchb_e1of2::L
        7	::wchb_e1of2::R
        8	::wchb_e1of2::re
        bool instance pool:
        1	::wchb_e1of2::l0.a
        2	::wchb_e1of2::l0.b
        3	::wchb_e1of2::_r[0]
        4	::wchb_e1of2::_r[1]
        5	::wchb_e1of2::l1.a
        6	::wchb_e1of2::r0.b
        7	::wchb_e1of2::r1.b
        8	::wchb_e1of2::rv
        9	::wchb_e1of2::L.e
      }
      }

  Instances:
    B = process wchb_e1of2<>^0 B (instantiated) = ::B (1) (
      process e1of2<>^0 L (instantiated) = ::b.L (2) (
        bool^1 d
          unrolled indices: {
            0 = ::B.L.d[0] (1) 
            1 = ::B.L.d[1] (2) 
          }
        bool^0 e (instantiated) = ::B.L.e (3) 
      )
      process e1of2<>^0 R (instantiated) = ::b.R (3) (
        bool^1 d
          unrolled indices: {
            0 = ::B.R.d[0] (4) 
            1 = ::B.R.d[1] (5) 
          }
        bool^0 e (instantiated) = ::B.R.e (6) 
      )
    )
    L = process e1of2<>^0 L (instantiated) = ::b.L (2) (
      bool^1 d
        unrolled indices: {
          0 = ::B.L.d[0] (1) 
          1 = ::B.L.d[1] (2) 
        }
      bool^0 e (instantiated) = ::B.L.e (3) 
    )
    R = process e1of2<>^0 R (instantiated) = ::b.R (3) (
      bool^1 d
        unrolled indices: {
          0 = ::B.R.d[0] (4) 
          1 = ::B.R.d[1] (5) 
        }
      bool^0 e (instantiated) = ::B.R.e (6) 
    )
    b = process wchb_e1of2<>^0 b (instantiated) = ::B (1) (
      process e1of2<>^0 L (instantiated) = ::b.L (2) (
        bool^1 d
          unrolled indices: {
            0 = ::B.L.d[0] (1) 
            1 = ::B.L.d[1] (2) 
          }
        bool^0 e (instantiated) = ::B.L.e (3) 
      )
      process e1of2<>^0 R (instantiated) = ::b.R (3) (
        bool^1 d
          unrolled indices: {
            0 = ::B.R.d[0] (4) 
            1 = ::B.R.d[1] (5) 
          }
        bool^0 e (instantiated) = ::B.R.e (6) 
      )
    )
}

Created state:
process instance pool:
1	::B
2	::L
3	::R
bool instance pool:
1	::L.d[0]
2	::L.d[1]
3	::L.e
4	::R.d[0]
5	::R.d[1]
6	::R.e

