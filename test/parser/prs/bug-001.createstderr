
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	324
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	7	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	471
	10	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	14	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	18	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	20	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	28	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	30	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	35	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	36	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	37	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	40	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	48	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	49	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	50	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	51	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	52
	64	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	52
	65	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	66	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	67	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	68	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	69	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	72	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	73	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	74	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	75	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	78	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	81	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	82	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	83	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	89	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	91	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	92	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	93	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	94	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	95	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	96	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	97	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	98	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	99	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	100	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	101	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	102	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	103	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	104	##ADDR##	procdefn	0	#HEAD#	#TAIL#	390
	105	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	106	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	107	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	109	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	110	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	111	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	112	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	113	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	114	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	115	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	116	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	117	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	28
	118	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	119	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	120	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	121	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	122	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	123	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	125	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	126	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	127	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	128	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	129	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	130	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	131	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	132	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	133	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	134	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	135	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	136	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	137	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	138	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	139	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    cel = process-definition (defined) cel<
      pint<> N
      >(
        bool<> i[0..N-1]
        bool<> o
      )
      In definition "cel", we have: {
      Parameters:
        N = pint<> N
      Instances:
        c = gcel<::cel::N, ::cel::N> c
        i = bool<> i

        o = bool<> o
      unroll sequence: 
        pint<> N
        bool<> i[0..N-1]
        bool<> o
        gcel<::cel::N, ::cel::N> c
        c (i, i, o);
      footprint collection: {
        <2> {
          pint^0 N value: ?
          process gcel<2, 2>^0 c (instantiated) = ::cel::c (1) (
            bool^1 id
              unrolled indices: {
                0 = ::cel::i[0] (1) 
                1 = ::cel::i[1] (2) 
              }
            bool^1 iu
              unrolled indices: {
                0 = ::cel::i[0] (1) 
                1 = ::cel::i[1] (2) 
              }
            bool^0 o (instantiated) = ::cel::o (3) 
          )
          bool^1 i
            unrolled indices: {
              0 = ::cel::i[0] (1) 
              1 = ::cel::i[1] (2) 
            }
          bool^0 o (instantiated) = ::cel::o (3) 
          process instance pool:
          1	::cel::c
          bool instance pool:
          1	::cel::i[0]
          2	::cel::i[1]
          3	::cel::o
        }
      }
      }

    foo = process-definition (defined) foo(
        bool<> Ld
        bool<> Re
        bool<> xe
        bool<> _rd
        bool<> x
      )
      In definition "foo", we have: {
      Instances:
        Ld = bool<> Ld
        Re = bool<> Re
        _rd = bool<> _rd
        x = bool<> x
        xe = bool<> xe
      unroll sequence: 
        bool<> Ld
        bool<> Re
        bool<> xe
        bool<> _rd
        bool<> x
      prs:
        Ld & Re & xe & x -> _rd-
      footprint: {
        bool^0 Ld (instantiated) = ::foo::Ld (1) 
        bool^0 x (instantiated) = ::foo::x (2) 
        bool^0 xe (instantiated) = ::foo::xe (3) 
        bool^0 Re (instantiated) = ::foo::Re (4) 
        bool^0 _rd (instantiated) = ::foo::_rd (5) 
        bool instance pool:
        1	::foo::Ld
        2	::foo::x
        3	::foo::xe
        4	::foo::Re
        5	::foo::_rd
        resolved prs:
        Ld & Re & xe & x -> _rd-
      }
      }

    gcel = process-definition (defined) gcel<
      pint<> D
      pint<> U
      >(
        bool<> id[0..D-1]
        bool<> iu[0..U-1]
        bool<> o
      )
      In definition "gcel", we have: {
      Parameters:
        D = pint<> D
        U = pint<> U
      Instances:
        id = bool<> id

        iu = bool<> iu

        o = bool<> o
      unroll sequence: 
        pint<> D
        pint<> U
        bool<> id[0..D-1]
        bool<> iu[0..U-1]
        bool<> o
      prs:
        (&:j:[0..D-1]: id[$j]) -> o-
        (&:j:[0..U-1]: ~iu[$j]) -> o+
      footprint collection: {
        <2, 2> {
          bool^1 id
            unrolled indices: {
              0 = ::gcel::id[0] (1) 
              1 = ::gcel::id[1] (2) 
            }
          bool^1 iu
            unrolled indices: {
              0 = ::gcel::iu[0] (3) 
              1 = ::gcel::iu[1] (4) 
            }
          pint^0 D value: ?
          pint^0 U value: ?
          bool^0 o (instantiated) = ::gcel::o (5) 
          bool instance pool:
          1	::gcel::id[0]
          2	::gcel::id[1]
          3	::gcel::iu[0]
          4	::gcel::iu[1]
          5	::gcel::o
          resolved prs:
          id[0] & id[1] -> o-
          ~iu[0] & ~iu[1] -> o+
        }
      }
      }

  Instances:
    x = process cel<2>^0 x (instantiated) = ::x (1) (
      bool^1 i
        unrolled indices: {
          0 = ::x.i[0] (1) 
          1 = ::x.i[1] (2) 
        }
      bool^0 o (instantiated) = ::x.o (3) 
    )
    y = process foo<>^0 y (instantiated) = ::y (2) (
      bool^0 Ld (instantiated) = ::y.Ld (4) 
      bool^0 Re (instantiated) = ::y.Re (5) 
      bool^0 xe (instantiated) = ::y.xe (6) 
      bool^0 _rd (instantiated) = ::y._rd (7) 
      bool^0 x (instantiated) = ::y.x (8) 
    )
}

Created state:
process instance pool:
1	::x
2	::y
bool instance pool:
1	::x.i[0]
2	::x.i[1]
3	::x.o
4	::y.Ld
5	::y.Re
6	::y.xe
7	::y._rd
8	::y.x

