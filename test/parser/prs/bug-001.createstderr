
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	120
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	13	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	17	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	procdefn	0	#HEAD#	#TAIL#	137
	23	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	24	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	25	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	26	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	30	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	33	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	37	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	44	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	48	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	49	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	50	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	51	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	61	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	62	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	63	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	66	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	68	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	footprnt	0	#HEAD#	#TAIL#	548
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	78	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	81	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	footprnt	0	#HEAD#	#TAIL#	493
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	88	##ADDR##	procdefn	0	#HEAD#	#TAIL#	124
	89	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	90	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	91	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	92	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	93	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	94	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	95	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	96	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	97	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	98	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	99	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	100	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	101	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	102	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	32
	103	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	104	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	108	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	109	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	110	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	footprnt	0	#HEAD#	#TAIL#	452
	113	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	114	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	116	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	117	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	118	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	119	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	120	##ADDR##	footprnt	0	#HEAD#	#TAIL#	535
	121	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    cel = process-definition (defined) cel<
      pint<> N
      >(
        bool<> i[0..N-1]
        bool<> o
      )
      In definition "cel", we have: {
      Parameters:
        N = pint<> cel::N
      Instances:
        c = gcel<cel::N, cel::N> cel::c
        i = bool<> cel::i^1
        o = bool<> cel::o
      unroll sequence: 
        ports: (
          bool<> i[0..N-1]
          bool<> o
        )
        gcel<cel::N, cel::N> c
        c (i, i, o);
      footprint collection: {
        <2> {
          N = pint^0 value: 2
          c = process gcel<2, 2>^0 = cel<2>::c (1) (
            id = bool^1
              {
                [0] = cel<2>::i[0] (1) 
                [1] = cel<2>::i[1] (2) 
              }
            iu = bool^1
              {
                [0] = cel<2>::i[0] (1) 
                [1] = cel<2>::i[1] (2) 
              }
            o = bool^0 = cel<2>::o (3) 
          )
          i = bool^1
            {
              [0] = cel<2>::i[0] (1) 
              [1] = cel<2>::i[1] (2) 
            }
          o = bool^0 = cel<2>::o (3) 
          Created state:
          process instance pool:
          1	cel<2>::c
          bool instance pool:
          1	cel<2>::i[0]
          2	cel<2>::i[1]
          3	cel<2>::o
        }
      }
      }

    foo = process-definition (defined) foo(
        bool<> Ld
        bool<> Re
        bool<> xe
        bool<> _rd
        bool<> x
      )
      In definition "foo", we have: {
      Instances:
        Ld = bool<> foo::Ld
        Re = bool<> foo::Re
        _rd = bool<> foo::_rd
        x = bool<> foo::x
        xe = bool<> foo::xe
      unroll sequence: 
        ports: (
          bool<> Ld
          bool<> Re
          bool<> xe
          bool<> _rd
          bool<> x
        )
      prs:
        Ld & Re & xe & x -> _rd-
      footprint: {
        Ld = bool^0 = foo<>::Ld (1) 
        Re = bool^0 = foo<>::Re (2) 
        _rd = bool^0 = foo<>::_rd (4) 
        x = bool^0 = foo<>::x (5) 
        xe = bool^0 = foo<>::xe (3) 
        Created state:
        bool instance pool:
        1	foo<>::Ld
        2	foo<>::Re
        3	foo<>::xe
        4	foo<>::_rd
        5	foo<>::x
        resolved prs:
        Ld & Re & xe & x -> _rd-
      }
      }

    gcel = process-definition (defined) gcel<
      pint<> D
      pint<> U
      >(
        bool<> id[0..D-1]
        bool<> iu[0..U-1]
        bool<> o
      )
      In definition "gcel", we have: {
      Parameters:
        D = pint<> gcel::D
        U = pint<> gcel::U
      Instances:
        id = bool<> gcel::id^1
        iu = bool<> gcel::iu^1
        o = bool<> gcel::o
      unroll sequence: 
        ports: (
          bool<> id[0..D-1]
          bool<> iu[0..U-1]
          bool<> o
        )
      prs:
        (&:j:[0..D-1]: id[$j]) -> o-
        (&:j:[0..U-1]: ~iu[$j]) -> o+
      footprint collection: {
        <2, 2> {
          D = pint^0 value: 2
          U = pint^0 value: 2
          id = bool^1
            {
              [0] = gcel<2, 2>::id[0] (2) 
              [1] = gcel<2, 2>::id[1] (3) 
            }
          iu = bool^1
            {
              [0] = gcel<2, 2>::iu[0] (4) 
              [1] = gcel<2, 2>::iu[1] (5) 
            }
          o = bool^0 = gcel<2, 2>::o (1) 
          Created state:
          bool instance pool:
          1	gcel<2, 2>::o
          2	gcel<2, 2>::id[0]
          3	gcel<2, 2>::id[1]
          4	gcel<2, 2>::iu[0]
          5	gcel<2, 2>::iu[1]
          resolved prs:
          id[0] & id[1] -> o-
          ~iu[0] & ~iu[1] -> o+
        }
      }
      }

  Instances:
    x = cel<2> x
    y = foo<> y
}

footprint: {
  x = process cel<2>^0 = x (1) (
    i = bool^1
      {
        [0] = x.i[0] (1) 
        [1] = x.i[1] (2) 
      }
    o = bool^0 = x.o (3) 
  )
  y = process foo<>^0 = y (2) (
    Ld = bool^0 = y.Ld (4) 
    Re = bool^0 = y.Re (5) 
    xe = bool^0 = y.xe (6) 
    _rd = bool^0 = y._rd (7) 
    x = bool^0 = y.x (8) 
  )
  Created state:
  process instance pool:
  1	x
  2	y
  bool instance pool:
  1	x.i[0]
  2	x.i[1]
  3	x.o
  4	y.Ld
  5	y.Re
  6	y.xe
  7	y._rd
  8	y.x
}
