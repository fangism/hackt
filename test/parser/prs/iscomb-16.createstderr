
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	28	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	29	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	471
	36	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	40	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	41	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	42	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	48	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	61	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	67	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	68	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	72	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	73	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	footprnt	0	#HEAD#	#TAIL#	923
	77	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	80	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	91	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	34
	92	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	93	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	94	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	96	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	98	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	99	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	34
	100	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	101	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	102	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	103	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	104	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	footprnt	0	#HEAD#	#TAIL#	974
	108	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        a -> b-
        ~a -> b+
        }
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = inv<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = inv<>::a (3) @[ port-alias loc-FO- loc-FO+ ] 
        b = bool^0 = inv<>::b (4) @[ port-alias loc-FI- loc-FI+ ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	inv<>::!GND @[ supply_low port-alias ]	
        2	inv<>::!Vdd @[ supply_high port-alias ]	
        3	inv<>::a @[ port-alias loc-FO- loc-FO+ ]	
        4	inv<>::b @[ port-alias loc-FI- loc-FI+ ]	
        resolved prs:
        a -> b-
        ~a -> b+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

    multi_inv = process-definition (defined) multi_inv(
        bool<> !GND
        bool<> !Vdd
        inv<> x[0..3]
      )
      In definition "multi_inv", we have: {
      Instances:
        !GND = bool<> multi_inv::!GND
        !Vdd = bool<> multi_inv::!Vdd
        p = bool<> multi_inv::p
        q = bool<> multi_inv::q
        x = inv<> multi_inv::x^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> x[0..3]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> p
        bool<> q
        x[0] ( , , p, q);
        x[0].a@[iscomb]
        x[3].b@[iscomb]
      footprint: {
        !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
        p = bool^0 = multi_inv<>::p (3) @[ iscomb port-alias sub-FO- sub-FO+ ] 
        q = bool^0 = multi_inv<>::q (4) @[ port-alias sub-FI- sub-FI+ ] 
        x = process inv<>^1
          {
            [0] = multi_inv<>::x[0] (1) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::p (3) @[ iscomb port-alias sub-FO- sub-FO+ ] 
              b = bool^0 = multi_inv<>::q (4) @[ port-alias sub-FI- sub-FI+ ] 
            )
            [1] = multi_inv<>::x[1] (2) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::x[1].a (5) @[ port-alias sub-FO- sub-FO+ ] 
              b = bool^0 = multi_inv<>::x[1].b (6) @[ port-alias sub-FI- sub-FI+ ] 
            )
            [2] = multi_inv<>::x[2] (3) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::x[2].a (7) @[ port-alias sub-FO- sub-FO+ ] 
              b = bool^0 = multi_inv<>::x[2].b (8) @[ port-alias sub-FI- sub-FI+ ] 
            )
            [3] = multi_inv<>::x[3] (4) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::x[3].a (9) @[ port-alias sub-FO- sub-FO+ ] 
              b = bool^0 = multi_inv<>::x[3].b (10) @[ iscomb port-alias sub-FI- sub-FI+ ] 
            )
          }
        Created state:
        process instance pool: (4 ports, 0 local, 0 mapped)
        1	multi_inv<>::x[0] @[ port-alias ]	inv<>
          bool: 1,2,3,4
        2	multi_inv<>::x[1] @[ port-alias ]	inv<>
          bool: 1,2,5,6
        3	multi_inv<>::x[2] @[ port-alias ]	inv<>
          bool: 1,2,7,8
        4	multi_inv<>::x[3] @[ port-alias ]	inv<>
          bool: 1,2,9,10
        bool instance pool: (10 ports, 0 local, 0 mapped)
        1	multi_inv<>::!GND @[ supply_low port-alias ]	
        2	multi_inv<>::!Vdd @[ supply_high port-alias ]	
        3	multi_inv<>::p @[ iscomb port-alias sub-FO- sub-FO+ ]	
        4	multi_inv<>::q @[ port-alias sub-FI- sub-FI+ ]	
        5	multi_inv<>::x[1].a @[ port-alias sub-FO- sub-FO+ ]	
        6	multi_inv<>::x[1].b @[ port-alias sub-FI- sub-FI+ ]	
        7	multi_inv<>::x[2].a @[ port-alias sub-FO- sub-FO+ ]	
        8	multi_inv<>::x[2].b @[ port-alias sub-FI- sub-FI+ ]	
        9	multi_inv<>::x[3].a @[ port-alias sub-FO- sub-FO+ ]	
        10	multi_inv<>::x[3].b @[ iscomb port-alias sub-FI- sub-FI+ ]	
        bool port aliases:
        1: multi_inv<>::x[0].!GND = multi_inv<>::x[1].!GND = multi_inv<>::x[2].!GND = multi_inv<>::x[3].!GND = multi_inv<>::!GND @[ supply_low port-alias ]
        2: multi_inv<>::x[0].!Vdd = multi_inv<>::x[1].!Vdd = multi_inv<>::x[2].!Vdd = multi_inv<>::x[3].!Vdd = multi_inv<>::!Vdd @[ supply_high port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = multi_inv<> foo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  foo = process multi_inv<>^0 = foo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = process inv<>^1
      {
        [0] = foo.x[0] (2) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          a = bool^0 = foo.x[0].a (3) @[ iscomb sub-FO- sub-FO+ ] 
          b = bool^0 = foo.x[0].b (4) @[ sub-FI- sub-FI+ ] 
        )
        [1] = foo.x[1] (3) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          a = bool^0 = foo.x[1].a (5) @[ sub-FO- sub-FO+ ] 
          b = bool^0 = foo.x[1].b (6) @[ !autokeeper sub-FI- sub-FI+ ] 
        )
        [2] = foo.x[2] (4) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          a = bool^0 = foo.x[2].a (7) @[ !autokeeper sub-FO- sub-FO+ ] 
          b = bool^0 = foo.x[2].b (8) @[ sub-FI- sub-FI+ ] 
        )
        [3] = foo.x[3] (5) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          a = bool^0 = foo.x[3].a (9) @[ sub-FO- sub-FO+ ] 
          b = bool^0 = foo.x[3].b (10) @[ iscomb sub-FI- sub-FI+ ] 
        )
      }
  )
  Created state:
  process instance pool: (0 ports, 5 local, 0 mapped)
  1	foo	multi_inv<>
    process: 2,3,4,5
    bool: 1,2,3,4,5,6,7,8,9,10
  2	foo.x[0]	inv<>
    bool: 1,2,3,4
  3	foo.x[1]	inv<>
    bool: 1,2,5,6
  4	foo.x[2]	inv<>
    bool: 1,2,7,8
  5	foo.x[3]	inv<>
    bool: 1,2,9,10
  bool instance pool: (0 ports, 10 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	foo.x[0].a @[ iscomb sub-FO- sub-FO+ ]	
  4	foo.x[0].b @[ sub-FI- sub-FI+ ]	
  5	foo.x[1].a @[ sub-FO- sub-FO+ ]	
  6	foo.x[1].b @[ !autokeeper sub-FI- sub-FI+ ]	
  7	foo.x[2].a @[ !autokeeper sub-FO- sub-FO+ ]	
  8	foo.x[2].b @[ sub-FI- sub-FI+ ]	
  9	foo.x[3].a @[ sub-FO- sub-FO+ ]	
  10	foo.x[3].b @[ iscomb sub-FI- sub-FI+ ]	
}
