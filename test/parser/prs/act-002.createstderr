
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	140
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	23	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	27	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	31	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	32
	42	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	28
	43	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	44	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	47	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	50	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	58	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	60	##ADDR##	footprnt	0	#HEAD#	#TAIL#	721
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	63	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	71	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	75	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	footprnt	0	#HEAD#	#TAIL#	529
	78	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo<
      pint<> i
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> x[0..i-1]
        bool<> y[0..i-1]
      )
      In definition "foo", we have: {
      Parameters:
        i = pint<> foo::i
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        x = bool<> foo::x^1
        y = bool<> foo::y^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x[0..i-1]
          bool<> y[0..i-1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        (:k:[0..i-1]:
          x[$k] -> y[$k]-
          ~x[$k] -> y[$k]+
        )
        }
      footprint collection: {
        <3> {
          !GND = bool^0 = foo<3>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<3>::!Vdd (2) @[ supply_high port-alias ] 
          i = pint^0 value: 3
          x = bool^1
            {
              [0] = foo<3>::x[0] (3) @[ port-alias loc-FO- loc-FO+ ] 
              [1] = foo<3>::x[1] (4) @[ port-alias loc-FO- loc-FO+ ] 
              [2] = foo<3>::x[2] (5) @[ port-alias loc-FO- loc-FO+ ] 
            }
          y = bool^1
            {
              [0] = foo<3>::y[0] (6) @[ port-alias loc-FI- loc-FI+ ] 
              [1] = foo<3>::y[1] (7) @[ port-alias loc-FI- loc-FI+ ] 
              [2] = foo<3>::y[2] (8) @[ port-alias loc-FI- loc-FI+ ] 
            }
          Created state:
          bool instance pool: (8 ports, 0 local, 0 mapped)
          1	foo<3>::!GND @[ supply_low port-alias ]	
          2	foo<3>::!Vdd @[ supply_high port-alias ]	
          3	foo<3>::x[0] @[ port-alias loc-FO- loc-FO+ ]	
          4	foo<3>::x[1] @[ port-alias loc-FO- loc-FO+ ]	
          5	foo<3>::x[2] @[ port-alias loc-FO- loc-FO+ ]	
          6	foo<3>::y[0] @[ port-alias loc-FI- loc-FI+ ]	
          7	foo<3>::y[1] @[ port-alias loc-FI- loc-FI+ ]	
          8	foo<3>::y[2] @[ port-alias loc-FI- loc-FI+ ]	
          resolved prs:
          x[0] -> y[0]-
          ~x[0] -> y[0]+
          x[1] -> y[1]-
          ~x[1] -> y[1]+
          x[2] -> y[2]-
          ~x[2] -> y[2]+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..5 none none : 2, 1 | 2, 1
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    x = foo<3> x
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  x = process foo<3>^0 = x (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^1
      {
        [0] = x.x[0] (3) @[ sub-FO- sub-FO+ ] 
        [1] = x.x[1] (4) @[ sub-FO- sub-FO+ ] 
        [2] = x.x[2] (5) @[ sub-FO- sub-FO+ ] 
      }
    y = bool^1
      {
        [0] = x.y[0] (6) @[ sub-FI- sub-FI+ ] 
        [1] = x.y[1] (7) @[ sub-FI- sub-FI+ ] 
        [2] = x.y[2] (8) @[ sub-FI- sub-FI+ ] 
      }
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	x	foo<3>
    bool: 1,2,3,4,5,6,7,8
  bool instance pool: (0 ports, 8 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	x.x[0] @[ sub-FO- sub-FO+ ]	
  4	x.x[1] @[ sub-FO- sub-FO+ ]	
  5	x.x[2] @[ sub-FO- sub-FO+ ]	
  6	x.y[0] @[ sub-FI- sub-FI+ ]	
  7	x.y[1] @[ sub-FI- sub-FI+ ]	
  8	x.y[2] @[ sub-FI- sub-FI+ ]	
}
