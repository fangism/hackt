
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	12	##ADDR##	nodeplch	0	#HEAD#	#TAIL#	21
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	24
	23	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	24
	24	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	26
	25	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	29	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	30	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	25
	31	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	493
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	footprnt	0	#HEAD#	#TAIL#	467
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> en
        bool<> a
        bool<> b
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        a = bool<> foo::a
        b = bool<> foo::b
        en = bool<> foo::en
        x = -node-<> foo::x
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> en
          bool<> a
          bool<> b
        )
      prs:
        {
        subckt <""> {
          en -> @x-
          ~@x & a -> b-
        }
        }
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) 
        !Vdd = bool^0 = foo<>::!Vdd (2) 
        a = bool^0 = foo<>::a (4) 
        b = bool^0 = foo<>::b (5) 
        en = bool^0 = foo<>::en (3) 
        Created state:
        bool instance pool:
        1	foo<>::!GND
        2	foo<>::!Vdd
        3	foo<>::en
        4	foo<>::a
        5	foo<>::b
        resolved prs:
        en & a -> b-
        internal node exprs: 
        @x- <- en
        subcircuit (rules, macros, @nodes): 
        1: 0..0 none 0..0 
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..0 none 0..0 : 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<> bar
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  bar = process foo<>^0 = bar (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    en = bool^0 = bar.en (3) 
    a = bool^0 = bar.a (4) 
    b = bool^0 = bar.b (5) 
  )
  Created state:
  process instance pool:
  1	bar
  bool instance pool:
  1	!GND
  2	!Vdd
  3	bar.en
  4	bar.a
  5	bar.b
}
