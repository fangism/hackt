Warning: node wrap<>::j has no pull-up nor pull-dn PRS fanin.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	104
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	20	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	22	##ADDR##	footprnt	0	#HEAD#	#TAIL#	367
	23	##ADDR##	procplch	0	#HEAD#	#TAIL#	31
	24	##ADDR##	procdefn	0	#HEAD#	#TAIL#	185
	25	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	26	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	27	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	35	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	48	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	55	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	56	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	62	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	63	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	64	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	footprnt	0	#HEAD#	#TAIL#	630
	70	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	71	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	72	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	78	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	80	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	81	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	footprnt	0	#HEAD#	#TAIL#	468
	87	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        ports: (
          bool<> a
          bool<> b
        )
      prs:
        a -> b-
        ~a -> b+
      footprint: {
        a = bool^0 = inv<>::a (1) 
        b = bool^0 = inv<>::b (2) 
        Created state:
        bool instance pool:
        1	inv<>::a
        2	inv<>::b
        resolved prs:
        a -> b-
        ~a -> b+
      }
      }

    wrap = process-definition (defined) wrap(
        bool<> w
        bool<> x
        bool<> y
        bool<> z
      )
      In definition "wrap", we have: {
      Instances:
        P = inv<> wrap::P
        Q = inv<> wrap::Q
        R = inv<> wrap::R
        j = bool<> wrap::j
        k = bool<> wrap::k
        l = bool<> wrap::l
        w = bool<> wrap::w
        x = bool<> wrap::x
        y = bool<> wrap::y
        z = bool<> wrap::z
      unroll sequence: 
        ports: (
          bool<> w
          bool<> x
          bool<> y
          bool<> z
        )
        bool<> j
        bool<> k
        bool<> l
        inv<> P
        P (w, x);
        x@[iscomb]
        inv<> Q
        Q (j, k);
        y@[iscomb]
        inv<> R
        R (k, l);
        l@[iscomb]
      footprint: {
        P = process inv<>^0 = wrap<>::P (1) (
          a = bool^0 = wrap<>::w (1) 
          b = bool^0 = wrap<>::x (2) @[ iscomb ] 
        )
        Q = process inv<>^0 = wrap<>::Q (2) (
          a = bool^0 = wrap<>::j (3) 
          b = bool^0 = wrap<>::k (4) 
        )
        R = process inv<>^0 = wrap<>::R (3) (
          a = bool^0 = wrap<>::k (4) 
          b = bool^0 = wrap<>::l (5) @[ iscomb ] 
        )
        j = bool^0 = wrap<>::j (3) 
        k = bool^0 = wrap<>::k (4) 
        l = bool^0 = wrap<>::l (5) @[ iscomb ] 
        w = bool^0 = wrap<>::w (1) 
        x = bool^0 = wrap<>::x (2) @[ iscomb ] 
        y = bool^0 = wrap<>::y (6) @[ iscomb ] 
        z = bool^0 = wrap<>::z (7) 
        Created state:
        process instance pool:
        1	wrap<>::P
        2	wrap<>::Q
        3	wrap<>::R
        bool instance pool:
        1	wrap<>::w
        2	wrap<>::x @[ iscomb ]
        3	wrap<>::j
        4	wrap<>::k
        5	wrap<>::l @[ iscomb ]
        6	wrap<>::y @[ iscomb ]
        7	wrap<>::z
      }
      }

  Instances:
    a = bool<> a
    b = bool<> b
    c = bool<> c
    d = bool<> d
    present = wrap<> present
}

footprint: {
  a = bool^0 = a (1) 
  b = bool^0 = b (2) @[ iscomb ] 
  c = bool^0 = c (3) @[ iscomb ] 
  d = bool^0 = d (4) 
  present = process wrap<>^0 = present (1) (
    w = bool^0 = a (1) 
    x = bool^0 = b (2) @[ iscomb ] 
    y = bool^0 = c (3) @[ iscomb ] 
    z = bool^0 = d (4) 
  )
  Created state:
  process instance pool:
  1	present
  bool instance pool:
  1	a
  2	b @[ iscomb ]
  3	c @[ iscomb ]
  4	d
}
