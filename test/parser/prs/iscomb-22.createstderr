
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	120
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	34
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	26	##ADDR##	procdefn	0	#HEAD#	#TAIL#	114
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	29	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	30	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	34	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	37	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	38	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	42	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	46	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	footprnt	0	#HEAD#	#TAIL#	582
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	footprnt	0	#HEAD#	#TAIL#	661
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        a@[iscomb]
        b@[autokeeper=0]
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) 
        !Vdd = bool^0 = inv<>::!Vdd (2) 
        a = bool^0 = inv<>::a (3) @[ iscomb ] 
        b = bool^0 = inv<>::b (4) @[ !autokeeper ] 
        Created state:
        bool instance pool: (4 ports)
        1	inv<>::!GND	
        2	inv<>::!Vdd	
        3	inv<>::a @[ iscomb ]	
        4	inv<>::b @[ !autokeeper ]	
      }
      }

    multi_inv = process-definition (defined) multi_inv(
        bool<> !GND
        bool<> !Vdd
        inv<> x[0..1]
      )
      In definition "multi_inv", we have: {
      Instances:
        !GND = bool<> multi_inv::!GND
        !Vdd = bool<> multi_inv::!Vdd
        x = inv<> multi_inv::x^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> x[0..1]
        )
        x[0] ( , , x[1].b, x[1].a);
      footprint: {
        !GND = bool^0 = multi_inv<>::!GND (1) 
        !Vdd = bool^0 = multi_inv<>::!Vdd (2) 
        x = process inv<>^1
          {
            [0] = multi_inv<>::x[0] (1) (
              !GND = bool^0 = multi_inv<>::!GND (1) 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) 
              a = bool^0 = multi_inv<>::x[0].a (3) @[ iscomb !autokeeper ] 
              b = bool^0 = multi_inv<>::x[0].b (4) @[ iscomb !autokeeper ] 
            )
            [1] = multi_inv<>::x[1] (2) (
              !GND = bool^0 = multi_inv<>::!GND (1) 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) 
              a = bool^0 = multi_inv<>::x[0].b (4) @[ iscomb !autokeeper ] 
              b = bool^0 = multi_inv<>::x[0].a (3) @[ iscomb !autokeeper ] 
            )
          }
        Created state:
        process instance pool: (2 ports)
        1	multi_inv<>::x[0]	inv<>
          bool: 1,2,3,4
        2	multi_inv<>::x[1]	inv<>
          bool: 1,2,4,3
        bool instance pool: (4 ports)
        1	multi_inv<>::!GND	
        2	multi_inv<>::!Vdd	
        3	multi_inv<>::x[0].a @[ iscomb !autokeeper ]	
        4	multi_inv<>::x[0].b @[ iscomb !autokeeper ]	
        bool port aliases:
        1: multi_inv<>::x[0].!GND = multi_inv<>::x[1].!GND = multi_inv<>::!GND
        2: multi_inv<>::x[0].!Vdd = multi_inv<>::x[1].!Vdd = multi_inv<>::!Vdd
        3: multi_inv<>::x[0].a = multi_inv<>::x[1].b @[ iscomb !autokeeper ]
        4: multi_inv<>::x[0].b = multi_inv<>::x[1].a @[ iscomb !autokeeper ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = multi_inv<> foo
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  foo = process multi_inv<>^0 = foo (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    x = process inv<>^1
      {
        [0] = foo.x[0] (2) (
          !GND = bool^0 = !GND (1) 
          !Vdd = bool^0 = !Vdd (2) 
          a = bool^0 = foo.x[0].a (3) @[ iscomb !autokeeper ] 
          b = bool^0 = foo.x[0].b (4) @[ iscomb !autokeeper ] 
        )
        [1] = foo.x[1] (3) (
          !GND = bool^0 = !GND (1) 
          !Vdd = bool^0 = !Vdd (2) 
          a = bool^0 = foo.x[0].b (4) @[ iscomb !autokeeper ] 
          b = bool^0 = foo.x[0].a (3) @[ iscomb !autokeeper ] 
        )
      }
  )
  Created state:
  process instance pool: (0 ports)
  1	foo	multi_inv<>
    process: 2,3
    bool: 1,2,3,4
  2	foo.x[0]	inv<>
    bool: 1,2,3,4
  3	foo.x[1]	inv<>
    bool: 1,2,4,3
  bool instance pool: (0 ports)
  1	!GND	
  2	!Vdd	
  3	foo.x[0].a @[ iscomb !autokeeper ]	
  4	foo.x[0].b @[ iscomb !autokeeper ]	
}
