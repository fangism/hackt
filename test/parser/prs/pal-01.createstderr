
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	1509
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	31
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	12	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	13	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	14	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	15	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	16	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	17	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	18	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	20	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	21	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	20
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	25	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	26	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	27	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	28	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	31	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	35	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	38	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	40	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	298
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	61
	42	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	43	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	45	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	303
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    matrix_array = process-definition (defined) matrix_array(
        bool<> in with indices: {
          [0..3][0..3]
        }

        bool<> _o
      )
      In definition "matrix_array", we have: {
      Instances:
        _o = bool<> _o
        in = bool<> in with indices: {
          [0..3][0..3]
        }

      unroll sequence: 
        bool<> in[0..3][0..3]
        bool<> _o
      prs:
        (|:i:[0..3]: (&:j:[0..3]: in[0][$j])) -> _o-
        (&:i:[0..3]: (|:j:[0..3]: ~in[0][$j])) -> _o+
      footprint: {
        bool^0 _o (instantiated) = ::matrix_array::_o (17) 
        bool^2 in with indices: {
        }
          unrolled indices: {
            [0][0] = ::matrix_array::in[0][0] (1) 
            [0][1] = ::matrix_array::in[0][1] (2) 
            [0][2] = ::matrix_array::in[0][2] (3) 
            [0][3] = ::matrix_array::in[0][3] (4) 
            [1][0] = ::matrix_array::in[1][0] (5) 
            [1][1] = ::matrix_array::in[1][1] (6) 
            [1][2] = ::matrix_array::in[1][2] (7) 
            [1][3] = ::matrix_array::in[1][3] (8) 
            [2][0] = ::matrix_array::in[2][0] (9) 
            [2][1] = ::matrix_array::in[2][1] (10) 
            [2][2] = ::matrix_array::in[2][2] (11) 
            [2][3] = ::matrix_array::in[2][3] (12) 
            [3][0] = ::matrix_array::in[3][0] (13) 
            [3][1] = ::matrix_array::in[3][1] (14) 
            [3][2] = ::matrix_array::in[3][2] (15) 
            [3][3] = ::matrix_array::in[3][3] (16) 
          }
        bool instance pool:
        1	::matrix_array::in[0][0]
        2	::matrix_array::in[0][1]
        3	::matrix_array::in[0][2]
        4	::matrix_array::in[0][3]
        5	::matrix_array::in[1][0]
        6	::matrix_array::in[1][1]
        7	::matrix_array::in[1][2]
        8	::matrix_array::in[1][3]
        9	::matrix_array::in[2][0]
        10	::matrix_array::in[2][1]
        11	::matrix_array::in[2][2]
        12	::matrix_array::in[2][3]
        13	::matrix_array::in[3][0]
        14	::matrix_array::in[3][1]
        15	::matrix_array::in[3][2]
        16	::matrix_array::in[3][3]
        17	::matrix_array::_o
        resolved prs:
        (in[0][0] & in[0][1] & in[0][2] & in[0][3]) | (in[0][0] & in[0][1] & in[0][2] & in[0][3]) | (in[0][0] & in[0][1] & in[0][2] & in[0][3]) | (in[0][0] & in[0][1] & in[0][2] & in[0][3]) -> _o-
        (~in[0][0] | ~in[0][1] | ~in[0][2] | ~in[0][3]) & (~in[0][0] | ~in[0][1] | ~in[0][2] | ~in[0][3]) & (~in[0][0] | ~in[0][1] | ~in[0][2] | ~in[0][3]) & (~in[0][0] | ~in[0][1] | ~in[0][2] | ~in[0][3]) -> _o+
      }
      }

  Instances:
    foo = process matrix_array<>^0 foo (instantiated) = ::foo (1) (
      bool^2 in with indices: {
        [0..3][0..3]
      }
        unrolled indices: {
          [0][0] = ::foo.in[0][0] (1) 
          [0][1] = ::foo.in[0][1] (2) 
          [0][2] = ::foo.in[0][2] (3) 
          [0][3] = ::foo.in[0][3] (4) 
          [1][0] = ::foo.in[1][0] (5) 
          [1][1] = ::foo.in[1][1] (6) 
          [1][2] = ::foo.in[1][2] (7) 
          [1][3] = ::foo.in[1][3] (8) 
          [2][0] = ::foo.in[2][0] (9) 
          [2][1] = ::foo.in[2][1] (10) 
          [2][2] = ::foo.in[2][2] (11) 
          [2][3] = ::foo.in[2][3] (12) 
          [3][0] = ::foo.in[3][0] (13) 
          [3][1] = ::foo.in[3][1] (14) 
          [3][2] = ::foo.in[3][2] (15) 
          [3][3] = ::foo.in[3][3] (16) 
        }
      bool^0 _o (instantiated) = ::foo._o (17) 
    )
}

Created state:
process instance pool:
1	::foo
bool instance pool:
1	::foo.in[0][0]
2	::foo.in[0][1]
3	::foo.in[0][2]
4	::foo.in[0][3]
5	::foo.in[1][0]
6	::foo.in[1][1]
7	::foo.in[1][2]
8	::foo.in[1][3]
9	::foo.in[2][0]
10	::foo.in[2][1]
11	::foo.in[2][2]
12	::foo.in[2][3]
13	::foo.in[3][0]
14	::foo.in[3][1]
15	::foo.in[3][2]
16	::foo.in[3][3]
17	::foo._o

