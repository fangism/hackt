
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	164
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	16	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	44
	38	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	28
	39	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	40	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	45	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	49	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	51	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	52	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	24
	56	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	801
	69	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	70	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	71	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	72	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	82	##ADDR##	footprnt	0	#HEAD#	#TAIL#	597
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
        bool<> z
        bool<> w
        bool<> p
        bool<> q
        bool<> r
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        p = bool<> foo::p
        q = bool<> foo::q
        r = bool<> foo::r
        w = bool<> foo::w
        x = bool<> foo::x
        y = bool<> foo::y
        z = bool<> foo::z
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
          bool<> z
          bool<> w
          bool<> p
          bool<> q
          bool<> r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        subckt <""> {
          ~y -> z+
          p -> q-
          ~p -> q+
        }
        z -> w-
        subckt <""> {
          passp(z,w,q)
          passp(p,q,r)
        }
        passn(x,y,z)
        }
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high ] 
        p = bool^0 = foo<>::p (7) 
        q = bool^0 = foo<>::q (8) 
        r = bool^0 = foo<>::r (9) 
        w = bool^0 = foo<>::w (6) 
        x = bool^0 = foo<>::x (3) 
        y = bool^0 = foo<>::y (4) 
        z = bool^0 = foo<>::z (5) 
        Created state:
        bool instance pool: (9 ports, 0 local, 0 mapped)
        1	foo<>::!GND @[ supply_low ]	
        2	foo<>::!Vdd @[ supply_high ]	
        3	foo<>::x	
        4	foo<>::y	
        5	foo<>::z	
        6	foo<>::w	
        7	foo<>::p	
        8	foo<>::q	
        9	foo<>::r	
        resolved prs:
        ~y -> z+
        p -> q-
        ~p -> q+
        z -> w-
        resolved macros:
        passp(z,w,q)
        passp(p,q,r)
        passn(x,y,z)
        subcircuit (rules, macros, @nodes): 
        1: 0..2 none none 
        2: none 0..1 none 
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..3 0..2 none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<> bar
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bar = process foo<>^0 = bar (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^0 = bar.x (3) 
    y = bool^0 = bar.y (4) 
    z = bool^0 = bar.z (5) 
    w = bool^0 = bar.w (6) 
    p = bool^0 = bar.p (7) 
    q = bool^0 = bar.q (8) 
    r = bool^0 = bar.r (9) 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	bar	foo<>
    bool: 1,2,3,4,5,6,7,8,9
  bool instance pool: (0 ports, 9 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	bar.x	
  4	bar.y	
  5	bar.z	
  6	bar.w	
  7	bar.p	
  8	bar.q	
  9	bar.r	
}
