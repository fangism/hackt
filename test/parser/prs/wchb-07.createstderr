WARNING: process wchb<>::l lacks connection to a consumer.
WARNING: process wchb<>::r lacks connection to a producer.
Warnings found (2) while creating complete type wchb<>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	footprnt	0	#HEAD#	#TAIL#	338
	28	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	33	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	36	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	footprnt	0	#HEAD#	#TAIL#	356
	51	##ADDR##	procdefn	0	#HEAD#	#TAIL#	104
	52	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	53	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	54	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	55	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	footprnt	0	#HEAD#	#TAIL#	298
	59	##ADDR##	procdefn	0	#HEAD#	#TAIL#	185
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	61	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	62	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	63	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	64	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	65	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	66	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	67	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	32
	68	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	69	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	70	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	71	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	72	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	75	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	76	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	78	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	80	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	90	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	92	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	94	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	95	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	97	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	99	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	100	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	101	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	103	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	106	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	48
	107	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	36
	108	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	109	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	110	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	111	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	112	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	113	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	114	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	115	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	117	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	118	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	119	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	120	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	121	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	123	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	125	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	126	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	127	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	128	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	129	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	132	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	133	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	134	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	135	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	136	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	137	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	138	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	139	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	141	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	142	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	143	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	144	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	146	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	147	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	148	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	150	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	151	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	152	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	153	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	154	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	28
	155	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	156	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	157	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	159	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	160	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	161	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	162	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	163	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	164	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	165	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	166	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	24
	167	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	168	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	169	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	170	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	171	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	172	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	173	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	174	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	175	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	176	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	177	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	178	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	179	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	180	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	181	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1737
	182	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	183	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	184	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	185	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	186	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	187	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	188	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	189	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	190	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	191	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	192	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	193	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	194	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	195	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	196	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	197	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	198	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	199	##ADDR##	footprnt	0	#HEAD#	#TAIL#	852
	200	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    _1of2 = process-definition (defined) _1of2(
        bool<> d[0..1]
        bool<> t
        bool<> f
      )
      In definition "_1of2", we have: {
      Instances:
        d = bool<> _1of2::d^1
        f = bool<> _1of2::f
        t = bool<> _1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> t
          bool<> f
        )
        d[0] = f;
        d[1] = t;
      footprint: {
        d = bool^1
          {
            [0] = _1of2<>::f (2) @[ port-alias ] 
            [1] = _1of2<>::t (1) @[ port-alias ] 
          }
        f = bool^0 = _1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = _1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	_1of2<>::t @[ port-alias ]	
        2	_1of2<>::f @[ port-alias ]	
        bool port aliases:
        1: _1of2<>::t = _1of2<>::d[1] @[ port-alias ]
        2: _1of2<>::f = _1of2<>::d[0] @[ port-alias ]
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> e
        bool<> t
        bool<> f
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
        f = bool<> e1of2::f
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> e
          bool<> t
          bool<> f
        )
        d[0] = f;
        d[1] = t;
      footprint: {
        d = bool^1
          {
            [0] = e1of2<>::f (3) @[ port-alias ] 
            [1] = e1of2<>::t (2) @[ port-alias ] 
          }
        e = bool^0 = e1of2<>::e (1) @[ port-alias ] 
        f = bool^0 = e1of2<>::f (3) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (2) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	e1of2<>::e @[ port-alias ]	
        2	e1of2<>::t @[ port-alias ]	
        3	e1of2<>::f @[ port-alias ]	
        bool port aliases:
        2: e1of2<>::t = e1of2<>::d[1] @[ port-alias ]
        3: e1of2<>::f = e1of2<>::d[0] @[ port-alias ]
      }
      }

    globals = process-definition (defined) globals(
        bool<> _sReset
        bool<> _pReset
      )
      In definition "globals", we have: {
      Instances:
        _pReset = bool<> globals::_pReset
        _sReset = bool<> globals::_sReset
      unroll sequence: 
        ports: (
          bool<> _sReset
          bool<> _pReset
        )
      footprint: {
        _pReset = bool^0 = globals<>::_pReset (2) @[ port-alias ] 
        _sReset = bool^0 = globals<>::_sReset (1) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	globals<>::_sReset @[ port-alias ]	
        2	globals<>::_pReset @[ port-alias ]	
      }
      }

    wchb = process-definition (defined) wchb(
        bool<> !GND
        bool<> !Vdd
        globals<>? g
        e1of2<>? l
        e1of2<>! r
      )
      In definition "wchb", we have: {
      Instances:
        !GND = bool<> wchb::!GND
        !Vdd = bool<> wchb::!Vdd
        _pReset = bool<> wchb::_pReset
        _r = _1of2<> wchb::_r
        _sReset = bool<> wchb::_sReset
        g = globals<>? wchb::g
        l = e1of2<>? wchb::l
        mypReset = bool<> wchb::mypReset
        r = e1of2<>! wchb::r
        rv = bool<> wchb::rv
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          globals<>? g
          e1of2<>? l
          e1of2<>! r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        _1of2<> _r
        bool<> rv
        bool<> _sReset
        _sReset = g._sReset;
        bool<> _pReset
        _pReset = g._pReset;
        bool<> mypReset
      prs:
        {
        (:d:[0..1]:
          l.d[$d] & r.e -> _r.d[$d]-
          ~l.d[$d] & ~r.e -> _r.d[$d]+
          _r.d[$d] -> r.d[$d]-
          ~_r.d[$d] -> r.d[$d]+
        )
        g._sReset & _r.t & _r.f -> rv-
        ~g._sReset | ~_r.t | ~_r.f -> rv+
        rv -> l.e-
        ~rv -> l.e+
        }
      footprint: {
        !GND = bool^0 = wchb<>::!GND (9) @[ supply_low port-alias ] 
        !Vdd = bool^0 = wchb<>::!Vdd (10) @[ supply_high port-alias ] 
        _pReset = bool^0 = wchb<>::_pReset (2) @[ port-alias ] 
        _r = process _1of2<>^0 = wchb<>::_r (4) (
          d = bool^1
            {
              [0] = wchb<>::_r.d[0] (11) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
              [1] = wchb<>::_r.d[1] (12) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
            }
          t = bool^0 = wchb<>::_r.d[1] (12) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
          f = bool^0 = wchb<>::_r.d[0] (11) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
        )
        _sReset = bool^0 = wchb<>::_sReset (1) @[ port-alias loc-FO- loc-FO+ ] 
        g = process globals<>^0 = wchb<>::g (1) @[ port? port-alias ] (
          _sReset = bool^0 = wchb<>::_sReset (1) @[ port-alias loc-FO- loc-FO+ ] 
          _pReset = bool^0 = wchb<>::_pReset (2) @[ port-alias ] 
        )
        l = process e1of2<>^0 = wchb<>::l (2) @[ port? port-alias ] (
          d = bool^1
            {
              [0] = wchb<>::l.d[0] (3) @[ port-alias loc-FO- loc-FO+ ] 
              [1] = wchb<>::l.d[1] (4) @[ port-alias loc-FO- loc-FO+ ] 
            }
          e = bool^0 = wchb<>::l.e (5) @[ port-alias loc-FI- loc-FI+ ] 
          t = bool^0 = wchb<>::l.d[1] (4) @[ port-alias loc-FO- loc-FO+ ] 
          f = bool^0 = wchb<>::l.d[0] (3) @[ port-alias loc-FO- loc-FO+ ] 
        )
        mypReset = bool^0 = wchb<>::mypReset (14) 
        r = process e1of2<>^0 = wchb<>::r (3) @[ port! port-alias ] (
          d = bool^1
            {
              [0] = wchb<>::r.d[0] (6) @[ port-alias loc-FI- loc-FI+ ] 
              [1] = wchb<>::r.d[1] (7) @[ port-alias loc-FI- loc-FI+ ] 
            }
          e = bool^0 = wchb<>::r.e (8) @[ port-alias loc-FO- loc-FO+ ] 
          t = bool^0 = wchb<>::r.d[1] (7) @[ port-alias loc-FI- loc-FI+ ] 
          f = bool^0 = wchb<>::r.d[0] (6) @[ port-alias loc-FI- loc-FI+ ] 
        )
        rv = bool^0 = wchb<>::rv (13) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
        Created state:
        process instance pool: (3 ports, 1 local, 0 mapped)
        1	wchb<>::g @[ port? port-alias ]	globals<>
          bool: 1,2
        2	wchb<>::l @[ port? port-alias ]	e1of2<>
          bool: 5,4,3
        3	wchb<>::r @[ port! port-alias ]	e1of2<>
          bool: 8,7,6
        4	wchb<>::_r	_1of2<>
          bool: 12,11
        bool instance pool: (10 ports, 4 local, 0 mapped)
        1	wchb<>::_sReset @[ port-alias loc-FO- loc-FO+ ]	
        2	wchb<>::_pReset @[ port-alias ]	
        3	wchb<>::l.d[0] @[ port-alias loc-FO- loc-FO+ ]	
        4	wchb<>::l.d[1] @[ port-alias loc-FO- loc-FO+ ]	
        5	wchb<>::l.e @[ port-alias loc-FI- loc-FI+ ]	
        6	wchb<>::r.d[0] @[ port-alias loc-FI- loc-FI+ ]	
        7	wchb<>::r.d[1] @[ port-alias loc-FI- loc-FI+ ]	
        8	wchb<>::r.e @[ port-alias loc-FO- loc-FO+ ]	
        9	wchb<>::!GND @[ supply_low port-alias ]	
        10	wchb<>::!Vdd @[ supply_high port-alias ]	
        11	wchb<>::_r.d[0] @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        12	wchb<>::_r.d[1] @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        13	wchb<>::rv @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        14	wchb<>::mypReset	
        bool port aliases:
        3: wchb<>::l.d[0] = wchb<>::l.f @[ port-alias loc-FO- loc-FO+ ]
        4: wchb<>::l.d[1] = wchb<>::l.t @[ port-alias loc-FO- loc-FO+ ]
        6: wchb<>::r.d[0] = wchb<>::r.f @[ port-alias loc-FI- loc-FI+ ]
        7: wchb<>::r.d[1] = wchb<>::r.t @[ port-alias loc-FI- loc-FI+ ]
        resolved prs:
        l.d[0] & r.e -> _r.d[0]-
        ~l.d[0] & ~r.e -> _r.d[0]+
        _r.d[0] -> r.d[0]-
        ~_r.d[0] -> r.d[0]+
        l.d[1] & r.e -> _r.d[1]-
        ~l.d[1] & ~r.e -> _r.d[1]+
        _r.d[1] -> r.d[1]-
        ~_r.d[1] -> r.d[1]+
        _sReset & _r.d[1] & _r.d[0] -> rv-
        ~_sReset | ~_r.d[1] | ~_r.d[0] -> rv+
        rv -> l.e-
        ~rv -> l.e+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..11 none none : 10, 9 | 10, 9
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    W = wchb<> W
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  W = process wchb<>^0 = W (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    g = process globals<>^0 = W.g (2) (
      _sReset = bool^0 = W.g._sReset (3) @[ sub-FO- sub-FO+ ] 
      _pReset = bool^0 = W.g._pReset (4) 
    )
    l = process e1of2<>^0 = W.l (3) (
      d = bool^1
        {
          [0] = W.l.d[0] (5) @[ sub-FO- sub-FO+ ] 
          [1] = W.l.d[1] (6) @[ sub-FO- sub-FO+ ] 
        }
      e = bool^0 = W.l.e (7) @[ sub-FI- sub-FI+ ] 
      t = bool^0 = W.l.d[1] (6) @[ sub-FO- sub-FO+ ] 
      f = bool^0 = W.l.d[0] (5) @[ sub-FO- sub-FO+ ] 
    )
    r = process e1of2<>^0 = W.r (4) (
      d = bool^1
        {
          [0] = W.r.d[0] (8) @[ sub-FI- sub-FI+ ] 
          [1] = W.r.d[1] (9) @[ sub-FI- sub-FI+ ] 
        }
      e = bool^0 = W.r.e (10) @[ sub-FO- sub-FO+ ] 
      t = bool^0 = W.r.d[1] (9) @[ sub-FI- sub-FI+ ] 
      f = bool^0 = W.r.d[0] (8) @[ sub-FI- sub-FI+ ] 
    )
  )
  Created state:
  process instance pool: (0 ports, 4 local, 1 mapped)
  1	W	wchb<>
    process: 2,3,4
    bool: 3,4,5,6,7,8,9,10,1,2
  2	W.g	globals<>
    bool: 3,4
  3	W.l	e1of2<>
    bool: 7,6,5
  4	W.r	e1of2<>
    bool: 10,9,8
  private sub-process index map:
    (1 -> 0)
    (5 -> 1)
  bool instance pool: (0 ports, 10 local, 4 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	W.g._sReset @[ sub-FO- sub-FO+ ]	
  4	W.g._pReset	
  5	W.l.d[0] @[ sub-FO- sub-FO+ ]	
  6	W.l.d[1] @[ sub-FO- sub-FO+ ]	
  7	W.l.e @[ sub-FI- sub-FI+ ]	
  8	W.r.d[0] @[ sub-FI- sub-FI+ ]	
  9	W.r.d[1] @[ sub-FI- sub-FI+ ]	
  10	W.r.e @[ sub-FO- sub-FO+ ]	
  private sub-bool index map:
    (1 -> 0)
    (5 -> 4)
}
