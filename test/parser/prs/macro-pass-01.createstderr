
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	32
	21	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	procdefn	0	#HEAD#	#TAIL#	147
	26	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	32	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	34	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	45	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	46	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	52	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	53	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	54	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	55	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	56	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	57	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	58	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	59	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	61	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	62	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	32
	67	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	72	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	footprnt	0	#HEAD#	#TAIL#	302

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    passn = process-definition (defined) passn(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passn", we have: {
      Instances:
        !GND = bool<> passn::!GND
        !Vdd = bool<> passn::!Vdd
        d = bool<> passn::d
        g = bool<> passn::g
        s = bool<> passn::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> s
          bool<> d
        )
      prs:
        {
        passn(g,s,d)
        }
      }

    passnp = process-definition (defined) passnp(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
      )
      In definition "passnp", we have: {
      Instances:
        !GND = bool<> passnp::!GND
        !Vdd = bool<> passnp::!Vdd
        _g = bool<> passnp::_g
        d = bool<> passnp::d
        g = bool<> passnp::g
        n = passn<> passnp::n
        p = passp<> passnp::p
        s = bool<> passnp::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> _g
          bool<> s
          bool<> d
        )
        passn<> n
        n ( , , g, s, d);
        passp<> p
        p ( , , _g, s, d);
      }

    passp = process-definition (defined) passp(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passp", we have: {
      Instances:
        !GND = bool<> passp::!GND
        !Vdd = bool<> passp::!Vdd
        d = bool<> passp::d
        g = bool<> passp::g
        s = bool<> passp::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> s
          bool<> d
        )
      prs:
        {
        passp(g,s,d)
        }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  Created state:
  bool instance pool: (0 ports, 2 local, 0 mapped)
  1	!GND	
  2	!Vdd	
}
