
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	10	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	12	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	footprnt	0	#HEAD#	#TAIL#	298
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	23	##ADDR##	procdefn	0	#HEAD#	#TAIL#	91
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	25	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	28	##ADDR##	footprnt	0	#HEAD#	#TAIL#	280
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	37	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	footprnt	0	#HEAD#	#TAIL#	483
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	44	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	45	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	46	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	47	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	48	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	49	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	55	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	65	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	66	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	70	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	71	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	footprnt	0	#HEAD#	#TAIL#	484
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	76	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	77	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	78	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	80	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	81	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	82	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	83	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	84	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	85	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	87	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	88	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	90	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	92	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	93	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	96	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	97	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	101	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	102	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	103	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	105	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	106	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	107	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	108	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	109	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	112	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1198
	114	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	115	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	116	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	117	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	118	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	119	##ADDR##	procdefn	0	#HEAD#	#TAIL#	117
	120	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	121	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	122	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	123	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	124	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	125	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	126	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	127	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	128	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	129	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	131	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	132	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	133	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	136	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	137	##ADDR##	footprnt	0	#HEAD#	#TAIL#	919
	138	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	139	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	140	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	141	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	142	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	143	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	145	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	146	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	147	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	148	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	150	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	151	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	152	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	153	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  6 definitions
  0 typedefs
  Definitions:
    alt_e1of2 = process-definition (defined) alt_e1of2(
        e1of2<> a
        bp<> t
        bp<> e
      )
      In definition "alt_e1of2", we have: {
      Instances:
        a = e1of2<> alt_e1of2::a
        e = bp<> alt_e1of2::e
        t = bp<> alt_e1of2::t
      unroll sequence: 
        ports: (
          e1of2<> a
          bp<> t
          bp<> e
        )
        t.a = a.t;
        e.a = a.e;
      footprint: {
        a = process e1of2<>^0 = alt_e1of2<>::a (1) @[ port-alias ] (
          t = bool^0 = alt_e1of2<>::a.t (1) @[ port-alias ] 
          e = bool^0 = alt_e1of2<>::a.e (2) @[ port-alias ] 
        )
        e = process bp<>^0 = alt_e1of2<>::e (3) @[ port-alias ] (
          a = bool^0 = alt_e1of2<>::a.e (2) @[ port-alias ] 
        )
        t = process bp<>^0 = alt_e1of2<>::t (2) @[ port-alias ] (
          a = bool^0 = alt_e1of2<>::a.t (1) @[ port-alias ] 
        )
        Created state:
        process instance pool: (3 ports, 0 local, 0 mapped)
        1	alt_e1of2<>::a @[ port-alias ]	e1of2<>
          bool: 1,2
        2	alt_e1of2<>::t @[ port-alias ]	bp<>
          bool: 1
        3	alt_e1of2<>::e @[ port-alias ]	bp<>
          bool: 2
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	alt_e1of2<>::a.t @[ port-alias ]	
        2	alt_e1of2<>::a.e @[ port-alias ]	
        bool port aliases:
        1: alt_e1of2<>::a.t = alt_e1of2<>::t.a @[ port-alias ]
        2: alt_e1of2<>::a.e = alt_e1of2<>::e.a @[ port-alias ]
      }
      }

    blah2 = process-definition (defined) blah2(
        bool<> !GND
        bool<> !Vdd
        e1of2<> l
        e1of2<> r
      )
      In definition "blah2", we have: {
      Instances:
        !GND = bool<> blah2::!GND
        !Vdd = bool<> blah2::!Vdd
        l = e1of2<> blah2::l
        r = e1of2<> blah2::r
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<> l
          e1of2<> r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        r.t@[iscomb=1]
        l.e@[iscomb=1]
      footprint: {
        !GND = bool^0 = blah2<>::!GND (5) @[ supply_low port-alias ] 
        !Vdd = bool^0 = blah2<>::!Vdd (6) @[ supply_high port-alias ] 
        l = process e1of2<>^0 = blah2<>::l (1) @[ port-alias ] (
          t = bool^0 = blah2<>::l.t (1) @[ port-alias ] 
          e = bool^0 = blah2<>::l.e (2) @[ iscomb port-alias ] 
        )
        r = process e1of2<>^0 = blah2<>::r (2) @[ port-alias ] (
          t = bool^0 = blah2<>::r.t (3) @[ iscomb port-alias ] 
          e = bool^0 = blah2<>::r.e (4) @[ port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	blah2<>::l @[ port-alias ]	e1of2<>
          bool: 1,2
        2	blah2<>::r @[ port-alias ]	e1of2<>
          bool: 3,4
        bool instance pool: (6 ports, 0 local, 0 mapped)
        1	blah2<>::l.t @[ port-alias ]	
        2	blah2<>::l.e @[ iscomb port-alias ]	
        3	blah2<>::r.t @[ iscomb port-alias ]	
        4	blah2<>::r.e @[ port-alias ]	
        5	blah2<>::!GND @[ supply_low port-alias ]	
        6	blah2<>::!Vdd @[ supply_high port-alias ]	
      }
      }

    blah3 = process-definition (defined) blah3(
        bool<> !GND
        bool<> !Vdd
        alt_e1of2<> in
        alt_e1of2<> out
      )
      In definition "blah3", we have: {
      Instances:
        !GND = bool<> blah3::!GND
        !Vdd = bool<> blah3::!Vdd
        in = alt_e1of2<> blah3::in
        in_a = e1of2<> blah3::in_a
        ma = blah2<> blah3::ma
        out = alt_e1of2<> blah3::out
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          alt_e1of2<> in
          alt_e1of2<> out
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        e1of2<> in_a
        in_a = in.a;
        blah2<> ma
        ma ( , , in_a, out.a);
      footprint: {
        !GND = bool^0 = blah3<>::!GND (5) @[ supply_low port-alias ] 
        !Vdd = bool^0 = blah3<>::!Vdd (6) @[ supply_high port-alias ] 
        in = process alt_e1of2<>^0 = blah3<>::in (1) @[ port-alias ] (
          a = process e1of2<>^0 = blah3<>::in_a (2) @[ port-alias ] (
            t = bool^0 = blah3<>::in_a.t (1) @[ port-alias ] 
            e = bool^0 = blah3<>::in_a.e (2) @[ iscomb port-alias ] 
          )
          t = process bp<>^0 = blah3<>::in.t (3) @[ port-alias ] (
            a = bool^0 = blah3<>::in_a.t (1) @[ port-alias ] 
          )
          e = process bp<>^0 = blah3<>::in.e (4) @[ port-alias ] (
            a = bool^0 = blah3<>::in_a.e (2) @[ iscomb port-alias ] 
          )
        )
        in_a = process e1of2<>^0 = blah3<>::in_a (2) @[ port-alias ] (
          t = bool^0 = blah3<>::in_a.t (1) @[ port-alias ] 
          e = bool^0 = blah3<>::in_a.e (2) @[ iscomb port-alias ] 
        )
        ma = process blah2<>^0 = blah3<>::ma (9) (
          !GND = bool^0 = blah3<>::!GND (5) @[ supply_low port-alias ] 
          !Vdd = bool^0 = blah3<>::!Vdd (6) @[ supply_high port-alias ] 
          l = process e1of2<>^0 = blah3<>::in_a (2) @[ port-alias ] (
            t = bool^0 = blah3<>::in_a.t (1) @[ port-alias ] 
            e = bool^0 = blah3<>::in_a.e (2) @[ iscomb port-alias ] 
          )
          r = process e1of2<>^0 = blah3<>::out.a (6) @[ port-alias ] (
            t = bool^0 = blah3<>::out.a.t (3) @[ iscomb port-alias ] 
            e = bool^0 = blah3<>::out.a.e (4) @[ port-alias ] 
          )
        )
        out = process alt_e1of2<>^0 = blah3<>::out (5) @[ port-alias ] (
          a = process e1of2<>^0 = blah3<>::out.a (6) @[ port-alias ] (
            t = bool^0 = blah3<>::out.a.t (3) @[ iscomb port-alias ] 
            e = bool^0 = blah3<>::out.a.e (4) @[ port-alias ] 
          )
          t = process bp<>^0 = blah3<>::out.t (7) @[ port-alias ] (
            a = bool^0 = blah3<>::out.a.t (3) @[ iscomb port-alias ] 
          )
          e = process bp<>^0 = blah3<>::out.e (8) @[ port-alias ] (
            a = bool^0 = blah3<>::out.a.e (4) @[ port-alias ] 
          )
        )
        Created state:
        process instance pool: (8 ports, 1 local, 0 mapped)
        1	blah3<>::in @[ port-alias ]	alt_e1of2<>
          process: 2,3,4
          bool: 1,2
        2	blah3<>::in_a @[ port-alias ]	e1of2<>
          bool: 1,2
        3	blah3<>::in.t @[ port-alias ]	bp<>
          bool: 1
        4	blah3<>::in.e @[ port-alias ]	bp<>
          bool: 2
        5	blah3<>::out @[ port-alias ]	alt_e1of2<>
          process: 6,7,8
          bool: 3,4
        6	blah3<>::out.a @[ port-alias ]	e1of2<>
          bool: 3,4
        7	blah3<>::out.t @[ port-alias ]	bp<>
          bool: 3
        8	blah3<>::out.e @[ port-alias ]	bp<>
          bool: 4
        9	blah3<>::ma	blah2<>
          process: 2,6
          bool: 1,2,3,4,5,6
        bool instance pool: (6 ports, 0 local, 0 mapped)
        1	blah3<>::in_a.t @[ port-alias ]	
        2	blah3<>::in_a.e @[ iscomb port-alias ]	
        3	blah3<>::out.a.t @[ iscomb port-alias ]	
        4	blah3<>::out.a.e @[ port-alias ]	
        5	blah3<>::!GND @[ supply_low port-alias ]	
        6	blah3<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: blah3<>::in.a.t = blah3<>::in.t.a @[ port-alias ]
        2: blah3<>::in.a.e = blah3<>::in.e.a @[ iscomb port-alias ]
        3: blah3<>::out.a.t = blah3<>::out.t.a @[ iscomb port-alias ]
        4: blah3<>::out.a.e = blah3<>::out.e.a @[ port-alias ]
      }
      }

    bp = process-definition (defined) bp(
        bool<> a
      )
      In definition "bp", we have: {
      Instances:
        a = bool<> bp::a
      unroll sequence: 
        ports: (
          bool<> a
        )
      footprint: {
        a = bool^0 = bp<>::a (1) @[ port-alias ] 
        Created state:
        bool instance pool: (1 ports, 0 local, 0 mapped)
        1	bp<>::a @[ port-alias ]	
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> t
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        e = bool<> e1of2::e
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> t
          bool<> e
        )
      footprint: {
        e = bool^0 = e1of2<>::e (2) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	e1of2<>::t @[ port-alias ]	
        2	e1of2<>::e @[ port-alias ]	
      }
      }

    obox = process-definition (defined) obox(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "obox", we have: {
      Instances:
        !GND = bool<> obox::!GND
        !Vdd = bool<> obox::!Vdd
        bar = blah3<> obox::bar
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        blah3<> bar
      footprint: {
        !GND = bool^0 = obox<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = obox<>::!Vdd (2) @[ supply_high port-alias ] 
        bar = process blah3<>^0 = obox<>::bar (1) (
          !GND = bool^0 = obox<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = obox<>::!Vdd (2) @[ supply_high port-alias ] 
          in = process alt_e1of2<>^0 = obox<>::bar.in (2) (
            a = process e1of2<>^0 = obox<>::bar.in.a (3) (
              t = bool^0 = obox<>::bar.in.a.t (3) 
              e = bool^0 = obox<>::bar.in.a.e (4) @[ iscomb ] 
            )
            t = process bp<>^0 = obox<>::bar.in.t (4) (
              a = bool^0 = obox<>::bar.in.a.t (3) 
            )
            e = process bp<>^0 = obox<>::bar.in.e (5) (
              a = bool^0 = obox<>::bar.in.a.e (4) @[ iscomb ] 
            )
          )
          out = process alt_e1of2<>^0 = obox<>::bar.out (6) (
            a = process e1of2<>^0 = obox<>::bar.out.a (7) (
              t = bool^0 = obox<>::bar.out.a.t (5) @[ iscomb ] 
              e = bool^0 = obox<>::bar.out.a.e (6) 
            )
            t = process bp<>^0 = obox<>::bar.out.t (8) (
              a = bool^0 = obox<>::bar.out.a.t (5) @[ iscomb ] 
            )
            e = process bp<>^0 = obox<>::bar.out.e (9) (
              a = bool^0 = obox<>::bar.out.a.e (6) 
            )
          )
        )
        Created state:
        process instance pool: (0 ports, 9 local, 1 mapped)
        1	obox<>::bar	blah3<>
          process: 2,3,4,5,6,7,8,9
          bool: 3,4,5,6,1,2
        2	obox<>::bar.in	alt_e1of2<>
          process: 3,4,5
          bool: 3,4
        3	obox<>::bar.in.a	e1of2<>
          bool: 3,4
        4	obox<>::bar.in.t	bp<>
          bool: 3
        5	obox<>::bar.in.e	bp<>
          bool: 4
        6	obox<>::bar.out	alt_e1of2<>
          process: 7,8,9
          bool: 5,6
        7	obox<>::bar.out.a	e1of2<>
          bool: 5,6
        8	obox<>::bar.out.t	bp<>
          bool: 5
        9	obox<>::bar.out.e	bp<>
          bool: 6
        private sub-process index map:
          (1 -> 0)
          (10 -> 1)
        bool instance pool: (2 ports, 4 local, 0 mapped)
        1	obox<>::!GND @[ supply_low port-alias ]	
        2	obox<>::!Vdd @[ supply_high port-alias ]	
        3	obox<>::bar.in.a.t	
        4	obox<>::bar.in.a.e @[ iscomb ]	
        5	obox<>::bar.out.a.t @[ iscomb ]	
        6	obox<>::bar.out.a.e	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = obox<> foo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  foo = process obox<>^0 = foo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 10 mapped)
  1	foo	obox<>
    bool: 1,2
  private sub-process index map:
    (1 -> 0)
    (2 -> 10)
  bool instance pool: (0 ports, 2 local, 4 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 4)
}
