
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	158
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	10	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	11	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	12	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	22	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	26	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	30	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	39	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	42	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	43	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	44	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	45	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	48	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	56	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	57	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	58	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	67	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	footprnt	0	#HEAD#	#TAIL#	748
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	72	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	79	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	84	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	footprnt	0	#HEAD#	#TAIL#	507
	86	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    celemNinv = process-definition (defined) celemNinv<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> a[0..N-1]
        bool<> _o
      )
      In definition "celemNinv", we have: {
      Parameters:
        M = pint<> celemNinv::M
        N = pint<> celemNinv::N
      Instances:
        !GND = bool<> celemNinv::!GND
        !Vdd = bool<> celemNinv::!Vdd
        _o = bool<> celemNinv::_o
        a = bool<> celemNinv::a^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a[0..N-1]
          bool<> _o
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        pint<> M
        M = N;
      prs:
        {
        (&:i:[0..M-1]: a[$i]) -> _o-
        (&:i:[0..M-1]: ~a[$i]) -> _o+
        }
      footprint collection: {
        <4> {
          !GND = bool^0 = celemNinv<4>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = celemNinv<4>::!Vdd (2) @[ supply_high port-alias ] 
          M = pint^0 value: 4
          N = pint^0 value: 4
          _o = bool^0 = celemNinv<4>::_o (3) @[ port-alias loc-FI- loc-FI+ ] 
          a = bool^1
            {
              [0] = celemNinv<4>::a[0] (4) @[ port-alias loc-FO- loc-FO+ ] 
              [1] = celemNinv<4>::a[1] (5) @[ port-alias loc-FO- loc-FO+ ] 
              [2] = celemNinv<4>::a[2] (6) @[ port-alias loc-FO- loc-FO+ ] 
              [3] = celemNinv<4>::a[3] (7) @[ port-alias loc-FO- loc-FO+ ] 
            }
          Created state:
          bool instance pool: (7 ports, 0 local, 0 mapped)
          1	celemNinv<4>::!GND @[ supply_low port-alias ]	
          2	celemNinv<4>::!Vdd @[ supply_high port-alias ]	
          3	celemNinv<4>::_o @[ port-alias loc-FI- loc-FI+ ]	
          4	celemNinv<4>::a[0] @[ port-alias loc-FO- loc-FO+ ]	
          5	celemNinv<4>::a[1] @[ port-alias loc-FO- loc-FO+ ]	
          6	celemNinv<4>::a[2] @[ port-alias loc-FO- loc-FO+ ]	
          7	celemNinv<4>::a[3] @[ port-alias loc-FO- loc-FO+ ]	
          resolved prs:
          a[0] & a[1] & a[2] & a[3] -> _o-
          ~a[0] & ~a[1] & ~a[2] & ~a[3] -> _o+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..1 none none : 2, 1 | 2, 1
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    c = celemNinv<4> c
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  c = process celemNinv<4>^0 = c (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    a = bool^1
      {
        [0] = c.a[0] (3) @[ sub-FO- sub-FO+ ] 
        [1] = c.a[1] (4) @[ sub-FO- sub-FO+ ] 
        [2] = c.a[2] (5) @[ sub-FO- sub-FO+ ] 
        [3] = c.a[3] (6) @[ sub-FO- sub-FO+ ] 
      }
    _o = bool^0 = c._o (7) @[ sub-FI- sub-FI+ ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	c	celemNinv<4>
    bool: 1,2,7,3,4,5,6
  bool instance pool: (0 ports, 7 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	c.a[0] @[ sub-FO- sub-FO+ ]	
  4	c.a[1] @[ sub-FO- sub-FO+ ]	
  5	c.a[2] @[ sub-FO- sub-FO+ ]	
  6	c.a[3] @[ sub-FO- sub-FO+ ]	
  7	c._o @[ sub-FI- sub-FI+ ]	
}
