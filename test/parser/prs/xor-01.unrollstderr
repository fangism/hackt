
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	92
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	11	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	15	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	142
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	35	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	37	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	42	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	44	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	45	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	46	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	47	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	52	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	58	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	59	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	60	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	67	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	68	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	69	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	75	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	76	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	77	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	78	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	80	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	81	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	82	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	83	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	84	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	85	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	86	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	87	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	88	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	89	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	90	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	91	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	92	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	96	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	97	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	101	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	102	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	103	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	104	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	108	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	109	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	111	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	114	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	115	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	116	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	117	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	118	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	119	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	120	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	121	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	123	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	124	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	125	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	126	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	127	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	128	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	129	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	130	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	131	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	132	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	133	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	134	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	135	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	136	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	137	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	138	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	139	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	140	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	141	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	142	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	143	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	146	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	147	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	148	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	150	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	151	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	152	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	153	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	154	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	155	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	156	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	157	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	159	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	160	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	161	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	162	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	163	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	164	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	165	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	166	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	167	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	168	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	169	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	170	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	171	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a -> b-
        ~a -> b+
      }

    xor2_ver1 = process-definition (defined) xor2_ver1(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "xor2_ver1", we have: {
      Instances:
        a = bool<> xor2_ver1::a
        a_ = bool<> xor2_ver1::a_
        b = bool<> xor2_ver1::b
        b_ = bool<> xor2_ver1::b_
        c = bool<> xor2_ver1::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
        bool<> a_
        bool<> b_
      prs:
        a -> a_-
        ~a -> a_+
        b -> b_-
        ~b -> b_+
        (a & b) | (b_ & a_) -> c-
        (~a & ~b_) | (~a_ & ~b) -> c+
      }

    xor2_ver2 = process-definition (defined) xor2_ver2(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "xor2_ver2", we have: {
      Instances:
        a = bool<> xor2_ver2::a
        a_ = bool<> xor2_ver2::a_
        ai = inv<> xor2_ver2::ai
        b = bool<> xor2_ver2::b
        b_ = bool<> xor2_ver2::b_
        bi = inv<> xor2_ver2::bi
        c = bool<> xor2_ver2::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
        bool<> a_
        bool<> b_
        inv<> ai
        ai (a, a_);
        inv<> bi
        bi (b, b_);
      prs:
        (a & b) | (b_ & a_) -> c-
        (~a | ~b) & (~b_ | ~a_) -> c+
      }

    xor2_ver3 = process-definition (defined) xor2_ver3(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "xor2_ver3", we have: {
      Instances:
        a = bool<> xor2_ver3::a
        a_ = bool<> xor2_ver3::a_
        ai = inv<> xor2_ver3::ai
        b = bool<> xor2_ver3::b
        b_ = bool<> xor2_ver3::b_
        bi = inv<> xor2_ver3::bi
        c = bool<> xor2_ver3::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
        bool<> a_
        bool<> b_
        inv<> ai
        ai (a, a_);
        inv<> bi
        bi (b, b_);
      prs:
        (~a & ~b_) | (~a_ & ~b) -> c+
        (a | b_) & (a_ | b) -> c-
      }

}

footprint: {
}
