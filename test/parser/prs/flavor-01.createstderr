
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	31
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	142
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	32	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	34	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	35
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	35
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	44	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	45	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	39
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	51	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	35
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	footprnt	0	#HEAD#	#TAIL#	626
	58	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	pintplch	0	#HEAD#	#TAIL#	31
	61	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	62	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	81	##ADDR##	footprnt	0	#HEAD#	#TAIL#	510
	82	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  2 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    lvt = pint<> lvt
    svt = pint<> svt
  Definitions:
    nand_type = process-definition (defined) nand_type(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "nand_type", we have: {
      Instances:
        !GND = bool<> nand_type::!GND
        !Vdd = bool<> nand_type::!Vdd
        a = bool<> nand_type::a
        b = bool<> nand_type::b
        c = bool<> nand_type::c
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
          bool<> c
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        a<10;lvt> & b<10;svt=0> -> c-
        ~a<5,2;svt=1> | ~b<10;svt> -> c+
        }
      footprint: {
        !GND = bool^0 = nand_type<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = nand_type<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = nand_type<>::a (3) @[ port-alias loc-FO- loc-FO+ ] 
        b = bool^0 = nand_type<>::b (4) @[ port-alias loc-FO- loc-FO+ ] 
        c = bool^0 = nand_type<>::c (5) @[ port-alias loc-FI- loc-FI+ ] 
        Created state:
        bool instance pool: (5 ports, 0 local, 0 mapped)
        1	nand_type<>::!GND @[ supply_low port-alias ]	
        2	nand_type<>::!Vdd @[ supply_high port-alias ]	
        3	nand_type<>::a @[ port-alias loc-FO- loc-FO+ ]	
        4	nand_type<>::b @[ port-alias loc-FO- loc-FO+ ]	
        5	nand_type<>::c @[ port-alias loc-FI- loc-FI+ ]	
        resolved prs:
        a<10;lvt> & b<10;svt=0> -> c-
        ~a<5,2;svt=1> | ~b<10;svt> -> c+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    X = nand_type<> X
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  X = process nand_type<>^0 = X (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    a = bool^0 = X.a (3) @[ sub-FO- sub-FO+ ] 
    b = bool^0 = X.b (4) @[ sub-FO- sub-FO+ ] 
    c = bool^0 = X.c (5) @[ sub-FI- sub-FI+ ] 
  )
  lvt = pint^0 value: -2
  svt = pint^0 value: -1
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	X	nand_type<>
    bool: 1,2,3,4,5
  bool instance pool: (0 ports, 5 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	X.a @[ sub-FO- sub-FO+ ]	
  4	X.b @[ sub-FO- sub-FO+ ]	
  5	X.c @[ sub-FI- sub-FI+ ]	
}
