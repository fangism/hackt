
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	7	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	8	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	94
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	footprnt	0	#HEAD#	#TAIL#	294
	18	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	procdefn	0	#HEAD#	#TAIL#	83
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	footprnt	0	#HEAD#	#TAIL#	278
	26	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	27	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	28	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	footprnt	0	#HEAD#	#TAIL#	403
	32	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	34	##ADDR##	procdefn	0	#HEAD#	#TAIL#	90
	35	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	36	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	37	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	footprnt	0	#HEAD#	#TAIL#	346
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	46	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	47	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	48	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	49	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	50	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	51	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	55	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	56	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	58	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	61	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	62	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	footprnt	0	#HEAD#	#TAIL#	640
	65	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	68	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	69	##ADDR##	procdefn	0	#HEAD#	#TAIL#	81
	70	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	71	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	72	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	73	##ADDR##	footprnt	0	#HEAD#	#TAIL#	472
	74	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	75	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	77	##ADDR##	footprnt	0	#HEAD#	#TAIL#	292
	78	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  6 definitions
  0 typedefs
  Definitions:
    alt_e1of2 = process-definition (defined) alt_e1of2(
        e1of2<> a
        bp<> e
      )
      In definition "alt_e1of2", we have: {
      Instances:
        a = e1of2<> alt_e1of2::a
        e = bp<> alt_e1of2::e
      unroll sequence: 
        ports: (
          e1of2<> a
          bp<> e
        )
        e.a = a.e;
      footprint: {
        a = process e1of2<>^0 = alt_e1of2<>::a (1) (
          t = bool^0 = alt_e1of2<>::a.t (1) 
          e = bool^0 = alt_e1of2<>::a.e (2) 
        )
        e = process bp<>^0 = alt_e1of2<>::e (2) (
          a = bool^0 = alt_e1of2<>::a.e (2) 
        )
        Created state:
        process instance pool:
        1	alt_e1of2<>::a
        2	alt_e1of2<>::e
        bool instance pool:
        1	alt_e1of2<>::a.t
        2	alt_e1of2<>::a.e
        bool port aliases:
        2: alt_e1of2<>::a.e = alt_e1of2<>::e.a
      }
      }

    blah2 = process-definition (defined) blah2(
        e1of2<> l
      )
      In definition "blah2", we have: {
      Instances:
        l = e1of2<> blah2::l
      unroll sequence: 
        ports: (
          e1of2<> l
        )
        l.e@[iscomb=1]
      footprint: {
        l = process e1of2<>^0 = blah2<>::l (1) (
          t = bool^0 = blah2<>::l.t (1) 
          e = bool^0 = blah2<>::l.e (2) @[ iscomb ] 
        )
        Created state:
        process instance pool:
        1	blah2<>::l
        bool instance pool:
        1	blah2<>::l.t
        2	blah2<>::l.e @[ iscomb ]
      }
      }

    blah3 = process-definition (defined) blah3(
        alt_e1of2<> in
      )
      In definition "blah3", we have: {
      Instances:
        in = alt_e1of2<> blah3::in
        in_a = e1of2<> blah3::in_a
        ma = blah2<> blah3::ma
      unroll sequence: 
        ports: (
          alt_e1of2<> in
        )
        e1of2<> in_a
        in_a = in.a;
        blah2<> ma
        ma (in_a);
      footprint: {
        in = process alt_e1of2<>^0 = blah3<>::in (1) (
          a = process e1of2<>^0 = blah3<>::in_a (2) (
            t = bool^0 = blah3<>::in_a.t (1) 
            e = bool^0 = blah3<>::in_a.e (2) @[ iscomb ] 
          )
          e = process bp<>^0 = blah3<>::in.e (3) (
            a = bool^0 = blah3<>::in_a.e (2) @[ iscomb ] 
          )
        )
        in_a = process e1of2<>^0 = blah3<>::in_a (2) (
          t = bool^0 = blah3<>::in_a.t (1) 
          e = bool^0 = blah3<>::in_a.e (2) @[ iscomb ] 
        )
        ma = process blah2<>^0 = blah3<>::ma (4) (
          l = process e1of2<>^0 = blah3<>::in_a (2) (
            t = bool^0 = blah3<>::in_a.t (1) 
            e = bool^0 = blah3<>::in_a.e (2) @[ iscomb ] 
          )
        )
        Created state:
        process instance pool:
        1	blah3<>::in
        2	blah3<>::in_a
        3	blah3<>::in.e
        4	blah3<>::ma
        bool instance pool:
        1	blah3<>::in_a.t
        2	blah3<>::in_a.e @[ iscomb ]
        bool port aliases:
        2: blah3<>::in.a.e = blah3<>::in.e.a @[ iscomb ]
      }
      }

    bp = process-definition (defined) bp(
        bool<> a
      )
      In definition "bp", we have: {
      Instances:
        a = bool<> bp::a
      unroll sequence: 
        ports: (
          bool<> a
        )
      footprint: {
        a = bool^0 = bp<>::a (1) 
        Created state:
        bool instance pool:
        1	bp<>::a
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> t
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        e = bool<> e1of2::e
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> t
          bool<> e
        )
      footprint: {
        e = bool^0 = e1of2<>::e (2) 
        t = bool^0 = e1of2<>::t (1) 
        Created state:
        bool instance pool:
        1	e1of2<>::t
        2	e1of2<>::e
      }
      }

    obox = process-definition (defined) obox(
      )
      In definition "obox", we have: {
      Instances:
        bar = blah3<> obox::bar
      unroll sequence: 
        blah3<> bar
      footprint: {
        bar = process blah3<>^0 = obox<>::bar (1) (
          in = process alt_e1of2<>^0 = obox<>::bar.in (2) (
            a = process e1of2<>^0 = obox<>::bar.in.a (3) (
              t = bool^0 = obox<>::bar.in.a.t (1) 
              e = bool^0 = obox<>::bar.in.a.e (2) @[ iscomb ] 
            )
            e = process bp<>^0 = obox<>::bar.in.e (4) (
              a = bool^0 = obox<>::bar.in.a.e (2) @[ iscomb ] 
            )
          )
        )
        Created state:
        process instance pool:
        1	obox<>::bar
        2	obox<>::bar.in
        3	obox<>::bar.in.a
        4	obox<>::bar.in.e
        bool instance pool:
        1	obox<>::bar.in.a.t
        2	obox<>::bar.in.a.e @[ iscomb ]
      }
      }

  Instances:
    foo = obox<> foo
}

footprint: {
  foo = process obox<>^0 = foo (1) 
  Created state:
  process instance pool:
  1	foo
}
