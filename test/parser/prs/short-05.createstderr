
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	92
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	11	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	15	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	521
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	30	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	32	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	35	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	36	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	37	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	40	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	48	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	50	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	51	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	63	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	78
	64	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	65	##ADDR##	procdefn	0	#HEAD#	#TAIL#	388
	66	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	68	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	70	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	71	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	72	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	76	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	78	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	81	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	82	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	83	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	86	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	89	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	91	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	94	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	95	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	96	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	99	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	103	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	105	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	109	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	52
	110	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	111	##ADDR##	proccoll	0	#HEAD#	#TAIL#	57
	112	##ADDR##	procdefn	0	#HEAD#	#TAIL#	520
	113	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	114	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	115	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	116	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	26
	117	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	118	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	119	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	120	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	121	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	123	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	125	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	126	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	127	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	128	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	129	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	130	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	133	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	136	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	137	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	138	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	139	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	141	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	142	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	143	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	144	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	145	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	146	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	147	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	148	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	149	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	150	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	151	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	152	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	153	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	155	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	156	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	78
	157	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	158	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	159	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	160	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	161	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	162	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	163	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	78
	164	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36
	165	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	166	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	167	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	168	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	169	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	170	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	171	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	172	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	173	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	174	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	78
	175	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36
	176	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	177	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	178	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	179	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	180	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	181	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	182	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	52
	183	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36
	184	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	185	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	186	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	187	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	188	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	189	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	190	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	191	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	192	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    celem = process-definition (defined) celem<
      pint<> N
      >(
        bool<> in

        bool<> out
      )
      In definition "celem", we have: {
      Parameters:
        N = pint<> N
      Instances:
        in = bool<> in

        out = bool<> out
      unroll sequence: 
        pint<> N
        bool<> in[0..N-1]
        bool<> out
      prs:
        (&:i:[0..N-1]: in[$i]) -> out-
        (&:i:[0..N-1]: ~in[$i]) -> out+
      footprint collection: {
        <2> {
          bool^0 out (instantiated) = ::celem::out (1) 
          bool^1 in
            unrolled indices: {
              0 = ::celem::in[0] (2) 
              1 = ::celem::in[1] (3) 
            }
          pint^0 N value: ?
          bool instance pool:
          1	::celem::out
          2	::celem::in[0]
          3	::celem::in[1]
          resolved prs:
          in[0] & in[1] -> out-
          ~in[0] & ~in[1] -> out+
        }
      }
      }

    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a -> b-
        ~a -> b+
      }

    nand = process-definition (defined) nand<
      pint<> N
      >(
        bool<> in

        bool<> out
      )
      In definition "nand", we have: {
      Parameters:
        N = pint<> N
      Instances:
        in = bool<> in

        out = bool<> out
      unroll sequence: 
        pint<> N
        bool<> in[0..N-1]
        bool<> out
      prs:
        (&:i:[0..N-1]: in[$i]) -> out-
        (|:i:[0..N-1]: ~in[$i]) -> out+
      footprint collection: {
        <4> {
          bool^0 out (instantiated) = ::nand::out (1) 
          bool^1 in
            unrolled indices: {
              0 = ::nand::in[0] (2) 
              1 = ::nand::in[1] (3) 
              2 = ::nand::in[2] (4) 
              3 = ::nand::in[3] (5) 
            }
          pint^0 N value: ?
          bool instance pool:
          1	::nand::out
          2	::nand::in[0]
          3	::nand::in[1]
          4	::nand::in[2]
          5	::nand::in[3]
          resolved prs:
          in[0] & in[1] & in[2] & in[3] -> out-
          ~in[0] | ~in[1] | ~in[2] | ~in[3] -> out+
        }
      }
      }

    nor = process-definition (defined) nor<
      pint<> N
      >(
        bool<> in

        bool<> out
      )
      In definition "nor", we have: {
      Parameters:
        N = pint<> N
      Instances:
        in = bool<> in

        out = bool<> out
      unroll sequence: 
        pint<> N
        bool<> in[0..N-1]
        bool<> out
      prs:
        (|:i:[0..N-1]: in[$i]) -> out-
        (&:i:[0..N-1]: ~in[$i]) -> out+
      footprint collection: {
        <4> {
          bool^0 out (instantiated) = ::nor::out (1) 
          bool^1 in
            unrolled indices: {
              0 = ::nor::in[0] (2) 
              1 = ::nor::in[1] (3) 
              2 = ::nor::in[2] (4) 
              3 = ::nor::in[3] (5) 
            }
          pint^0 N value: ?
          bool instance pool:
          1	::nor::out
          2	::nor::in[0]
          3	::nor::in[1]
          4	::nor::in[2]
          5	::nor::in[3]
          resolved prs:
          in[0] | in[1] | in[2] | in[3] -> out-
          ~in[0] & ~in[1] & ~in[2] & ~in[3] -> out+
        }
      }
      }

  Instances:
    _c = process celem<2>^0 _c (instantiated) = ::_c (3) (
      bool^1 in
        unrolled indices: {
          0 = ::_c.in[0] (10) 
          1 = ::_c.in[1] (11) 
        }
      bool^0 out (instantiated) = ::z (5) 
    )
    _nand = process nand<4>^0 _nand (instantiated) = ::_nand (2) (
      bool^1 in
        unrolled indices: {
          0 = ::_nand.in[0] (6) 
          1 = ::_nand.in[1] (7) 
          2 = ::_nand.in[2] (8) 
          3 = ::_nand.in[3] (9) 
        }
      bool^0 out (instantiated) = ::z (5) 
    )
    _nor = process nor<4>^0 _nor (instantiated) = ::_nor (1) (
      bool^1 in
        unrolled indices: {
          0 = ::_nor.in[0] (1) 
          1 = ::_nor.in[1] (2) 
          2 = ::_nor.in[2] (3) 
          3 = ::_nor.in[3] (4) 
        }
      bool^0 out (instantiated) = ::z (5) 
    )
    z = bool^0 z (instantiated) = ::z (5) 
}

Created state:
process instance pool:
1	::_nor
2	::_nand
3	::_c
bool instance pool:
1	::_nor.in[0]
2	::_nor.in[1]
3	::_nor.in[2]
4	::_nor.in[3]
5	::z
6	::_nand.in[0]
7	::_nand.in[1]
8	::_nand.in[2]
9	::_nand.in[3]
10	::_c.in[0]
11	::_c.in[1]

