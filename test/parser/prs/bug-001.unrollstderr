
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	228
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	12	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	13	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	16	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	procdefn	0	#HEAD#	#TAIL#	253
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	24	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	25	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	26	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	27	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	35	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	42	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	45	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	46	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	47	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	48	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	51	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	59	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	60	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	61	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	64	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	38
	75	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	38
	76	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	77	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	79	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	80	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	83	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	89	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	91	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	46
	92	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	30
	93	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	94	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	54
	95	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	96	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	97	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	98	##ADDR##	procdefn	0	#HEAD#	#TAIL#	248
	99	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	100	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	101	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	102	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	103	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	104	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	105	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	106	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	107	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	108	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	109	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	110	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	111	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	28
	112	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	113	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	114	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	115	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	117	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	119	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	120	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	121	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	122	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	123	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	124	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	125	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	126	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	127	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	128	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	129	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	130	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	131	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	132	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	133	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	30
	134	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	135	##ADDR##	proccoll	0	#HEAD#	#TAIL#	57
	136	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	137	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	138	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	139	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	140	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	141	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    cel = process-definition (defined) cel<
      pint<> N
      >(
        bool<> i[0..N-1]
        bool<> o
      )
      In definition "cel", we have: {
      Parameters:
        N = pint<> cel::N
      Instances:
        c = gcel<cel::N, cel::N> cel::c
        i = bool<> cel::i^1
        o = bool<> cel::o
      unroll sequence: 
        bool<> i[0..N-1]
        bool<> o
        gcel<cel::N, cel::N> c
        c (i, i, o);
      footprint collection: {
        <2> {
          N = pint^0 value: 2
          c = process gcel<2, 2>^0 = cel::c (
            id = bool^1
              {
                [0] = cel::c.iu[0] 
                [1] = cel::c.iu[1] 
              }
            iu = bool^1
              {
                [0] = cel::c.iu[0] 
                [1] = cel::c.iu[1] 
              }
            o = bool^0 = cel::c.o 
          )
          i = bool^1
            {
              [0] = cel::c.id[0] 
              [1] = cel::c.id[1] 
            }
          o = bool^0 = cel::c.o 
        }
      }
      }

    foo = process-definition (defined) foo(
        bool<> Ld
        bool<> Re
        bool<> xe
        bool<> _rd
        bool<> x
      )
      In definition "foo", we have: {
      Instances:
        Ld = bool<> foo::Ld
        Re = bool<> foo::Re
        _rd = bool<> foo::_rd
        x = bool<> foo::x
        xe = bool<> foo::xe
      unroll sequence: 
        bool<> Ld
        bool<> Re
        bool<> xe
        bool<> _rd
        bool<> x
      prs:
        Ld & Re & xe & x -> _rd-
      footprint: {
        Ld = bool^0 = foo::Ld 
        Re = bool^0 = foo::Re 
        _rd = bool^0 = foo::_rd 
        x = bool^0 = foo::x 
        xe = bool^0 = foo::xe 
      }
      }

    gcel = process-definition (defined) gcel<
      pint<> D
      pint<> U
      >(
        bool<> id[0..D-1]
        bool<> iu[0..U-1]
        bool<> o
      )
      In definition "gcel", we have: {
      Parameters:
        D = pint<> gcel::D
        U = pint<> gcel::U
      Instances:
        id = bool<> gcel::id^1
        iu = bool<> gcel::iu^1
        o = bool<> gcel::o
      unroll sequence: 
        bool<> id[0..D-1]
        bool<> iu[0..U-1]
        bool<> o
      prs:
        (&:j:[0..D-1]: id[$j]) -> o-
        (&:j:[0..U-1]: ~iu[$j]) -> o+
      footprint collection: {
        <2, 2> {
          D = pint^0 value: 2
          U = pint^0 value: 2
          id = bool^1
            {
              [0] = gcel::id[0] 
              [1] = gcel::id[1] 
            }
          iu = bool^1
            {
              [0] = gcel::iu[0] 
              [1] = gcel::iu[1] 
            }
          o = bool^0 = gcel::o 
        }
      }
      }

  Instances:
    x = cel<2> x
    y = foo<> y
}

footprint: {
  x = process cel<2>^0 = x (
    i = bool^1
      {
        [0] = x.i[0] 
        [1] = x.i[1] 
      }
    o = bool^0 = x.o 
  )
  y = process foo<>^0 = y (
    Ld = bool^0 = y.Ld 
    Re = bool^0 = y.Re 
    xe = bool^0 = y.xe 
    _rd = bool^0 = y._rd 
    x = bool^0 = y.x 
  )
}
