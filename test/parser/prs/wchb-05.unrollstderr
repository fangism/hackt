
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	198
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	42
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	15	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	227
	17	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	19	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	20	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	29	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	30	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	32	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	42
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	34	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	36	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	42
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	38	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	39	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	42	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	44	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	42
	50	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	51	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	52	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	58
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	55	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	56	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	42
	58	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	59	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	58
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	63	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> ::e1of2::d^1
        e = bool<> ::e1of2::e
      unroll sequence: 
        bool<> d[0..1]
        bool<> e
      footprint: {
        d = bool^1
          {
            0 = ::e1of2::d[0] 
            1 = ::e1of2::d[1] 
          }
        e = bool^0 = ::e1of2::e 
      }
      }

    wchb_e1of2 = process-definition (defined) wchb_e1of2(
        e1of2<> L
        e1of2<> R
      )
      In definition "wchb_e1of2", we have: {
      Instances:
        L = e1of2<> ::wchb_e1of2::L
        R = e1of2<> ::wchb_e1of2::R
        _r = bool<> ::wchb_e1of2::_r
        l1 = bool<> ::wchb_e1of2::l1
      unroll sequence: 
        e1of2<> L
        e1of2<> R
        bool<> _r
        bool<> l1
      footprint: {
        L = process e1of2<>^0 = ::wchb_e1of2::L (
          d = bool^1
            {
              0 = ::wchb_e1of2::L.d[0] 
              1 = ::wchb_e1of2::L.d[1] 
            }
          e = bool^0 = ::wchb_e1of2::L.e 
        )
        R = process e1of2<>^0 = ::wchb_e1of2::R (
          d = bool^1
            {
              0 = ::wchb_e1of2::R.d[0] 
              1 = ::wchb_e1of2::R.d[1] 
            }
          e = bool^0 = ::wchb_e1of2::R.e 
        )
        _r = bool^0 = ::wchb_e1of2::_r 
        l1 = bool^0 = ::wchb_e1of2::l1 
      }
      }

  Instances:
    L = e1of2<> L
    R = e1of2<> R
    b = wchb_e1of2<> b
}

footprint: {
  L = process e1of2<>^0 = ::b.L (
    d = bool^1
      {
        0 = ::L.d[0] 
        1 = ::L.d[1] 
      }
    e = bool^0 = ::L.e 
  )
  R = process e1of2<>^0 = ::b.R (
    d = bool^1
      {
        0 = ::R.d[0] 
        1 = ::R.d[1] 
      }
    e = bool^0 = ::R.e 
  )
  b = process wchb_e1of2<>^0 = ::b (
    L = process e1of2<>^0 = ::b.L (
      d = bool^1
        {
          0 = ::L.d[0] 
          1 = ::L.d[1] 
        }
      e = bool^0 = ::L.e 
    )
    R = process e1of2<>^0 = ::b.R (
      d = bool^1
        {
          0 = ::R.d[0] 
          1 = ::R.d[1] 
        }
      e = bool^0 = ::R.e 
    )
  )
}
