
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	221
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	5	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	6	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	11	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	15	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	20	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	25	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	28
	30	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	31	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	34	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	37	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	38	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	39	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	42	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	45	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	46	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	24
	54	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	59	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	60	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	61	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	64	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	67	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	68	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	71	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	24
	77	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	78	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	81	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	84	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	dboolcol	3	#HEAD#	#TAIL#	583
	89	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	90	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	91	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	92	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	93	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	94	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	96	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	97	##ADDR##	dboolcol	3	#HEAD#	#TAIL#	583
	98	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    triangle = process-definition (defined) triangle<
      pint<> N
      >(
        bool<> in[0..N-1][0..N-1][0..N-1]
        bool<> _out
      )
      In definition "triangle", we have: {
      Parameters:
        N = pint<> ::triangle::N
      Instances:
        _out = bool<> ::triangle::_out
        in = bool<> ::triangle::in^3
      unroll sequence: 
        bool<> in[0..N-1][0..N-1][0..N-1]
        bool<> _out
      prs:
        (:i:[0..N-1]:
          (|:j:[0..$i-1]: (&:k:[0..$j-1]: in[$i][$j][$k])) -> _out-
          (&:j:[0..$i-1]: (|:k:[0..$j-1]: ~in[N-$i][N-$j][N-$k])) -> _out+
        )
      footprint collection: {
        <3> {
          N = pint^0 value: 3
          _out = bool^0 = ::triangle::_out 
          in = bool^3
            {
              [0][0][0] = ::triangle::in[0][0][0] 
              [0][0][1] = ::triangle::in[0][0][1] 
              [0][0][2] = ::triangle::in[0][0][2] 
              [0][1][0] = ::triangle::in[0][1][0] 
              [0][1][1] = ::triangle::in[0][1][1] 
              [0][1][2] = ::triangle::in[0][1][2] 
              [0][2][0] = ::triangle::in[0][2][0] 
              [0][2][1] = ::triangle::in[0][2][1] 
              [0][2][2] = ::triangle::in[0][2][2] 
              [1][0][0] = ::triangle::in[1][0][0] 
              [1][0][1] = ::triangle::in[1][0][1] 
              [1][0][2] = ::triangle::in[1][0][2] 
              [1][1][0] = ::triangle::in[1][1][0] 
              [1][1][1] = ::triangle::in[1][1][1] 
              [1][1][2] = ::triangle::in[1][1][2] 
              [1][2][0] = ::triangle::in[1][2][0] 
              [1][2][1] = ::triangle::in[1][2][1] 
              [1][2][2] = ::triangle::in[1][2][2] 
              [2][0][0] = ::triangle::in[2][0][0] 
              [2][0][1] = ::triangle::in[2][0][1] 
              [2][0][2] = ::triangle::in[2][0][2] 
              [2][1][0] = ::triangle::in[2][1][0] 
              [2][1][1] = ::triangle::in[2][1][1] 
              [2][1][2] = ::triangle::in[2][1][2] 
              [2][2][0] = ::triangle::in[2][2][0] 
              [2][2][1] = ::triangle::in[2][2][1] 
              [2][2][2] = ::triangle::in[2][2][2] 
            }
        }
      }
      }

  Instances:
    foo = triangle<3> foo
}

footprint: {
  foo = process triangle<3>^0 = ::foo (
    in = bool^3
      {
        [0][0][0] = ::foo.in[0][0][0] 
        [0][0][1] = ::foo.in[0][0][1] 
        [0][0][2] = ::foo.in[0][0][2] 
        [0][1][0] = ::foo.in[0][1][0] 
        [0][1][1] = ::foo.in[0][1][1] 
        [0][1][2] = ::foo.in[0][1][2] 
        [0][2][0] = ::foo.in[0][2][0] 
        [0][2][1] = ::foo.in[0][2][1] 
        [0][2][2] = ::foo.in[0][2][2] 
        [1][0][0] = ::foo.in[1][0][0] 
        [1][0][1] = ::foo.in[1][0][1] 
        [1][0][2] = ::foo.in[1][0][2] 
        [1][1][0] = ::foo.in[1][1][0] 
        [1][1][1] = ::foo.in[1][1][1] 
        [1][1][2] = ::foo.in[1][1][2] 
        [1][2][0] = ::foo.in[1][2][0] 
        [1][2][1] = ::foo.in[1][2][1] 
        [1][2][2] = ::foo.in[1][2][2] 
        [2][0][0] = ::foo.in[2][0][0] 
        [2][0][1] = ::foo.in[2][0][1] 
        [2][0][2] = ::foo.in[2][0][2] 
        [2][1][0] = ::foo.in[2][1][0] 
        [2][1][1] = ::foo.in[2][1][1] 
        [2][1][2] = ::foo.in[2][1][2] 
        [2][2][0] = ::foo.in[2][2][0] 
        [2][2][1] = ::foo.in[2][2][1] 
        [2][2][2] = ::foo.in[2][2][2] 
      }
    _out = bool^0 = ::foo._out 
  )
}
