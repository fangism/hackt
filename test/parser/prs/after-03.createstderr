
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	34
	14	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	15	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	18	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	34
	20	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	22	##ADDR##	footprnt	0	#HEAD#	#TAIL#	409
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	footprnt	0	#HEAD#	#TAIL#	350
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    afterburn = process-definition (defined) afterburn<
      pint<> D
      >(
        bool<> a
        bool<> b
      )
      In definition "afterburn", we have: {
      Parameters:
        D = pint<> afterburn::D
      Instances:
        a = bool<> afterburn::a
        b = bool<> afterburn::b
      unroll sequence: 
        ports: (
          bool<> a
          bool<> b
        )
      prs:
        a -> b- [after=D]
        ~a -> b+ [after=D]
      footprint collection: {
        <31> {
          D = pint^0 value: 31
          a = bool^0 = afterburn<31>::a (1) 
          b = bool^0 = afterburn<31>::b (2) 
          Created state:
          bool instance pool:
          1	afterburn<31>::a
          2	afterburn<31>::b
          resolved prs:
          a -> b- [after=31]
          ~a -> b+ [after=31]
        }
      }
      }

  Instances:
    xyz = afterburn<31> xyz
}

footprint: {
  xyz = process afterburn<31>^0 = xyz (1) (
    a = bool^0 = xyz.a (1) 
    b = bool^0 = xyz.b (2) 
  )
  Created state:
  process instance pool:
  1	xyz
  bool instance pool:
  1	xyz.a
  2	xyz.b
}
