
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	165
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	43
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	33	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	38	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	43
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	46	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	47	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	51	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	53	##ADDR##	footprnt	0	#HEAD#	#TAIL#	507
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	56	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	67	##ADDR##	footprnt	0	#HEAD#	#TAIL#	449
	68	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    yoyodyne = process-definition (defined) yoyodyne(
        bool<> !GND
        bool<> !Vdd
        bool<> foo
        bool<> bar
      )
      In definition "yoyodyne", we have: {
      Instances:
        !GND = bool<> yoyodyne::!GND
        !Vdd = bool<> yoyodyne::!Vdd
        bar = bool<> yoyodyne::bar
        bar2 = bool<> yoyodyne::bar2
        foo = bool<> yoyodyne::foo
        foo2 = bool<> yoyodyne::foo2
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> foo
          bool<> bar
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        foo@[ignore_interference]
        bool<> foo2
        foo2 = foo;
        bool<> bar2
        bar2 = bar;
        bar@[ignore_interference=1]
      prs:
        {
        foo -> bar-
        ~foo -> bar+
        }
      footprint: {
        !GND = bool^0 = yoyodyne<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = yoyodyne<>::!Vdd (2) @[ supply_high port-alias ] 
        bar = bool^0 = yoyodyne<>::bar (4) @[ may_interfere port-alias loc-FI- loc-FI+ ] 
        bar2 = bool^0 = yoyodyne<>::bar (4) @[ may_interfere port-alias loc-FI- loc-FI+ ] 
        foo = bool^0 = yoyodyne<>::foo (3) @[ may_interfere port-alias loc-FO- loc-FO+ ] 
        foo2 = bool^0 = yoyodyne<>::foo (3) @[ may_interfere port-alias loc-FO- loc-FO+ ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	yoyodyne<>::!GND @[ supply_low port-alias ]	
        2	yoyodyne<>::!Vdd @[ supply_high port-alias ]	
        3	yoyodyne<>::foo @[ may_interfere port-alias loc-FO- loc-FO+ ]	
        4	yoyodyne<>::bar @[ may_interfere port-alias loc-FI- loc-FI+ ]	
        resolved prs:
        foo -> bar-
        ~foo -> bar+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    wee = yoyodyne<> wee
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  wee = process yoyodyne<>^0 = wee (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    foo = bool^0 = wee.foo (3) @[ may_interfere sub-FO- sub-FO+ ] 
    bar = bool^0 = wee.bar (4) @[ may_interfere sub-FI- sub-FI+ ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	wee	yoyodyne<>
    bool: 1,2,3,4
  bool instance pool: (0 ports, 4 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	wee.foo @[ may_interfere sub-FO- sub-FO+ ]	
  4	wee.bar @[ may_interfere sub-FI- sub-FI+ ]	
}
