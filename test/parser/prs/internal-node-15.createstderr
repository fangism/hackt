Warning: node bogus<>::en has no pull-up nor pull-dn PRS fanin.
Warnings found (1) while creating complete type bogus<>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	162
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	11	##ADDR##	nodeplch	0	#HEAD#	#TAIL#	21
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	nodeplch	0	#HEAD#	#TAIL#	21
	16	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	37	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	48
	38	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	26
	39	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	24
	43	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	44	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	26
	46	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	47	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	25
	48	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	57	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	58	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	25
	59	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	63	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	66	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	67	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	25
	68	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	75	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	footprnt	0	#HEAD#	#TAIL#	788
	80	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	82	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	88	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	93	##ADDR##	footprnt	0	#HEAD#	#TAIL#	529
	94	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    bogus = process-definition (defined) bogus(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
        bool<> e[0..1]
        bool<> w
      )
      In definition "bogus", we have: {
      Instances:
        !GND = bool<> bogus::!GND
        !Vdd = bool<> bogus::!Vdd
        e = bool<> bogus::e^1
        en = bool<> bogus::en
        q = -node-<> bogus::q^1
        w = bool<> bogus::w
        x = bool<> bogus::x
        y = bool<> bogus::y
        z = -node-<> bogus::z
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
          bool<> e[0..1]
          bool<> w
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> en
      prs:
        {
        en -> @z-
        (:i:[0..1]:
          ~@z & e[$i] -> @q[$i]-
        )
        ~@q[0] & x -> w-
        ~@q[1] & y -> w-
        ~en -> w+
        }
      footprint: {
        !GND = bool^0 = bogus<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bogus<>::!Vdd (2) @[ supply_high port-alias ] 
        e = bool^1
          {
            [0] = bogus<>::e[0] (6) @[ port-alias ] 
            [1] = bogus<>::e[1] (7) @[ port-alias ] 
          }
        en = bool^0 = bogus<>::en (8) @[ loc-FO+ ] 
        w = bool^0 = bogus<>::w (5) @[ port-alias loc-FI- loc-FI+ ] 
        x = bool^0 = bogus<>::x (3) @[ port-alias loc-FO- ] 
        y = bool^0 = bogus<>::y (4) @[ port-alias loc-FO- ] 
        Created state:
        bool instance pool: (7 ports, 1 local, 0 mapped)
        1	bogus<>::!GND @[ supply_low port-alias ]	
        2	bogus<>::!Vdd @[ supply_high port-alias ]	
        3	bogus<>::x @[ port-alias loc-FO- ]	
        4	bogus<>::y @[ port-alias loc-FO- ]	
        5	bogus<>::w @[ port-alias loc-FI- loc-FI+ ]	
        6	bogus<>::e[0] @[ port-alias ]	
        7	bogus<>::e[1] @[ port-alias ]	
        8	bogus<>::en @[ loc-FO+ ]	
        resolved prs:
        @q[0] & x -> w-
        @q[1] & y -> w-
        ~en -> w+
        internal node exprs: 
        @q[0]- <- @z & e[0]
        @q[1]- <- @z & e[1]
        @z- <- en
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..2 none 0..2 : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    A = bogus<> A
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  A = process bogus<>^0 = A (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^0 = A.x (3) @[ sub-FO- ] 
    y = bool^0 = A.y (4) @[ sub-FO- ] 
    e = bool^1
      {
        [0] = A.e[0] (5) 
        [1] = A.e[1] (6) 
      }
    w = bool^0 = A.w (7) @[ sub-FI- sub-FI+ ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	A	bogus<>
    bool: 1,2,3,4,7,5,6
  bool instance pool: (0 ports, 7 local, 1 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	A.x @[ sub-FO- ]	
  4	A.y @[ sub-FO- ]	
  5	A.e[0]	
  6	A.e[1]	
  7	A.w @[ sub-FI- sub-FI+ ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 1)
}
