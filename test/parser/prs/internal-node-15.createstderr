Warning: node bogus<>::en has no pull-up nor pull-dn PRS fanin.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	146
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	7	##ADDR##	nodeplch	0	#HEAD#	#TAIL#	21
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	nodeplch	0	#HEAD#	#TAIL#	21
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	26
	23	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	24
	27	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	28	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	26
	30	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	31	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	21
	32	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	41	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	42	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	21
	43	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	50	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	51	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	21
	52	##ADDR##	spndiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	59	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	footprnt	0	#HEAD#	#TAIL#	620
	64	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	66	##ADDR##	footprnt	0	#HEAD#	#TAIL#	420
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    bogus = process-definition (defined) bogus(
        bool<> x
        bool<> y
        bool<> e[0..1]
        bool<> w
      )
      In definition "bogus", we have: {
      Instances:
        e = bool<> bogus::e^1
        en = bool<> bogus::en
        q = -node-<> bogus::q^1
        w = bool<> bogus::w
        x = bool<> bogus::x
        y = bool<> bogus::y
        z = -node-<> bogus::z
      unroll sequence: 
        ports: (
          bool<> x
          bool<> y
          bool<> e[0..1]
          bool<> w
        )
        bool<> en
      prs:
        en -> @z-
        (:i:[0..1]:
          ~@z & e[$i] -> @q[$i]-
        )
        ~@q[0] & x -> w-
        ~@q[1] & y -> w-
        ~en -> w+
      footprint: {
        e = bool^1
          {
            [0] = bogus<>::e[0] (5) 
            [1] = bogus<>::e[1] (6) 
          }
        en = bool^0 = bogus<>::en (4) 
        w = bool^0 = bogus<>::w (3) 
        x = bool^0 = bogus<>::x (1) 
        y = bool^0 = bogus<>::y (2) 
        Created state:
        bool instance pool:
        1	bogus<>::x
        2	bogus<>::y
        3	bogus<>::w
        4	bogus<>::en
        5	bogus<>::e[0]
        6	bogus<>::e[1]
        resolved prs:
        (en & e[0]) & x -> w-
        (en & e[1]) & y -> w-
        ~en -> w+
        internal node exprs: 
        @q[0]- <- en & e[0]
        @q[1]- <- en & e[1]
        @z- <- en
      }
      }

  Instances:
    A = bogus<> A
}

footprint: {
  A = process bogus<>^0 = A (1) (
    x = bool^0 = A.x (1) 
    y = bool^0 = A.y (2) 
    e = bool^1
      {
        [0] = A.e[0] (3) 
        [1] = A.e[1] (4) 
      }
    w = bool^0 = A.w (5) 
  )
  Created state:
  process instance pool:
  1	A
  bool instance pool:
  1	A.x
  2	A.y
  3	A.e[0]
  4	A.e[1]
  5	A.w
}
