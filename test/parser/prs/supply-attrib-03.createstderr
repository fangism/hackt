
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	27	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	40	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	41	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	43	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	44	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	45	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	46	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	47	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	64	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	65	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	69	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	71	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	72	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	74	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	footprnt	0	#HEAD#	#TAIL#	622
	76	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	77	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	80	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	94	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	95	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	99	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	100	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	101	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	102	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	103	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	104	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	108	##ADDR##	footprnt	0	#HEAD#	#TAIL#	825
	109	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	110	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  8 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    globals = process-definition (defined) globals(
        bool<> !GND
        bool<> !Vdd
        bool<> Vdd
        bool<> GND
      )
      In definition "globals", we have: {
      Instances:
        !GND = bool<> globals::!GND
        !Vdd = bool<> globals::!Vdd
        GND = bool<> globals::GND
        Vdd = bool<> globals::Vdd
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> Vdd
          bool<> GND
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        Vdd@[supply=1]
        GND@[supply=0]
      footprint: {
        !GND = bool^0 = globals<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = globals<>::!Vdd (2) @[ supply_high port-alias ] 
        GND = bool^0 = globals<>::GND (4) @[ supply_low port-alias ] 
        Vdd = bool^0 = globals<>::Vdd (3) @[ supply_high port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	globals<>::!GND @[ supply_low port-alias ]	
        2	globals<>::!Vdd @[ supply_high port-alias ]	
        3	globals<>::Vdd @[ supply_high port-alias ]	
        4	globals<>::GND @[ supply_low port-alias ]	
      }
      }

    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        globals<> g
        bool<> x
        bool<> y
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        g = globals<> inv::g
        x = bool<> inv::x
        y = bool<> inv::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          globals<> g
          bool<> x
          bool<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        <!Vdd=g.Vdd,!GND=g.GND> {
        x -> y-
        ~x -> y+
        }
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = inv<>::!Vdd (2) @[ supply_high port-alias ] 
        g = process globals<>^0 = inv<>::g (1) @[ port-alias ] (
          !GND = bool^0 = inv<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = inv<>::!Vdd (2) @[ supply_high port-alias ] 
          Vdd = bool^0 = inv<>::g.Vdd (3) @[ supply_high port-alias ] 
          GND = bool^0 = inv<>::g.GND (4) @[ supply_low port-alias ] 
        )
        x = bool^0 = inv<>::x (5) @[ port-alias loc-FO- loc-FO+ ] 
        y = bool^0 = inv<>::y (6) @[ port-alias loc-FI- loc-FI+ ] 
        Created state:
        process instance pool: (1 ports, 0 local, 0 mapped)
        1	inv<>::g @[ port-alias ]	globals<>
          bool: 1,2,3,4
        bool instance pool: (6 ports, 0 local, 0 mapped)
        1	inv<>::!GND @[ supply_low port-alias ]	
        2	inv<>::!Vdd @[ supply_high port-alias ]	
        3	inv<>::g.Vdd @[ supply_high port-alias ]	
        4	inv<>::g.GND @[ supply_low port-alias ]	
        5	inv<>::x @[ port-alias loc-FO- loc-FO+ ]	
        6	inv<>::y @[ port-alias loc-FI- loc-FI+ ]	
        bool port aliases:
        1: inv<>::g.!GND = inv<>::!GND @[ supply_low port-alias ]
        2: inv<>::g.!Vdd = inv<>::!Vdd @[ supply_high port-alias ]
        resolved prs:
        x -> y-
        ~x -> y+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 3, 4 | 3, 4
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    G = bool<> G
    V = bool<> V
    foo = inv<> foo
    glob = globals<> glob
    in = bool<> in
    out = bool<> out
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  G = bool^0 = G (4) @[ supply_low ] 
  V = bool^0 = V (3) @[ supply_high ] 
  foo = process inv<>^0 = foo (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    g = process globals<>^0 = glob (1) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      Vdd = bool^0 = V (3) @[ supply_high ] 
      GND = bool^0 = G (4) @[ supply_low ] 
    )
    x = bool^0 = in (5) @[ sub-FO- sub-FO+ ] 
    y = bool^0 = out (6) @[ sub-FI- sub-FI+ ] 
  )
  glob = process globals<>^0 = glob (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    Vdd = bool^0 = V (3) @[ supply_high ] 
    GND = bool^0 = G (4) @[ supply_low ] 
  )
  in = bool^0 = in (5) @[ sub-FO- sub-FO+ ] 
  out = bool^0 = out (6) @[ sub-FI- sub-FI+ ] 
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	glob	globals<>
    bool: 1,2,3,4
  2	foo	inv<>
    process: 1
    bool: 1,2,3,4,5,6
  bool instance pool: (0 ports, 6 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	V @[ supply_high ]	
  4	G @[ supply_low ]	
  5	in @[ sub-FO- sub-FO+ ]	
  6	out @[ sub-FI- sub-FI+ ]	
}
