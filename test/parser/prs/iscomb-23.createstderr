
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	149
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	22	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	23	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	24	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	30	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	35	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	53	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	56	##ADDR##	procdefn	0	#HEAD#	#TAIL#	129
	57	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	58	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	59	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	61	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	62	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	69	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	34
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	81	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	82	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	83	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	87	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	89	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	90	##ADDR##	footprnt	0	#HEAD#	#TAIL#	908
	91	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	92	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	93	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	94	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	95	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	99	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	103	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	104	##ADDR##	procdefn	0	#HEAD#	#TAIL#	135
	105	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	106	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	107	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	108	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	109	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	110	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	111	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	112	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	113	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	114	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	116	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	117	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	118	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	119	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	120	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	121	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	122	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	123	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	124	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	125	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	126	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	127	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	128	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	129	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	130	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	131	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	132	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	133	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	134	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	135	##ADDR##	footprnt	0	#HEAD#	#TAIL#	600
	136	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	137	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	138	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	139	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	141	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	142	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	143	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	145	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	146	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	147	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	148	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	149	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	150	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	151	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	152	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	153	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	154	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	155	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	156	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	157	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	158	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	159	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	160	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	161	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	162	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	163	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	164	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	165	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	166	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	167	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	168	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	169	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	170	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	171	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	172	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	173	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	174	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	175	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	176	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	177	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	178	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	179	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	180	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	181	##ADDR##	footprnt	0	#HEAD#	#TAIL#	600
	182	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	183	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	184	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	185	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	186	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	187	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	188	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	189	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	190	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	191	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	192	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	193	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	194	##ADDR##	footprnt	0	#HEAD#	#TAIL#	2494
	195	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	196	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	197	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	198	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	199	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	200	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	201	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	202	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	203	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	204	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	205	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	206	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	207	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	208	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	209	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	210	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	211	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	212	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	213	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1777
	214	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  6 definitions
  0 typedefs
  Definitions:
    deep = process-definition (defined) deep(
        bool<> !GND
        bool<> !Vdd
        multi_inv<> x
        multi_inv<> y
      )
      In definition "deep", we have: {
      Instances:
        !GND = bool<> deep::!GND
        !Vdd = bool<> deep::!Vdd
        P = smoosh<> deep::P
        Q = twist<> deep::Q
        x = multi_inv<> deep::x
        y = multi_inv<> deep::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          multi_inv<> x
          multi_inv<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        smoosh<> P
        P ( , , x.s[0], x.t[0]);
        twist<> Q
        Q ( , , x.s[1], x.t[1]);
      footprint: {
        !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
        P = process smoosh<>^0 = deep<>::P (11) (
          !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
          j = process inv<>^0 = deep<>::x.s[0] (2) @[ port-alias ] (
            !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
            a = bool^0 = deep<>::x.s[0].a (3) @[ iscomb port-alias ] 
            b = bool^0 = deep<>::x.s[0].b (4) @[ !autokeeper port-alias ] 
          )
          k = process inv2<>^0 = deep<>::x.t[0] (4) @[ port-alias ] (
            !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
            a = bool^0 = deep<>::x.s[0].a (3) @[ iscomb port-alias ] 
            b = bool^0 = deep<>::x.s[0].b (4) @[ !autokeeper port-alias ] 
          )
        )
        Q = process twist<>^0 = deep<>::Q (12) (
          !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
          f = process inv<>^0 = deep<>::x.s[1] (3) @[ port-alias ] (
            !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
            a = bool^0 = deep<>::x.s[1].a (5) @[ iscomb !autokeeper port-alias ] 
            b = bool^0 = deep<>::x.s[1].b (6) @[ port-alias ] 
          )
          g = process inv2<>^0 = deep<>::x.t[1] (5) @[ port-alias ] (
            !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
            a = bool^0 = deep<>::x.s[1].b (6) @[ port-alias ] 
            b = bool^0 = deep<>::x.s[1].a (5) @[ iscomb !autokeeper port-alias ] 
          )
        )
        x = process multi_inv<>^0 = deep<>::x (1) @[ port-alias ] (
          !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
          s = process inv<>^1
            {
              [0] = deep<>::x.s[0] (2) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::x.s[0].a (3) @[ iscomb port-alias ] 
                b = bool^0 = deep<>::x.s[0].b (4) @[ !autokeeper port-alias ] 
              )
              [1] = deep<>::x.s[1] (3) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::x.s[1].a (5) @[ iscomb !autokeeper port-alias ] 
                b = bool^0 = deep<>::x.s[1].b (6) @[ port-alias ] 
              )
            }
          t = process inv2<>^1
            {
              [0] = deep<>::x.t[0] (4) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::x.s[0].a (3) @[ iscomb port-alias ] 
                b = bool^0 = deep<>::x.s[0].b (4) @[ !autokeeper port-alias ] 
              )
              [1] = deep<>::x.t[1] (5) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::x.s[1].b (6) @[ port-alias ] 
                b = bool^0 = deep<>::x.s[1].a (5) @[ iscomb !autokeeper port-alias ] 
              )
            }
        )
        y = process multi_inv<>^0 = deep<>::y (6) @[ port-alias ] (
          !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
          s = process inv<>^1
            {
              [0] = deep<>::y.s[0] (7) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::y.s[0].a (7) @[ iscomb port-alias ] 
                b = bool^0 = deep<>::y.s[0].b (8) @[ port-alias ] 
              )
              [1] = deep<>::y.s[1] (8) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::y.s[1].a (9) @[ iscomb port-alias ] 
                b = bool^0 = deep<>::y.s[1].b (10) @[ port-alias ] 
              )
            }
          t = process inv2<>^1
            {
              [0] = deep<>::y.t[0] (9) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::y.t[0].a (11) @[ port-alias ] 
                b = bool^0 = deep<>::y.t[0].b (12) @[ !autokeeper port-alias ] 
              )
              [1] = deep<>::y.t[1] (10) @[ port-alias ] (
                !GND = bool^0 = deep<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = deep<>::!Vdd (2) @[ supply_high port-alias ] 
                a = bool^0 = deep<>::y.t[1].a (13) @[ port-alias ] 
                b = bool^0 = deep<>::y.t[1].b (14) @[ !autokeeper port-alias ] 
              )
            }
        )
        Created state:
        process instance pool: (10 ports, 2 local, 0 mapped)
        1	deep<>::x @[ port-alias ]	multi_inv<>
          process: 2,3,4,5
          bool: 1,2,3,4,5,6,3,4,6,5
        2	deep<>::x.s[0] @[ port-alias ]	inv<>
          bool: 1,2,3,4
        3	deep<>::x.s[1] @[ port-alias ]	inv<>
          bool: 1,2,5,6
        4	deep<>::x.t[0] @[ port-alias ]	inv2<>
          bool: 1,2,3,4
        5	deep<>::x.t[1] @[ port-alias ]	inv2<>
          bool: 1,2,6,5
        6	deep<>::y @[ port-alias ]	multi_inv<>
          process: 7,8,9,10
          bool: 1,2,7,8,9,10,11,12,13,14
        7	deep<>::y.s[0] @[ port-alias ]	inv<>
          bool: 1,2,7,8
        8	deep<>::y.s[1] @[ port-alias ]	inv<>
          bool: 1,2,9,10
        9	deep<>::y.t[0] @[ port-alias ]	inv2<>
          bool: 1,2,11,12
        10	deep<>::y.t[1] @[ port-alias ]	inv2<>
          bool: 1,2,13,14
        11	deep<>::P	smoosh<>
          process: 2,4
          bool: 1,2,3,4
        12	deep<>::Q	twist<>
          process: 3,5
          bool: 1,2,5,6
        bool instance pool: (14 ports, 0 local, 0 mapped)
        1	deep<>::!GND @[ supply_low port-alias ]	
        2	deep<>::!Vdd @[ supply_high port-alias ]	
        3	deep<>::x.s[0].a @[ iscomb port-alias ]	
        4	deep<>::x.s[0].b @[ !autokeeper port-alias ]	
        5	deep<>::x.s[1].a @[ iscomb !autokeeper port-alias ]	
        6	deep<>::x.s[1].b @[ port-alias ]	
        7	deep<>::y.s[0].a @[ iscomb port-alias ]	
        8	deep<>::y.s[0].b @[ port-alias ]	
        9	deep<>::y.s[1].a @[ iscomb port-alias ]	
        10	deep<>::y.s[1].b @[ port-alias ]	
        11	deep<>::y.t[0].a @[ port-alias ]	
        12	deep<>::y.t[0].b @[ !autokeeper port-alias ]	
        13	deep<>::y.t[1].a @[ port-alias ]	
        14	deep<>::y.t[1].b @[ !autokeeper port-alias ]	
        bool port aliases:
        1: deep<>::x.!GND = deep<>::x.s[0].!GND = deep<>::x.s[1].!GND = deep<>::x.t[0].!GND = deep<>::x.t[1].!GND = deep<>::y.!GND = deep<>::y.s[0].!GND = deep<>::y.s[1].!GND = deep<>::y.t[0].!GND = deep<>::y.t[1].!GND = deep<>::!GND @[ supply_low port-alias ]
        2: deep<>::x.!Vdd = deep<>::x.s[0].!Vdd = deep<>::x.s[1].!Vdd = deep<>::x.t[0].!Vdd = deep<>::x.t[1].!Vdd = deep<>::y.!Vdd = deep<>::y.s[0].!Vdd = deep<>::y.s[1].!Vdd = deep<>::y.t[0].!Vdd = deep<>::y.t[1].!Vdd = deep<>::!Vdd @[ supply_high port-alias ]
        3: deep<>::x.s[0].a = deep<>::x.t[0].a @[ iscomb port-alias ]
        4: deep<>::x.s[0].b = deep<>::x.t[0].b @[ !autokeeper port-alias ]
        5: deep<>::x.s[1].a = deep<>::x.t[1].b @[ iscomb !autokeeper port-alias ]
        6: deep<>::x.s[1].b = deep<>::x.t[1].a @[ port-alias ]
      }
      }

    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        a@[iscomb]
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = inv<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = inv<>::a (3) @[ iscomb port-alias ] 
        b = bool^0 = inv<>::b (4) @[ port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	inv<>::!GND @[ supply_low port-alias ]	
        2	inv<>::!Vdd @[ supply_high port-alias ]	
        3	inv<>::a @[ iscomb port-alias ]	
        4	inv<>::b @[ port-alias ]	
      }
      }

    inv2 = process-definition (defined) inv2(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "inv2", we have: {
      Instances:
        !GND = bool<> inv2::!GND
        !Vdd = bool<> inv2::!Vdd
        a = bool<> inv2::a
        b = bool<> inv2::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        b@[autokeeper=0]
      footprint: {
        !GND = bool^0 = inv2<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = inv2<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = inv2<>::a (3) @[ port-alias ] 
        b = bool^0 = inv2<>::b (4) @[ !autokeeper port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	inv2<>::!GND @[ supply_low port-alias ]	
        2	inv2<>::!Vdd @[ supply_high port-alias ]	
        3	inv2<>::a @[ port-alias ]	
        4	inv2<>::b @[ !autokeeper port-alias ]	
      }
      }

    multi_inv = process-definition (defined) multi_inv(
        bool<> !GND
        bool<> !Vdd
        inv<> s[0..1]
        inv2<> t[0..1]
      )
      In definition "multi_inv", we have: {
      Instances:
        !GND = bool<> multi_inv::!GND
        !Vdd = bool<> multi_inv::!Vdd
        s = inv<> multi_inv::s^1
        t = inv2<> multi_inv::t^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> s[0..1]
          inv2<> t[0..1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
        s = process inv<>^1
          {
            [0] = multi_inv<>::s[0] (1) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::s[0].a (3) @[ iscomb port-alias ] 
              b = bool^0 = multi_inv<>::s[0].b (4) @[ port-alias ] 
            )
            [1] = multi_inv<>::s[1] (2) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::s[1].a (5) @[ iscomb port-alias ] 
              b = bool^0 = multi_inv<>::s[1].b (6) @[ port-alias ] 
            )
          }
        t = process inv2<>^1
          {
            [0] = multi_inv<>::t[0] (3) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::t[0].a (7) @[ port-alias ] 
              b = bool^0 = multi_inv<>::t[0].b (8) @[ !autokeeper port-alias ] 
            )
            [1] = multi_inv<>::t[1] (4) @[ port-alias ] (
              !GND = bool^0 = multi_inv<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = multi_inv<>::!Vdd (2) @[ supply_high port-alias ] 
              a = bool^0 = multi_inv<>::t[1].a (9) @[ port-alias ] 
              b = bool^0 = multi_inv<>::t[1].b (10) @[ !autokeeper port-alias ] 
            )
          }
        Created state:
        process instance pool: (4 ports, 0 local, 0 mapped)
        1	multi_inv<>::s[0] @[ port-alias ]	inv<>
          bool: 1,2,3,4
        2	multi_inv<>::s[1] @[ port-alias ]	inv<>
          bool: 1,2,5,6
        3	multi_inv<>::t[0] @[ port-alias ]	inv2<>
          bool: 1,2,7,8
        4	multi_inv<>::t[1] @[ port-alias ]	inv2<>
          bool: 1,2,9,10
        bool instance pool: (10 ports, 0 local, 0 mapped)
        1	multi_inv<>::!GND @[ supply_low port-alias ]	
        2	multi_inv<>::!Vdd @[ supply_high port-alias ]	
        3	multi_inv<>::s[0].a @[ iscomb port-alias ]	
        4	multi_inv<>::s[0].b @[ port-alias ]	
        5	multi_inv<>::s[1].a @[ iscomb port-alias ]	
        6	multi_inv<>::s[1].b @[ port-alias ]	
        7	multi_inv<>::t[0].a @[ port-alias ]	
        8	multi_inv<>::t[0].b @[ !autokeeper port-alias ]	
        9	multi_inv<>::t[1].a @[ port-alias ]	
        10	multi_inv<>::t[1].b @[ !autokeeper port-alias ]	
        bool port aliases:
        1: multi_inv<>::s[0].!GND = multi_inv<>::s[1].!GND = multi_inv<>::t[0].!GND = multi_inv<>::t[1].!GND = multi_inv<>::!GND @[ supply_low port-alias ]
        2: multi_inv<>::s[0].!Vdd = multi_inv<>::s[1].!Vdd = multi_inv<>::t[0].!Vdd = multi_inv<>::t[1].!Vdd = multi_inv<>::!Vdd @[ supply_high port-alias ]
      }
      }

    smoosh = process-definition (defined) smoosh(
        bool<> !GND
        bool<> !Vdd
        inv<> j
        inv2<> k
      )
      In definition "smoosh", we have: {
      Instances:
        !GND = bool<> smoosh::!GND
        !Vdd = bool<> smoosh::!Vdd
        j = inv<> smoosh::j
        k = inv2<> smoosh::k
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> j
          inv2<> k
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        j.a = k.a;
        j.b = k.b;
      footprint: {
        !GND = bool^0 = smoosh<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = smoosh<>::!Vdd (2) @[ supply_high port-alias ] 
        j = process inv<>^0 = smoosh<>::j (1) @[ port-alias ] (
          !GND = bool^0 = smoosh<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = smoosh<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = smoosh<>::j.a (3) @[ iscomb port-alias ] 
          b = bool^0 = smoosh<>::j.b (4) @[ !autokeeper port-alias ] 
        )
        k = process inv2<>^0 = smoosh<>::k (2) @[ port-alias ] (
          !GND = bool^0 = smoosh<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = smoosh<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = smoosh<>::j.a (3) @[ iscomb port-alias ] 
          b = bool^0 = smoosh<>::j.b (4) @[ !autokeeper port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	smoosh<>::j @[ port-alias ]	inv<>
          bool: 1,2,3,4
        2	smoosh<>::k @[ port-alias ]	inv2<>
          bool: 1,2,3,4
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	smoosh<>::!GND @[ supply_low port-alias ]	
        2	smoosh<>::!Vdd @[ supply_high port-alias ]	
        3	smoosh<>::j.a @[ iscomb port-alias ]	
        4	smoosh<>::j.b @[ !autokeeper port-alias ]	
        bool port aliases:
        1: smoosh<>::j.!GND = smoosh<>::k.!GND = smoosh<>::!GND @[ supply_low port-alias ]
        2: smoosh<>::j.!Vdd = smoosh<>::k.!Vdd = smoosh<>::!Vdd @[ supply_high port-alias ]
        3: smoosh<>::j.a = smoosh<>::k.a @[ iscomb port-alias ]
        4: smoosh<>::j.b = smoosh<>::k.b @[ !autokeeper port-alias ]
      }
      }

    twist = process-definition (defined) twist(
        bool<> !GND
        bool<> !Vdd
        inv<> f
        inv2<> g
      )
      In definition "twist", we have: {
      Instances:
        !GND = bool<> twist::!GND
        !Vdd = bool<> twist::!Vdd
        f = inv<> twist::f
        g = inv2<> twist::g
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          inv<> f
          inv2<> g
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        f.a = g.b;
        f.b = g.a;
      footprint: {
        !GND = bool^0 = twist<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = twist<>::!Vdd (2) @[ supply_high port-alias ] 
        f = process inv<>^0 = twist<>::f (1) @[ port-alias ] (
          !GND = bool^0 = twist<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = twist<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = twist<>::f.a (3) @[ iscomb !autokeeper port-alias ] 
          b = bool^0 = twist<>::f.b (4) @[ port-alias ] 
        )
        g = process inv2<>^0 = twist<>::g (2) @[ port-alias ] (
          !GND = bool^0 = twist<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = twist<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = twist<>::f.b (4) @[ port-alias ] 
          b = bool^0 = twist<>::f.a (3) @[ iscomb !autokeeper port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	twist<>::f @[ port-alias ]	inv<>
          bool: 1,2,3,4
        2	twist<>::g @[ port-alias ]	inv2<>
          bool: 1,2,4,3
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	twist<>::!GND @[ supply_low port-alias ]	
        2	twist<>::!Vdd @[ supply_high port-alias ]	
        3	twist<>::f.a @[ iscomb !autokeeper port-alias ]	
        4	twist<>::f.b @[ port-alias ]	
        bool port aliases:
        1: twist<>::f.!GND = twist<>::g.!GND = twist<>::!GND @[ supply_low port-alias ]
        2: twist<>::f.!Vdd = twist<>::g.!Vdd = twist<>::!Vdd @[ supply_high port-alias ]
        3: twist<>::f.a = twist<>::g.b @[ iscomb !autokeeper port-alias ]
        4: twist<>::f.b = twist<>::g.a @[ port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    sh1t = deep<> sh1t
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  sh1t = process deep<>^0 = sh1t (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = process multi_inv<>^0 = sh1t.x (2) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      s = process inv<>^1
        {
          [0] = sh1t.x.s[0] (3) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.x.s[0].a (3) @[ iscomb ] 
            b = bool^0 = sh1t.x.s[0].b (4) @[ !autokeeper ] 
          )
          [1] = sh1t.x.s[1] (4) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.x.s[1].a (5) @[ iscomb !autokeeper ] 
            b = bool^0 = sh1t.x.s[1].b (6) 
          )
        }
      t = process inv2<>^1
        {
          [0] = sh1t.x.t[0] (5) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.x.s[0].a (3) @[ iscomb ] 
            b = bool^0 = sh1t.x.s[0].b (4) @[ !autokeeper ] 
          )
          [1] = sh1t.x.t[1] (6) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.x.s[1].b (6) 
            b = bool^0 = sh1t.x.s[1].a (5) @[ iscomb !autokeeper ] 
          )
        }
    )
    y = process multi_inv<>^0 = sh1t.y (7) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      s = process inv<>^1
        {
          [0] = sh1t.y.s[0] (8) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.y.s[0].a (7) @[ iscomb ] 
            b = bool^0 = sh1t.y.s[0].b (8) 
          )
          [1] = sh1t.y.s[1] (9) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.y.s[1].a (9) @[ iscomb ] 
            b = bool^0 = sh1t.y.s[1].b (10) 
          )
        }
      t = process inv2<>^1
        {
          [0] = sh1t.y.t[0] (10) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.y.t[0].a (11) 
            b = bool^0 = sh1t.y.t[0].b (12) @[ !autokeeper ] 
          )
          [1] = sh1t.y.t[1] (11) (
            !GND = bool^0 = !GND (1) @[ supply_low ] 
            !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
            a = bool^0 = sh1t.y.t[1].a (13) 
            b = bool^0 = sh1t.y.t[1].b (14) @[ !autokeeper ] 
          )
        }
    )
  )
  Created state:
  process instance pool: (0 ports, 11 local, 2 mapped)
  1	sh1t	deep<>
    process: 2,3,4,5,6,7,8,9,10,11
    bool: 1,2,3,4,5,6,7,8,9,10,11,12,13,14
  2	sh1t.x	multi_inv<>
    process: 3,4,5,6
    bool: 1,2,3,4,5,6,3,4,6,5
  3	sh1t.x.s[0]	inv<>
    bool: 1,2,3,4
  4	sh1t.x.s[1]	inv<>
    bool: 1,2,5,6
  5	sh1t.x.t[0]	inv2<>
    bool: 1,2,3,4
  6	sh1t.x.t[1]	inv2<>
    bool: 1,2,6,5
  7	sh1t.y	multi_inv<>
    process: 8,9,10,11
    bool: 1,2,7,8,9,10,11,12,13,14
  8	sh1t.y.s[0]	inv<>
    bool: 1,2,7,8
  9	sh1t.y.s[1]	inv<>
    bool: 1,2,9,10
  10	sh1t.y.t[0]	inv2<>
    bool: 1,2,11,12
  11	sh1t.y.t[1]	inv2<>
    bool: 1,2,13,14
  private sub-process index map:
    (1 -> 0)
    (12 -> 2)
  bool instance pool: (0 ports, 14 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	sh1t.x.s[0].a @[ iscomb ]	
  4	sh1t.x.s[0].b @[ !autokeeper ]	
  5	sh1t.x.s[1].a @[ iscomb !autokeeper ]	
  6	sh1t.x.s[1].b	
  7	sh1t.y.s[0].a @[ iscomb ]	
  8	sh1t.y.s[0].b	
  9	sh1t.y.s[1].a @[ iscomb ]	
  10	sh1t.y.s[1].b	
  11	sh1t.y.t[0].a	
  12	sh1t.y.t[0].b @[ !autokeeper ]	
  13	sh1t.y.t[1].a	
  14	sh1t.y.t[1].b @[ !autokeeper ]	
}
