
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	100
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	11	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	15	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	footprnt	0	#HEAD#	#TAIL#	350
	20	##ADDR##	procdefn	0	#HEAD#	#TAIL#	94
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	footprnt	0	#HEAD#	#TAIL#	363
	28	##ADDR##	procdefn	0	#HEAD#	#TAIL#	114
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	33	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	36	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	37	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	44	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	45	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	359
	53	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	54	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	55	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	56	##ADDR##	procdefn	0	#HEAD#	#TAIL#	187
	57	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	58	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	59	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	60	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	62	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	63	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	64	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	65	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	66	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	67	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	68	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	70	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	71	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	72	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	76	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	77	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	78	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	83	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	87	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	88	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	91	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	92	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	93	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	97	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	98	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	101	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	103	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	104	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	105	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	106	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	107	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	108	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	109	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	110	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	111	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	112	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	113	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	114	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	115	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	117	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	119	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	120	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	121	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	123	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	125	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	126	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	127	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	128	##ADDR##	footprnt	0	#HEAD#	#TAIL#	359
	129	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	130	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	132	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	133	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	134	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	135	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	136	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	137	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	138	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	139	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	140	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	141	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	142	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	143	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	144	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	145	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	146	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	147	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	148	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	150	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	151	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	152	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	153	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	154	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	155	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	156	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	157	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	158	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	159	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	160	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	161	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	162	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	163	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1032
	164	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	165	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	166	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	167	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	168	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	169	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	170	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	171	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	172	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	173	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	174	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	175	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	176	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	177	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	178	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	179	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	180	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	181	##ADDR##	footprnt	0	#HEAD#	#TAIL#	699
	182	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	183	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	184	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  5 definitions
  0 typedefs
  Definitions:
    celem2inv = process-definition (defined) celem2inv(
        bool<> a
        bool<> b
        bool<> _o
      )
      In definition "celem2inv", we have: {
      Instances:
        _o = bool<> celem2inv::_o
        a = bool<> celem2inv::a
        b = bool<> celem2inv::b
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> _o
      prs:
        a & b -> _o-
        ~a & ~b -> _o+
      footprint: {
        _o = bool^0 = celem2inv::_o 
        a = bool^0 = celem2inv::a 
        b = bool^0 = celem2inv::b 
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
      unroll sequence: 
        bool<> d[0..1]
        bool<> e
      footprint: {
        d = bool^1
          {
            [0] = e1of2::d[0] 
            [1] = e1of2::d[1] 
          }
        e = bool^0 = e1of2::e 
      }
      }

    inv = process-definition (defined) inv(
        bool<> a
        bool<> b
      )
      In definition "inv", we have: {
      Instances:
        a = bool<> inv::a
        b = bool<> inv::b
      unroll sequence: 
        bool<> a
        bool<> b
      prs:
        a -> b-
        ~a -> b+
      footprint: {
        a = bool^0 = inv::a 
        b = bool^0 = inv::b 
      }
      }

    nand2 = process-definition (defined) nand2(
        bool<> a
        bool<> b
        bool<> _o
      )
      In definition "nand2", we have: {
      Instances:
        _o = bool<> nand2::_o
        a = bool<> nand2::a
        b = bool<> nand2::b
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> _o
      prs:
        a & b -> _o-
        ~a | ~b -> _o+
      footprint: {
        _o = bool^0 = nand2::_o 
        a = bool^0 = nand2::a 
        b = bool^0 = nand2::b 
      }
      }

    wchb_e1of2 = process-definition (defined) wchb_e1of2(
        e1of2<> L
        e1of2<> R
      )
      In definition "wchb_e1of2", we have: {
      Instances:
        L = e1of2<> wchb_e1of2::L
        R = e1of2<> wchb_e1of2::R
        _r = bool<> wchb_e1of2::_r^1
        l0 = celem2inv<> wchb_e1of2::l0
        l1 = celem2inv<> wchb_e1of2::l1
        la = nand2<> wchb_e1of2::la
        r0 = inv<> wchb_e1of2::r0
        r1 = inv<> wchb_e1of2::r1
        re = inv<> wchb_e1of2::re
        rv = bool<> wchb_e1of2::rv
      unroll sequence: 
        e1of2<> L
        e1of2<> R
        bool<> _r[0..1]
        bool<> rv
        inv<> r0
        r0 (_r[0], R.d[0]);
        inv<> r1
        r1 (_r[1], R.d[1]);
        inv<> re
        re (rv, L.e);
        celem2inv<> l0
        l0 (L.d[0], R.e, _r[0]);
        celem2inv<> l1
        l1 (L.d[1], R.e, _r[1]);
        nand2<> la
        la (_r[0], _r[1], rv);
      footprint: {
        L = process e1of2<>^0 = wchb_e1of2::L (
          d = bool^1
            {
              [0] = wchb_e1of2::l0.a 
              [1] = wchb_e1of2::l1.a 
            }
          e = bool^0 = wchb_e1of2::re.b 
        )
        R = process e1of2<>^0 = wchb_e1of2::R (
          d = bool^1
            {
              [0] = wchb_e1of2::r0.b 
              [1] = wchb_e1of2::r1.b 
            }
          e = bool^0 = wchb_e1of2::l0.b 
        )
        _r = bool^1
          {
            [0] = wchb_e1of2::l0._o 
            [1] = wchb_e1of2::l1._o 
          }
        l0 = process celem2inv<>^0 = wchb_e1of2::l0 (
          a = bool^0 = wchb_e1of2::l0.a 
          b = bool^0 = wchb_e1of2::l1.b 
          _o = bool^0 = wchb_e1of2::la.a 
        )
        l1 = process celem2inv<>^0 = wchb_e1of2::l1 (
          a = bool^0 = wchb_e1of2::l1.a 
          b = bool^0 = wchb_e1of2::l1.b 
          _o = bool^0 = wchb_e1of2::la.b 
        )
        la = process nand2<>^0 = wchb_e1of2::la (
          a = bool^0 = wchb_e1of2::la.a 
          b = bool^0 = wchb_e1of2::la.b 
          _o = bool^0 = wchb_e1of2::la._o 
        )
        r0 = process inv<>^0 = wchb_e1of2::r0 (
          a = bool^0 = wchb_e1of2::l0._o 
          b = bool^0 = wchb_e1of2::r0.b 
        )
        r1 = process inv<>^0 = wchb_e1of2::r1 (
          a = bool^0 = wchb_e1of2::l1._o 
          b = bool^0 = wchb_e1of2::r1.b 
        )
        re = process inv<>^0 = wchb_e1of2::re (
          a = bool^0 = wchb_e1of2::la._o 
          b = bool^0 = wchb_e1of2::re.b 
        )
        rv = bool^0 = wchb_e1of2::re.a 
      }
      }

  Instances:
    L = e1of2<> L
    R = e1of2<> R
    b = wchb_e1of2<> b
}

footprint: {
  L = process e1of2<>^0 = b.L (
    d = bool^1
      {
        [0] = L.d[0] 
        [1] = L.d[1] 
      }
    e = bool^0 = L.e 
  )
  R = process e1of2<>^0 = b.R (
    d = bool^1
      {
        [0] = R.d[0] 
        [1] = R.d[1] 
      }
    e = bool^0 = R.e 
  )
  b = process wchb_e1of2<>^0 = b (
    L = process e1of2<>^0 = b.L (
      d = bool^1
        {
          [0] = L.d[0] 
          [1] = L.d[1] 
        }
      e = bool^0 = L.e 
    )
    R = process e1of2<>^0 = b.R (
      d = bool^1
        {
          [0] = R.d[0] 
          [1] = R.d[1] 
        }
      e = bool^0 = R.e 
    )
  )
}
