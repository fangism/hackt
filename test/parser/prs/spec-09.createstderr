
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	156
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	27	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	31	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	32	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	36	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	38	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	30
	39	##ADDR##	pireltex	0	#HEAD#	#TAIL#	22
	40	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	footprnt	0	#HEAD#	#TAIL#	513
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	45	##ADDR##	footprnt	0	#HEAD#	#TAIL#	513
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	61	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	62	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	64	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	footprnt	0	#HEAD#	#TAIL#	600
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
      )
      In definition "foo", we have: {
      Parameters:
        N = pint<> foo::N
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        x = bool<> foo::x
        y = bool<> foo::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        x -> y-
        ~x -> y+
        }
      spec:
        assert<N<=2>()
      footprint collection: {
        <1> {
          !GND = bool^0 = foo<1>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<1>::!Vdd (2) @[ supply_high port-alias ] 
          N = pint^0 value: 1
          x = bool^0 = foo<1>::x (3) @[ port-alias loc-FO- loc-FO+ ] 
          y = bool^0 = foo<1>::y (4) @[ port-alias loc-FI- loc-FI+ ] 
          Created state:
          bool instance pool: (4 ports, 0 local, 0 mapped)
          1	foo<1>::!GND @[ supply_low port-alias ]	
          2	foo<1>::!Vdd @[ supply_high port-alias ]	
          3	foo<1>::x @[ port-alias loc-FO- loc-FO+ ]	
          4	foo<1>::y @[ port-alias loc-FI- loc-FI+ ]	
          resolved prs:
          x -> y-
          ~x -> y+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..1 none none : 2, 1 | 2, 1
          resolved specs:
          assert<true>()
        }
        <3> {
          !GND = bool^0 = foo<3>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<3>::!Vdd (2) @[ supply_high port-alias ] 
          N = pint^0 value: 3
          x = bool^0 = foo<3>::x (3) @[ port-alias loc-FO- loc-FO+ ] 
          y = bool^0 = foo<3>::y (4) @[ port-alias loc-FI- loc-FI+ ] 
          Created state:
          bool instance pool: (4 ports, 0 local, 0 mapped)
          1	foo<3>::!GND @[ supply_low port-alias ]	
          2	foo<3>::!Vdd @[ supply_high port-alias ]	
          3	foo<3>::x @[ port-alias loc-FO- loc-FO+ ]	
          4	foo<3>::y @[ port-alias loc-FI- loc-FI+ ]	
          resolved prs:
          x -> y-
          ~x -> y+
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..1 none none : 2, 1 | 2, 1
          resolved specs:
          assert<false>()
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar1 = foo<1> bar1
    bar3 = foo<3> bar3
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bar1 = process foo<1>^0 = bar1 (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^0 = bar1.x (3) @[ sub-FO- sub-FO+ ] 
    y = bool^0 = bar1.y (4) @[ sub-FI- sub-FI+ ] 
  )
  bar3 = process foo<3>^0 = bar3 (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^0 = bar3.x (5) @[ sub-FO- sub-FO+ ] 
    y = bool^0 = bar3.y (6) @[ sub-FI- sub-FI+ ] 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	bar1	foo<1>
    bool: 1,2,3,4
  2	bar3	foo<3>
    bool: 1,2,5,6
  bool instance pool: (0 ports, 6 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	bar1.x @[ sub-FO- sub-FO+ ]	
  4	bar1.y @[ sub-FI- sub-FI+ ]	
  5	bar3.x @[ sub-FO- sub-FO+ ]	
  6	bar3.y @[ sub-FI- sub-FI+ ]	
}
