
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	148
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	19	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	53
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	419
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	49	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    testing = process-definition (defined) testing(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "testing", we have: {
      Instances:
        !GND = bool<> testing::!GND
        !Vdd = bool<> testing::!Vdd
        p = bool<> testing::p
        q = bool<> testing::q
        r = bool<> testing::r
        s = bool<> testing::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> p
        bool<> q
        bool<> r
        bool<> s
      spec:
        mk_exclhi(p,q,r)
      footprint: {
        !GND = bool^0 = testing<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = testing<>::!Vdd (2) @[ supply_high port-alias ] 
        p = bool^0 = testing<>::p (3) 
        q = bool^0 = testing<>::q (4) 
        r = bool^0 = testing<>::r (5) 
        s = bool^0 = testing<>::s (6) 
        Created state:
        bool instance pool: (2 ports, 4 local, 0 mapped)
        1	testing<>::!GND @[ supply_low port-alias ]	
        2	testing<>::!Vdd @[ supply_high port-alias ]	
        3	testing<>::p	
        4	testing<>::q	
        5	testing<>::r	
        6	testing<>::s	
        resolved specs:
        mk_exclhi(p,q,r)
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    t = testing<> t
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  t = process testing<>^0 = t (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	t	testing<>
    bool: 1,2
  bool instance pool: (0 ports, 2 local, 4 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 4)
}
