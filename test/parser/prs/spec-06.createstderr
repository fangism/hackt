
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	53
	16	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	footprnt	0	#HEAD#	#TAIL#	375
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	footprnt	0	#HEAD#	#TAIL#	296
	23	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    testing = process-definition (defined) testing(
      )
      In definition "testing", we have: {
      Instances:
        p = bool<> testing::p
        q = bool<> testing::q
        r = bool<> testing::r
        s = bool<> testing::s
      unroll sequence: 
        bool<> p
        bool<> q
        bool<> r
        bool<> s
      spec:
        mk_exclhi(p,q,r)
      footprint: {
        p = bool^0 = testing<>::p (1) 
        q = bool^0 = testing<>::q (2) 
        r = bool^0 = testing<>::r (3) 
        s = bool^0 = testing<>::s (4) 
        Created state:
        bool instance pool:
        1	testing<>::p
        2	testing<>::q
        3	testing<>::r
        4	testing<>::s
        resolved specs:
        mk_exclhi(p,q,r)
      }
      }

  Instances:
    t = testing<> t
}

footprint: {
  t = process testing<>^0 = t (1) 
  Created state:
  process instance pool:
  1	t
}
