Warning: node foo<>::_n_.g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_n_.s has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_p_.g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_p_.s has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_np_.g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_np_._g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_np_.s has no pull-up nor pull-dn PRS fanin.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	120
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	25	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	24
	34	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	395
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	43	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	44	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	45	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	46	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	47	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	24
	56	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	footprnt	0	#HEAD#	#TAIL#	395
	61	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	62	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	63	##ADDR##	procdefn	0	#HEAD#	#TAIL#	155
	64	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	65	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	66	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	67	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	68	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	69	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	70	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	71	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	72	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	83	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	84	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	90	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	91	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	footprnt	0	#HEAD#	#TAIL#	696
	96	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	97	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	98	##ADDR##	footprnt	0	#HEAD#	#TAIL#	824
	99	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	100	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	101	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	102	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	103	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	104	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	106	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	107	##ADDR##	footprnt	0	#HEAD#	#TAIL#	386
	108	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        _n_ = passn<> foo::_n_
        _np_ = passnp<> foo::_np_
        _p_ = passp<> foo::_p_
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        passn<> _n_
        passp<> _p_
        passnp<> _np_
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) 
        !Vdd = bool^0 = foo<>::!Vdd (2) 
        _n_ = process passn<>^0 = foo<>::_n_ (1) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          g = bool^0 = foo<>::_n_.g (3) 
          s = bool^0 = foo<>::_n_.s (4) 
          d = bool^0 = foo<>::_n_.d (5) 
        )
        _np_ = process passnp<>^0 = foo<>::_np_ (3) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          g = bool^0 = foo<>::_np_.g (9) 
          _g = bool^0 = foo<>::_np_._g (10) 
          s = bool^0 = foo<>::_np_.s (11) 
          d = bool^0 = foo<>::_np_.d (12) 
        )
        _p_ = process passp<>^0 = foo<>::_p_ (2) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          g = bool^0 = foo<>::_p_.g (6) 
          s = bool^0 = foo<>::_p_.s (7) 
          d = bool^0 = foo<>::_p_.d (8) 
        )
        Created state:
        process instance pool:
        1	foo<>::_n_
        2	foo<>::_p_
        3	foo<>::_np_
        bool instance pool:
        1	foo<>::!GND
        2	foo<>::!Vdd
        3	foo<>::_n_.g
        4	foo<>::_n_.s
        5	foo<>::_n_.d
        6	foo<>::_p_.g
        7	foo<>::_p_.s
        8	foo<>::_p_.d
        9	foo<>::_np_.g
        10	foo<>::_np_._g
        11	foo<>::_np_.s
        12	foo<>::_np_.d
      }
      }

    passn = process-definition (defined) passn(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passn", we have: {
      Instances:
        !GND = bool<> passn::!GND
        !Vdd = bool<> passn::!Vdd
        d = bool<> passn::d
        g = bool<> passn::g
        s = bool<> passn::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> s
          bool<> d
        )
      prs:
        {
        passn(g,s,d)
        }
      footprint: {
        !GND = bool^0 = passn<>::!GND (1) 
        !Vdd = bool^0 = passn<>::!Vdd (2) 
        d = bool^0 = passn<>::d (5) 
        g = bool^0 = passn<>::g (3) 
        s = bool^0 = passn<>::s (4) 
        Created state:
        bool instance pool:
        1	passn<>::!GND
        2	passn<>::!Vdd
        3	passn<>::g
        4	passn<>::s
        5	passn<>::d
        resolved macros:
        passn(g,s,d)
      }
      }

    passnp = process-definition (defined) passnp(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
      )
      In definition "passnp", we have: {
      Instances:
        !GND = bool<> passnp::!GND
        !Vdd = bool<> passnp::!Vdd
        _g = bool<> passnp::_g
        d = bool<> passnp::d
        g = bool<> passnp::g
        n = passn<> passnp::n
        p = passp<> passnp::p
        s = bool<> passnp::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> _g
          bool<> s
          bool<> d
        )
        passn<> n
        n ( , , g, s, d);
        passp<> p
        p ( , , _g, s, d);
      footprint: {
        !GND = bool^0 = passnp<>::!GND (1) 
        !Vdd = bool^0 = passnp<>::!Vdd (2) 
        _g = bool^0 = passnp<>::_g (6) 
        d = bool^0 = passnp<>::d (5) 
        g = bool^0 = passnp<>::g (3) 
        n = process passn<>^0 = passnp<>::n (1) (
          !GND = bool^0 = passnp<>::!GND (1) 
          !Vdd = bool^0 = passnp<>::!Vdd (2) 
          g = bool^0 = passnp<>::g (3) 
          s = bool^0 = passnp<>::s (4) 
          d = bool^0 = passnp<>::d (5) 
        )
        p = process passp<>^0 = passnp<>::p (2) (
          !GND = bool^0 = passnp<>::!GND (1) 
          !Vdd = bool^0 = passnp<>::!Vdd (2) 
          g = bool^0 = passnp<>::_g (6) 
          s = bool^0 = passnp<>::s (4) 
          d = bool^0 = passnp<>::d (5) 
        )
        s = bool^0 = passnp<>::s (4) 
        Created state:
        process instance pool:
        1	passnp<>::n
        2	passnp<>::p
        bool instance pool:
        1	passnp<>::!GND
        2	passnp<>::!Vdd
        3	passnp<>::g
        4	passnp<>::s
        5	passnp<>::d
        6	passnp<>::_g
      }
      }

    passp = process-definition (defined) passp(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passp", we have: {
      Instances:
        !GND = bool<> passp::!GND
        !Vdd = bool<> passp::!Vdd
        d = bool<> passp::d
        g = bool<> passp::g
        s = bool<> passp::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> s
          bool<> d
        )
      prs:
        {
        passp(g,s,d)
        }
      footprint: {
        !GND = bool^0 = passp<>::!GND (1) 
        !Vdd = bool^0 = passp<>::!Vdd (2) 
        d = bool^0 = passp<>::d (5) 
        g = bool^0 = passp<>::g (3) 
        s = bool^0 = passp<>::s (4) 
        Created state:
        bool instance pool:
        1	passp<>::!GND
        2	passp<>::!Vdd
        3	passp<>::g
        4	passp<>::s
        5	passp<>::d
        resolved macros:
        passp(g,s,d)
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<> bar
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  bar = process foo<>^0 = bar (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
  )
  Created state:
  process instance pool:
  1	bar
  bool instance pool:
  1	!GND
  2	!Vdd
}
