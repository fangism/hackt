Warning: node foo<>::_n_.g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_n_.s has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_p_.g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_p_.s has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_np_.g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_np_._g has no pull-up nor pull-dn PRS fanin.
Warning: node foo<>::_np_.s has no pull-up nor pull-dn PRS fanin.
Warnings found (7) while creating complete type foo<>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	132
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	27	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	33	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	32
	50	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	footprnt	0	#HEAD#	#TAIL#	465
	55	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	57	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	58	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	59	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	61	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	62	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	63	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	69	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	70	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	71	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	76	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	32
	80	##ADDR##	PRSmacro	0	#HEAD#	#TAIL#	53
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	footprnt	0	#HEAD#	#TAIL#	465
	85	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	87	##ADDR##	procdefn	0	#HEAD#	#TAIL#	167
	88	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	89	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	90	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	91	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	92	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	93	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	94	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	95	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	96	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	97	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	98	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	99	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	100	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	101	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	102	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	103	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	104	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	110	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	112	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	113	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	114	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	115	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	116	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	117	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	119	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	120	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	121	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	122	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	123	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	126	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	127	##ADDR##	footprnt	0	#HEAD#	#TAIL#	730
	128	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	129	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	130	##ADDR##	footprnt	0	#HEAD#	#TAIL#	867
	131	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	132	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	133	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	134	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	135	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	136	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	137	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	138	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	139	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	140	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	141	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	142	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	143	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	144	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	145	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	146	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	147	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	148	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        _n_ = passn<> foo::_n_
        _np_ = passnp<> foo::_np_
        _p_ = passp<> foo::_p_
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        passn<> _n_
        passp<> _p_
        passnp<> _np_
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
        _n_ = process passn<>^0 = foo<>::_n_ (1) (
          !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
          g = bool^0 = foo<>::_n_.g (3) @[ sub-FO- ] 
          s = bool^0 = foo<>::_n_.s (4) @[ sub-FO- ] 
          d = bool^0 = foo<>::_n_.d (5) @[ sub-FI- ] 
        )
        _np_ = process passnp<>^0 = foo<>::_np_ (3) (
          !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
          g = bool^0 = foo<>::_np_.g (9) @[ sub-FO- ] 
          _g = bool^0 = foo<>::_np_._g (10) @[ sub-FO+ ] 
          s = bool^0 = foo<>::_np_.s (11) @[ sub-FO- sub-FO+ ] 
          d = bool^0 = foo<>::_np_.d (12) @[ sub-FI- sub-FI+ ] 
        )
        _p_ = process passp<>^0 = foo<>::_p_ (2) (
          !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
          g = bool^0 = foo<>::_p_.g (6) @[ sub-FO+ ] 
          s = bool^0 = foo<>::_p_.s (7) @[ sub-FO+ ] 
          d = bool^0 = foo<>::_p_.d (8) @[ sub-FI+ ] 
        )
        Created state:
        process instance pool: (0 ports, 3 local, 2 mapped)
        1	foo<>::_n_	passn<>
          bool: 1,2,3,4,5
        2	foo<>::_p_	passp<>
          bool: 1,2,6,7,8
        3	foo<>::_np_	passnp<>
          bool: 1,2,9,11,12,10
        private sub-process index map:
          (3 -> 0)
          (4 -> 2)
        bool instance pool: (2 ports, 10 local, 0 mapped)
        1	foo<>::!GND @[ supply_low port-alias ]	
        2	foo<>::!Vdd @[ supply_high port-alias ]	
        3	foo<>::_n_.g @[ sub-FO- ]	
        4	foo<>::_n_.s @[ sub-FO- ]	
        5	foo<>::_n_.d @[ sub-FI- ]	
        6	foo<>::_p_.g @[ sub-FO+ ]	
        7	foo<>::_p_.s @[ sub-FO+ ]	
        8	foo<>::_p_.d @[ sub-FI+ ]	
        9	foo<>::_np_.g @[ sub-FO- ]	
        10	foo<>::_np_._g @[ sub-FO+ ]	
        11	foo<>::_np_.s @[ sub-FO- sub-FO+ ]	
        12	foo<>::_np_.d @[ sub-FI- sub-FI+ ]	
      }
      }

    passn = process-definition (defined) passn(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passn", we have: {
      Instances:
        !GND = bool<> passn::!GND
        !Vdd = bool<> passn::!Vdd
        d = bool<> passn::d
        g = bool<> passn::g
        s = bool<> passn::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> s
          bool<> d
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        passn(g,s,d)
        }
      footprint: {
        !GND = bool^0 = passn<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = passn<>::!Vdd (2) @[ supply_high port-alias ] 
        d = bool^0 = passn<>::d (5) @[ port-alias loc-FI- ] 
        g = bool^0 = passn<>::g (3) @[ port-alias loc-FO- ] 
        s = bool^0 = passn<>::s (4) @[ port-alias loc-FO- ] 
        Created state:
        bool instance pool: (5 ports, 0 local, 0 mapped)
        1	passn<>::!GND @[ supply_low port-alias ]	
        2	passn<>::!Vdd @[ supply_high port-alias ]	
        3	passn<>::g @[ port-alias loc-FO- ]	
        4	passn<>::s @[ port-alias loc-FO- ]	
        5	passn<>::d @[ port-alias loc-FI- ]	
        resolved macros:
        passn(g,s,d)
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        none 0..0 none : 2, 1 | 2, 1
      }
      }

    passnp = process-definition (defined) passnp(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> _g
        bool<> s
        bool<> d
      )
      In definition "passnp", we have: {
      Instances:
        !GND = bool<> passnp::!GND
        !Vdd = bool<> passnp::!Vdd
        _g = bool<> passnp::_g
        d = bool<> passnp::d
        g = bool<> passnp::g
        n = passn<> passnp::n
        p = passp<> passnp::p
        s = bool<> passnp::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> _g
          bool<> s
          bool<> d
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        passn<> n
        n ( , , g, s, d);
        passp<> p
        p ( , , _g, s, d);
      footprint: {
        !GND = bool^0 = passnp<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = passnp<>::!Vdd (2) @[ supply_high port-alias ] 
        _g = bool^0 = passnp<>::_g (6) @[ port-alias sub-FO+ ] 
        d = bool^0 = passnp<>::d (5) @[ port-alias sub-FI- sub-FI+ ] 
        g = bool^0 = passnp<>::g (3) @[ port-alias sub-FO- ] 
        n = process passn<>^0 = passnp<>::n (1) (
          !GND = bool^0 = passnp<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = passnp<>::!Vdd (2) @[ supply_high port-alias ] 
          g = bool^0 = passnp<>::g (3) @[ port-alias sub-FO- ] 
          s = bool^0 = passnp<>::s (4) @[ port-alias sub-FO- sub-FO+ ] 
          d = bool^0 = passnp<>::d (5) @[ port-alias sub-FI- sub-FI+ ] 
        )
        p = process passp<>^0 = passnp<>::p (2) (
          !GND = bool^0 = passnp<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = passnp<>::!Vdd (2) @[ supply_high port-alias ] 
          g = bool^0 = passnp<>::_g (6) @[ port-alias sub-FO+ ] 
          s = bool^0 = passnp<>::s (4) @[ port-alias sub-FO- sub-FO+ ] 
          d = bool^0 = passnp<>::d (5) @[ port-alias sub-FI- sub-FI+ ] 
        )
        s = bool^0 = passnp<>::s (4) @[ port-alias sub-FO- sub-FO+ ] 
        Created state:
        process instance pool: (0 ports, 2 local, 0 mapped)
        1	passnp<>::n	passn<>
          bool: 1,2,3,4,5
        2	passnp<>::p	passp<>
          bool: 1,2,6,4,5
        bool instance pool: (6 ports, 0 local, 0 mapped)
        1	passnp<>::!GND @[ supply_low port-alias ]	
        2	passnp<>::!Vdd @[ supply_high port-alias ]	
        3	passnp<>::g @[ port-alias sub-FO- ]	
        4	passnp<>::s @[ port-alias sub-FO- sub-FO+ ]	
        5	passnp<>::d @[ port-alias sub-FI- sub-FI+ ]	
        6	passnp<>::_g @[ port-alias sub-FO+ ]	
      }
      }

    passp = process-definition (defined) passp(
        bool<> !GND
        bool<> !Vdd
        bool<> g
        bool<> s
        bool<> d
      )
      In definition "passp", we have: {
      Instances:
        !GND = bool<> passp::!GND
        !Vdd = bool<> passp::!Vdd
        d = bool<> passp::d
        g = bool<> passp::g
        s = bool<> passp::s
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> g
          bool<> s
          bool<> d
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        passp(g,s,d)
        }
      footprint: {
        !GND = bool^0 = passp<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = passp<>::!Vdd (2) @[ supply_high port-alias ] 
        d = bool^0 = passp<>::d (5) @[ port-alias loc-FI+ ] 
        g = bool^0 = passp<>::g (3) @[ port-alias loc-FO+ ] 
        s = bool^0 = passp<>::s (4) @[ port-alias loc-FO+ ] 
        Created state:
        bool instance pool: (5 ports, 0 local, 0 mapped)
        1	passp<>::!GND @[ supply_low port-alias ]	
        2	passp<>::!Vdd @[ supply_high port-alias ]	
        3	passp<>::g @[ port-alias loc-FO+ ]	
        4	passp<>::s @[ port-alias loc-FO+ ]	
        5	passp<>::d @[ port-alias loc-FI+ ]	
        resolved macros:
        passp(g,s,d)
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        none 0..0 none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<> bar
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bar = process foo<>^0 = bar (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 5 mapped)
  1	bar	foo<>
    bool: 1,2
  private sub-process index map:
    (1 -> 0)
    (2 -> 5)
  bool instance pool: (0 ports, 2 local, 10 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 10)
}
