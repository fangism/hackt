WARNING: process fifo<3>::I lacks connection to a consumer.
WARNING: process fifo<3>::O lacks connection to a producer.
Warnings found (2) while creating complete type fifo<3>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	31
	6	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	19	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	footprnt	0	#HEAD#	#TAIL#	338
	29	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	34	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	37	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	footprnt	0	#HEAD#	#TAIL#	356
	52	##ADDR##	procdefn	0	#HEAD#	#TAIL#	173
	53	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	54	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	55	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	56	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	57	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	58	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	59	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	60	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	62	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	63	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	68	##ADDR##	procdefn	0	#HEAD#	#TAIL#	120
	69	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	70	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	71	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	72	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	73	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	74	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	75	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	80	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	82	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	84	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	89	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	91	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	92	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	94	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	98	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	99	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	103	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	105	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	106	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	108	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	109	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	110	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	113	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	114	##ADDR##	procdefn	0	#HEAD#	#TAIL#	185
	115	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	116	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	117	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	118	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	119	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	120	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	121	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	122	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	32
	123	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	124	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	125	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	126	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	127	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	128	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	129	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	130	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	131	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	132	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	133	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	134	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	135	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	136	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	137	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	138	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	139	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	143	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	144	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	145	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	146	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	147	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	148	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	149	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	150	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	151	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	152	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	153	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	154	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	155	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	156	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	157	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	159	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	160	##ADDR##	PRSrcond	0	#HEAD#	#TAIL#	28
	161	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	162	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	48
	163	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	36
	164	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	165	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	166	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	167	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	168	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	169	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	170	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	171	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	172	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	173	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	174	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	175	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	176	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	177	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	178	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	179	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	180	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	181	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	182	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	183	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	184	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	185	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	186	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	187	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	188	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	189	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	190	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	191	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	192	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	193	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	194	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	195	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	196	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	197	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	198	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	199	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	200	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	201	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	202	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	203	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	204	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	205	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	206	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	207	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	208	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	209	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	210	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	28
	211	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	212	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	213	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	214	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	215	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	216	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	217	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	218	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	219	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	220	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	221	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	222	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	24
	223	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	224	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	225	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	226	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	227	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	228	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	229	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	230	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	231	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	232	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	233	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	234	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	235	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	236	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	237	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1795
	238	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	239	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	240	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	241	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	242	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	243	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	244	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	245	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	246	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	247	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	248	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	249	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	250	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	251	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	252	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	253	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	254	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	255	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	256	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	257	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	258	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	259	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	260	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	261	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	262	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	263	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	264	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	265	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	266	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	267	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	268	##ADDR##	footprnt	0	#HEAD#	#TAIL#	3394
	269	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	270	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	271	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	272	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	273	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	274	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	275	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	276	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	277	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	278	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	279	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	280	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	281	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	282	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	283	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	284	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	285	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	286	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	287	##ADDR##	pbassign	0	#HEAD#	#TAIL#	20
	288	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	289	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	290	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	291	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	292	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	293	##ADDR##	footprnt	0	#HEAD#	#TAIL#	919
	294	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  1 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  5 definitions
  0 typedefs
  Parameters:
    YES = pbool<> YES
  Definitions:
    _1of2 = process-definition (defined) _1of2(
        bool<> d[0..1]
        bool<> t
        bool<> f
      )
      In definition "_1of2", we have: {
      Instances:
        d = bool<> _1of2::d^1
        f = bool<> _1of2::f
        t = bool<> _1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> t
          bool<> f
        )
        d[0] = f;
        d[1] = t;
      footprint: {
        d = bool^1
          {
            [0] = _1of2<>::f (2) @[ port-alias ] 
            [1] = _1of2<>::t (1) @[ port-alias ] 
          }
        f = bool^0 = _1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = _1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	_1of2<>::t @[ port-alias ]	
        2	_1of2<>::f @[ port-alias ]	
        bool port aliases:
        1: _1of2<>::t = _1of2<>::d[1] @[ port-alias ]
        2: _1of2<>::f = _1of2<>::d[0] @[ port-alias ]
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> e
        bool<> t
        bool<> f
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
        f = bool<> e1of2::f
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> e
          bool<> t
          bool<> f
        )
        d[0] = f;
        d[1] = t;
      footprint: {
        d = bool^1
          {
            [0] = e1of2<>::f (3) @[ port-alias ] 
            [1] = e1of2<>::t (2) @[ port-alias ] 
          }
        e = bool^0 = e1of2<>::e (1) @[ port-alias ] 
        f = bool^0 = e1of2<>::f (3) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (2) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	e1of2<>::e @[ port-alias ]	
        2	e1of2<>::t @[ port-alias ]	
        3	e1of2<>::f @[ port-alias ]	
        bool port aliases:
        2: e1of2<>::t = e1of2<>::d[1] @[ port-alias ]
        3: e1of2<>::f = e1of2<>::d[0] @[ port-alias ]
      }
      }

    fifo = process-definition (defined) fifo<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        globals<>? g
        e1of2<>? I
        e1of2<>! O
      )
      In definition "fifo", we have: {
      Parameters:
        N = pint<> fifo::N
      Instances:
        !GND = bool<> fifo::!GND
        !Vdd = bool<> fifo::!Vdd
        I = e1of2<>? fifo::I
        M = e1of2<> fifo::M^1
        O = e1of2<>! fifo::O
        b = wchb<> fifo::b^1
        g = globals<>? fifo::g
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          globals<>? g
          e1of2<>? I
          e1of2<>! O
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        e1of2<> M[0..N+1-1]
        M[0] = I;
        M[N] = O;
        wchb<> b[0..N-1]
        (;j:[0..N-1]:
          b[$j] ( , , g, M[$j], M[$j+1]);
        )
      footprint collection: {
        <3> {
          !GND = bool^0 = fifo<3>::!GND (11) @[ supply_low port-alias ] 
          !Vdd = bool^0 = fifo<3>::!Vdd (12) @[ supply_high port-alias ] 
          I = process e1of2<>^0 = fifo<3>::I (2) @[ port? port-alias ] (
            d = bool^1
              {
                [0] = fifo<3>::I.d[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
                [1] = fifo<3>::I.d[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
              }
            e = bool^0 = fifo<3>::I.e (7) @[ port-alias sub-FI- sub-FI+ ] 
            t = bool^0 = fifo<3>::I.d[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
            f = bool^0 = fifo<3>::I.d[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
          )
          M = process e1of2<>^1
            {
              [0] = fifo<3>::I (2) @[ port? port-alias ] (
                d = bool^1
                  {
                    [0] = fifo<3>::I.d[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
                    [1] = fifo<3>::I.d[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
                  }
                e = bool^0 = fifo<3>::I.e (7) @[ port-alias sub-FI- sub-FI+ ] 
                t = bool^0 = fifo<3>::I.d[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
                f = bool^0 = fifo<3>::I.d[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
              )
              [1] = fifo<3>::M[1] (4) (
                d = bool^1
                  {
                    [0] = fifo<3>::M[1].d[0] (13) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                    [1] = fifo<3>::M[1].d[1] (14) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  }
                e = bool^0 = fifo<3>::M[1].e (15) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                t = bool^0 = fifo<3>::M[1].d[1] (14) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                f = bool^0 = fifo<3>::M[1].d[0] (13) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
              )
              [2] = fifo<3>::M[2] (5) (
                d = bool^1
                  {
                    [0] = fifo<3>::M[2].d[0] (16) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                    [1] = fifo<3>::M[2].d[1] (17) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  }
                e = bool^0 = fifo<3>::M[2].e (18) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                t = bool^0 = fifo<3>::M[2].d[1] (17) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                f = bool^0 = fifo<3>::M[2].d[0] (16) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
              )
              [3] = fifo<3>::O (3) @[ port! port-alias ] (
                d = bool^1
                  {
                    [0] = fifo<3>::O.d[0] (8) @[ port-alias sub-FI- sub-FI+ ] 
                    [1] = fifo<3>::O.d[1] (9) @[ port-alias sub-FI- sub-FI+ ] 
                  }
                e = bool^0 = fifo<3>::O.e (10) @[ port-alias sub-FO- sub-FO+ ] 
                t = bool^0 = fifo<3>::O.d[1] (9) @[ port-alias sub-FI- sub-FI+ ] 
                f = bool^0 = fifo<3>::O.d[0] (8) @[ port-alias sub-FI- sub-FI+ ] 
              )
            }
          N = pint^0 value: 3
          O = process e1of2<>^0 = fifo<3>::O (3) @[ port! port-alias ] (
            d = bool^1
              {
                [0] = fifo<3>::O.d[0] (8) @[ port-alias sub-FI- sub-FI+ ] 
                [1] = fifo<3>::O.d[1] (9) @[ port-alias sub-FI- sub-FI+ ] 
              }
            e = bool^0 = fifo<3>::O.e (10) @[ port-alias sub-FO- sub-FO+ ] 
            t = bool^0 = fifo<3>::O.d[1] (9) @[ port-alias sub-FI- sub-FI+ ] 
            f = bool^0 = fifo<3>::O.d[0] (8) @[ port-alias sub-FI- sub-FI+ ] 
          )
          b = process wchb<>^1
            {
              [0] = fifo<3>::b[0] (6) (
                !GND = bool^0 = fifo<3>::!GND (11) @[ supply_low port-alias ] 
                !Vdd = bool^0 = fifo<3>::!Vdd (12) @[ supply_high port-alias ] 
                g = process globals<>^0 = fifo<3>::g (1) @[ port? port-alias ] (
                  Vdd = bool^0 = fifo<3>::g.Vdd (1) @[ port-alias ] 
                  GND = bool^0 = fifo<3>::g.GND (2) @[ port-alias ] 
                  _sReset = bool^0 = fifo<3>::g._sReset (3) @[ port-alias sub-FO- sub-FO+ ] 
                  _pReset = bool^0 = fifo<3>::g._pReset (4) @[ port-alias ] 
                )
                l = process e1of2<>^0 = fifo<3>::I (2) @[ port? port-alias ] (
                  d = bool^1
                    {
                      [0] = fifo<3>::I.d[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
                      [1] = fifo<3>::I.d[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
                    }
                  e = bool^0 = fifo<3>::I.e (7) @[ port-alias sub-FI- sub-FI+ ] 
                  t = bool^0 = fifo<3>::I.d[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
                  f = bool^0 = fifo<3>::I.d[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
                )
                r = process e1of2<>^0 = fifo<3>::M[1] (4) (
                  d = bool^1
                    {
                      [0] = fifo<3>::M[1].d[0] (13) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                      [1] = fifo<3>::M[1].d[1] (14) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                    }
                  e = bool^0 = fifo<3>::M[1].e (15) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  t = bool^0 = fifo<3>::M[1].d[1] (14) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  f = bool^0 = fifo<3>::M[1].d[0] (13) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                )
              )
              [1] = fifo<3>::b[1] (7) (
                !GND = bool^0 = fifo<3>::!GND (11) @[ supply_low port-alias ] 
                !Vdd = bool^0 = fifo<3>::!Vdd (12) @[ supply_high port-alias ] 
                g = process globals<>^0 = fifo<3>::g (1) @[ port? port-alias ] (
                  Vdd = bool^0 = fifo<3>::g.Vdd (1) @[ port-alias ] 
                  GND = bool^0 = fifo<3>::g.GND (2) @[ port-alias ] 
                  _sReset = bool^0 = fifo<3>::g._sReset (3) @[ port-alias sub-FO- sub-FO+ ] 
                  _pReset = bool^0 = fifo<3>::g._pReset (4) @[ port-alias ] 
                )
                l = process e1of2<>^0 = fifo<3>::M[1] (4) (
                  d = bool^1
                    {
                      [0] = fifo<3>::M[1].d[0] (13) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                      [1] = fifo<3>::M[1].d[1] (14) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                    }
                  e = bool^0 = fifo<3>::M[1].e (15) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  t = bool^0 = fifo<3>::M[1].d[1] (14) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  f = bool^0 = fifo<3>::M[1].d[0] (13) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                )
                r = process e1of2<>^0 = fifo<3>::M[2] (5) (
                  d = bool^1
                    {
                      [0] = fifo<3>::M[2].d[0] (16) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                      [1] = fifo<3>::M[2].d[1] (17) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                    }
                  e = bool^0 = fifo<3>::M[2].e (18) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  t = bool^0 = fifo<3>::M[2].d[1] (17) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  f = bool^0 = fifo<3>::M[2].d[0] (16) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                )
              )
              [2] = fifo<3>::b[2] (8) (
                !GND = bool^0 = fifo<3>::!GND (11) @[ supply_low port-alias ] 
                !Vdd = bool^0 = fifo<3>::!Vdd (12) @[ supply_high port-alias ] 
                g = process globals<>^0 = fifo<3>::g (1) @[ port? port-alias ] (
                  Vdd = bool^0 = fifo<3>::g.Vdd (1) @[ port-alias ] 
                  GND = bool^0 = fifo<3>::g.GND (2) @[ port-alias ] 
                  _sReset = bool^0 = fifo<3>::g._sReset (3) @[ port-alias sub-FO- sub-FO+ ] 
                  _pReset = bool^0 = fifo<3>::g._pReset (4) @[ port-alias ] 
                )
                l = process e1of2<>^0 = fifo<3>::M[2] (5) (
                  d = bool^1
                    {
                      [0] = fifo<3>::M[2].d[0] (16) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                      [1] = fifo<3>::M[2].d[1] (17) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                    }
                  e = bool^0 = fifo<3>::M[2].e (18) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  t = bool^0 = fifo<3>::M[2].d[1] (17) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                  f = bool^0 = fifo<3>::M[2].d[0] (16) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
                )
                r = process e1of2<>^0 = fifo<3>::O (3) @[ port! port-alias ] (
                  d = bool^1
                    {
                      [0] = fifo<3>::O.d[0] (8) @[ port-alias sub-FI- sub-FI+ ] 
                      [1] = fifo<3>::O.d[1] (9) @[ port-alias sub-FI- sub-FI+ ] 
                    }
                  e = bool^0 = fifo<3>::O.e (10) @[ port-alias sub-FO- sub-FO+ ] 
                  t = bool^0 = fifo<3>::O.d[1] (9) @[ port-alias sub-FI- sub-FI+ ] 
                  f = bool^0 = fifo<3>::O.d[0] (8) @[ port-alias sub-FI- sub-FI+ ] 
                )
              )
            }
          g = process globals<>^0 = fifo<3>::g (1) @[ port? port-alias ] (
            Vdd = bool^0 = fifo<3>::g.Vdd (1) @[ port-alias ] 
            GND = bool^0 = fifo<3>::g.GND (2) @[ port-alias ] 
            _sReset = bool^0 = fifo<3>::g._sReset (3) @[ port-alias sub-FO- sub-FO+ ] 
            _pReset = bool^0 = fifo<3>::g._pReset (4) @[ port-alias ] 
          )
          Created state:
          process instance pool: (3 ports, 5 local, 3 mapped)
          1	fifo<3>::g @[ port? port-alias ]	globals<>
            bool: 1,2,3,4
          2	fifo<3>::I @[ port? port-alias ]	e1of2<>
            bool: 7,6,5
          3	fifo<3>::O @[ port! port-alias ]	e1of2<>
            bool: 10,9,8
          4	fifo<3>::M[1]	e1of2<>
            bool: 15,14,13
          5	fifo<3>::M[2]	e1of2<>
            bool: 18,17,16
          6	fifo<3>::b[0]	wchb<>
            process: 1,2,4
            bool: 1,2,3,4,5,6,7,13,14,15,11,12
          7	fifo<3>::b[1]	wchb<>
            process: 1,4,5
            bool: 1,2,3,4,13,14,15,16,17,18,11,12
          8	fifo<3>::b[2]	wchb<>
            process: 1,5,3
            bool: 1,2,3,4,16,17,18,8,9,10,11,12
          private sub-process index map:
            (6 -> 0)
            (7 -> 1)
            (8 -> 2)
            (9 -> 3)
          bool instance pool: (12 ports, 6 local, 12 mapped)
          1	fifo<3>::g.Vdd @[ port-alias ]	
          2	fifo<3>::g.GND @[ port-alias ]	
          3	fifo<3>::g._sReset @[ port-alias sub-FO- sub-FO+ ]	
          4	fifo<3>::g._pReset @[ port-alias ]	
          5	fifo<3>::I.d[0] @[ port-alias sub-FO- sub-FO+ ]	
          6	fifo<3>::I.d[1] @[ port-alias sub-FO- sub-FO+ ]	
          7	fifo<3>::I.e @[ port-alias sub-FI- sub-FI+ ]	
          8	fifo<3>::O.d[0] @[ port-alias sub-FI- sub-FI+ ]	
          9	fifo<3>::O.d[1] @[ port-alias sub-FI- sub-FI+ ]	
          10	fifo<3>::O.e @[ port-alias sub-FO- sub-FO+ ]	
          11	fifo<3>::!GND @[ supply_low port-alias ]	
          12	fifo<3>::!Vdd @[ supply_high port-alias ]	
          13	fifo<3>::M[1].d[0] @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          14	fifo<3>::M[1].d[1] @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          15	fifo<3>::M[1].e @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          16	fifo<3>::M[2].d[0] @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          17	fifo<3>::M[2].d[1] @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          18	fifo<3>::M[2].e @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          private sub-bool index map:
            (6 -> 0)
            (7 -> 4)
            (8 -> 8)
            (9 -> 12)
          bool port aliases:
          5: fifo<3>::I.d[0] = fifo<3>::I.f @[ port-alias sub-FO- sub-FO+ ]
          6: fifo<3>::I.d[1] = fifo<3>::I.t @[ port-alias sub-FO- sub-FO+ ]
          8: fifo<3>::O.d[0] = fifo<3>::O.f @[ port-alias sub-FI- sub-FI+ ]
          9: fifo<3>::O.d[1] = fifo<3>::O.t @[ port-alias sub-FI- sub-FI+ ]
        }
      }
      }

    globals = process-definition (defined) globals(
        bool<> Vdd
        bool<> GND
        bool<> _sReset
        bool<> _pReset
      )
      In definition "globals", we have: {
      Instances:
        GND = bool<> globals::GND
        Vdd = bool<> globals::Vdd
        _pReset = bool<> globals::_pReset
        _sReset = bool<> globals::_sReset
      unroll sequence: 
        ports: (
          bool<> Vdd
          bool<> GND
          bool<> _sReset
          bool<> _pReset
        )
      footprint: {
        GND = bool^0 = globals<>::GND (2) @[ port-alias ] 
        Vdd = bool^0 = globals<>::Vdd (1) @[ port-alias ] 
        _pReset = bool^0 = globals<>::_pReset (4) @[ port-alias ] 
        _sReset = bool^0 = globals<>::_sReset (3) @[ port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	globals<>::Vdd @[ port-alias ]	
        2	globals<>::GND @[ port-alias ]	
        3	globals<>::_sReset @[ port-alias ]	
        4	globals<>::_pReset @[ port-alias ]	
      }
      }

    wchb = process-definition (defined) wchb(
        bool<> !GND
        bool<> !Vdd
        globals<> g
        e1of2<> l
        e1of2<> r
      )
      In definition "wchb", we have: {
      Instances:
        !GND = bool<> wchb::!GND
        !Vdd = bool<> wchb::!Vdd
        _pReset = bool<> wchb::_pReset
        _r = _1of2<> wchb::_r
        _sReset = bool<> wchb::_sReset
        g = globals<> wchb::g
        l = e1of2<> wchb::l
        mypReset = bool<> wchb::mypReset
        r = e1of2<> wchb::r
        rv = bool<> wchb::rv
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          globals<> g
          e1of2<> l
          e1of2<> r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        _1of2<> _r
        bool<> rv
        bool<> _sReset
        _sReset = g._sReset;
        bool<> _pReset
        _pReset = g._pReset;
        bool<> mypReset
      prs:
        [ YES ->
          {
          (:d:[0..1]:
            l.d[$d] & r.e -> _r.d[$d]-
            ~l.d[$d] & ~r.e -> _r.d[$d]+
            _r.d[$d] -> r.d[$d]-
            ~_r.d[$d] -> r.d[$d]+
          )
          g._sReset & _r.t & _r.f -> rv-
          ~g._sReset | ~_r.t | ~_r.f -> rv+
          rv -> l.e-
          ~rv -> l.e+
          }
        ]
      footprint: {
        !GND = bool^0 = wchb<>::!GND (11) @[ supply_low port-alias ] 
        !Vdd = bool^0 = wchb<>::!Vdd (12) @[ supply_high port-alias ] 
        _pReset = bool^0 = wchb<>::_pReset (4) @[ port-alias ] 
        _r = process _1of2<>^0 = wchb<>::_r (4) (
          d = bool^1
            {
              [0] = wchb<>::_r.d[0] (13) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
              [1] = wchb<>::_r.d[1] (14) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
            }
          t = bool^0 = wchb<>::_r.d[1] (14) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
          f = bool^0 = wchb<>::_r.d[0] (13) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
        )
        _sReset = bool^0 = wchb<>::_sReset (3) @[ port-alias loc-FO- loc-FO+ ] 
        g = process globals<>^0 = wchb<>::g (1) @[ port-alias ] (
          Vdd = bool^0 = wchb<>::g.Vdd (1) @[ port-alias ] 
          GND = bool^0 = wchb<>::g.GND (2) @[ port-alias ] 
          _sReset = bool^0 = wchb<>::_sReset (3) @[ port-alias loc-FO- loc-FO+ ] 
          _pReset = bool^0 = wchb<>::_pReset (4) @[ port-alias ] 
        )
        l = process e1of2<>^0 = wchb<>::l (2) @[ port-alias ] (
          d = bool^1
            {
              [0] = wchb<>::l.d[0] (5) @[ port-alias loc-FO- loc-FO+ ] 
              [1] = wchb<>::l.d[1] (6) @[ port-alias loc-FO- loc-FO+ ] 
            }
          e = bool^0 = wchb<>::l.e (7) @[ port-alias loc-FI- loc-FI+ ] 
          t = bool^0 = wchb<>::l.d[1] (6) @[ port-alias loc-FO- loc-FO+ ] 
          f = bool^0 = wchb<>::l.d[0] (5) @[ port-alias loc-FO- loc-FO+ ] 
        )
        mypReset = bool^0 = wchb<>::mypReset (16) 
        r = process e1of2<>^0 = wchb<>::r (3) @[ port-alias ] (
          d = bool^1
            {
              [0] = wchb<>::r.d[0] (8) @[ port-alias loc-FI- loc-FI+ ] 
              [1] = wchb<>::r.d[1] (9) @[ port-alias loc-FI- loc-FI+ ] 
            }
          e = bool^0 = wchb<>::r.e (10) @[ port-alias loc-FO- loc-FO+ ] 
          t = bool^0 = wchb<>::r.d[1] (9) @[ port-alias loc-FI- loc-FI+ ] 
          f = bool^0 = wchb<>::r.d[0] (8) @[ port-alias loc-FI- loc-FI+ ] 
        )
        rv = bool^0 = wchb<>::rv (15) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
        Created state:
        process instance pool: (3 ports, 1 local, 0 mapped)
        1	wchb<>::g @[ port-alias ]	globals<>
          bool: 1,2,3,4
        2	wchb<>::l @[ port-alias ]	e1of2<>
          bool: 7,6,5
        3	wchb<>::r @[ port-alias ]	e1of2<>
          bool: 10,9,8
        4	wchb<>::_r	_1of2<>
          bool: 14,13
        bool instance pool: (12 ports, 4 local, 0 mapped)
        1	wchb<>::g.Vdd @[ port-alias ]	
        2	wchb<>::g.GND @[ port-alias ]	
        3	wchb<>::_sReset @[ port-alias loc-FO- loc-FO+ ]	
        4	wchb<>::_pReset @[ port-alias ]	
        5	wchb<>::l.d[0] @[ port-alias loc-FO- loc-FO+ ]	
        6	wchb<>::l.d[1] @[ port-alias loc-FO- loc-FO+ ]	
        7	wchb<>::l.e @[ port-alias loc-FI- loc-FI+ ]	
        8	wchb<>::r.d[0] @[ port-alias loc-FI- loc-FI+ ]	
        9	wchb<>::r.d[1] @[ port-alias loc-FI- loc-FI+ ]	
        10	wchb<>::r.e @[ port-alias loc-FO- loc-FO+ ]	
        11	wchb<>::!GND @[ supply_low port-alias ]	
        12	wchb<>::!Vdd @[ supply_high port-alias ]	
        13	wchb<>::_r.d[0] @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        14	wchb<>::_r.d[1] @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        15	wchb<>::rv @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        16	wchb<>::mypReset	
        bool port aliases:
        5: wchb<>::l.d[0] = wchb<>::l.f @[ port-alias loc-FO- loc-FO+ ]
        6: wchb<>::l.d[1] = wchb<>::l.t @[ port-alias loc-FO- loc-FO+ ]
        8: wchb<>::r.d[0] = wchb<>::r.f @[ port-alias loc-FI- loc-FI+ ]
        9: wchb<>::r.d[1] = wchb<>::r.t @[ port-alias loc-FI- loc-FI+ ]
        resolved prs:
        l.d[0] & r.e -> _r.d[0]-
        ~l.d[0] & ~r.e -> _r.d[0]+
        _r.d[0] -> r.d[0]-
        ~_r.d[0] -> r.d[0]+
        l.d[1] & r.e -> _r.d[1]-
        ~l.d[1] & ~r.e -> _r.d[1]+
        _r.d[1] -> r.d[1]-
        ~_r.d[1] -> r.d[1]+
        _sReset & _r.d[1] & _r.d[0] -> rv-
        ~_sReset | ~_r.d[1] | ~_r.d[0] -> rv+
        rv -> l.e-
        ~rv -> l.e+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..11 none none : 12, 11 | 12, 11
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = fifo<3> foo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  YES = pbool^0 value: 1
  foo = process fifo<3>^0 = foo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    g = process globals<>^0 = foo.g (2) (
      Vdd = bool^0 = foo.g.Vdd (3) 
      GND = bool^0 = foo.g.GND (4) 
      _sReset = bool^0 = foo.g._sReset (5) @[ sub-FO- sub-FO+ ] 
      _pReset = bool^0 = foo.g._pReset (6) 
    )
    I = process e1of2<>^0 = foo.I (3) (
      d = bool^1
        {
          [0] = foo.I.d[0] (7) @[ sub-FO- sub-FO+ ] 
          [1] = foo.I.d[1] (8) @[ sub-FO- sub-FO+ ] 
        }
      e = bool^0 = foo.I.e (9) @[ sub-FI- sub-FI+ ] 
      t = bool^0 = foo.I.d[1] (8) @[ sub-FO- sub-FO+ ] 
      f = bool^0 = foo.I.d[0] (7) @[ sub-FO- sub-FO+ ] 
    )
    O = process e1of2<>^0 = foo.O (4) (
      d = bool^1
        {
          [0] = foo.O.d[0] (10) @[ sub-FI- sub-FI+ ] 
          [1] = foo.O.d[1] (11) @[ sub-FI- sub-FI+ ] 
        }
      e = bool^0 = foo.O.e (12) @[ sub-FO- sub-FO+ ] 
      t = bool^0 = foo.O.d[1] (11) @[ sub-FI- sub-FI+ ] 
      f = bool^0 = foo.O.d[0] (10) @[ sub-FI- sub-FI+ ] 
    )
  )
  Created state:
  process instance pool: (0 ports, 4 local, 8 mapped)
  1	foo	fifo<3>
    process: 2,3,4
    bool: 3,4,5,6,7,8,9,10,11,12,1,2
  2	foo.g	globals<>
    bool: 3,4,5,6
  3	foo.I	e1of2<>
    bool: 9,8,7
  4	foo.O	e1of2<>
    bool: 12,11,10
  private sub-process index map:
    (1 -> 0)
    (5 -> 8)
  bool instance pool: (0 ports, 12 local, 18 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	foo.g.Vdd	
  4	foo.g.GND	
  5	foo.g._sReset @[ sub-FO- sub-FO+ ]	
  6	foo.g._pReset	
  7	foo.I.d[0] @[ sub-FO- sub-FO+ ]	
  8	foo.I.d[1] @[ sub-FO- sub-FO+ ]	
  9	foo.I.e @[ sub-FI- sub-FI+ ]	
  10	foo.O.d[0] @[ sub-FI- sub-FI+ ]	
  11	foo.O.d[1] @[ sub-FI- sub-FI+ ]	
  12	foo.O.e @[ sub-FO- sub-FO+ ]	
  private sub-bool index map:
    (1 -> 0)
    (5 -> 18)
}
