
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	13	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	14	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	15	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	20	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	21	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	29	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	36	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	37	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	44	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	45	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	47	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	49	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	50	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	55	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	56	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	57	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	58	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	59	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	67	##ADDR##	PRSor___	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    nor2_ver1 = process-definition (defined) nor2_ver1(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "nor2_ver1", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
        c = bool<> c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      prs:
        a | b -> c-
        ~a & ~b -> c+
      }

    nor2_ver2 = process-definition (defined) nor2_ver2(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "nor2_ver2", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
        c = bool<> c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      prs:
        a | b -> c-
        ~a & ~b -> c+
      }

    nor2_ver3 = process-definition (defined) nor2_ver3(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "nor2_ver3", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
        c = bool<> c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      prs:
        ~a & ~b -> c+
        a | b -> c-
      }

}

