
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	28
	22	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	23	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	PRSrsubc	0	#HEAD#	#TAIL#	20
	27	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	28	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	footprnt	0	#HEAD#	#TAIL#	479
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	34	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	467
	39	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    bogus = process-definition (defined) bogus(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
        bool<> z
      )
      In definition "bogus", we have: {
      Instances:
        !GND = bool<> bogus::!GND
        !Vdd = bool<> bogus::!Vdd
        x = bool<> bogus::x
        y = bool<> bogus::y
        z = bool<> bogus::z
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
          bool<> z
        )
      prs:
        {
        x -> y-
        subckt <""> {
          ~y -> z+
        }
        }
      footprint: {
        !GND = bool^0 = bogus<>::!GND (1) 
        !Vdd = bool^0 = bogus<>::!Vdd (2) 
        x = bool^0 = bogus<>::x (3) 
        y = bool^0 = bogus<>::y (4) 
        z = bool^0 = bogus<>::z (5) 
        Created state:
        bool instance pool: (5 ports)
        1	bogus<>::!GND	
        2	bogus<>::!Vdd	
        3	bogus<>::x	
        4	bogus<>::y	
        5	bogus<>::z	
        resolved prs:
        x -> y-
        ~y -> z+
        subcircuit (rules, macros, @nodes): 
        1: 1..1 none none 
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    Z = bogus<> Z
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  Z = process bogus<>^0 = Z (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = Z.x (3) 
    y = bool^0 = Z.y (4) 
    z = bool^0 = Z.z (5) 
  )
  Created state:
  process instance pool: (0 ports)
  1	Z	bogus<>
    bool: 1,2,3,4,5
  bool instance pool: (0 ports)
  1	!GND	
  2	!Vdd	
  3	Z.x	
  4	Z.y	
  5	Z.z	
}
