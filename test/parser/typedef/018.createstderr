
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	132
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	17	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	20	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	footprnt	0	#HEAD#	#TAIL#	370
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	footprnt	0	#HEAD#	#TAIL#	386
	26	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	48
	27	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	31	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	32	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	40	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	43	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	footprnt	0	#HEAD#	#TAIL#	572
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  1 typedefs
  Definitions:
    baz = process-definition (defined) baz<
      pint<> N
      >(
        bool<> x
        bool<> y
        bool<> z[0..N-1]
      )
      In definition "baz", we have: {
      Parameters:
        N = pint<> baz::N
      Instances:
        x = bool<> baz::x
        y = bool<> baz::y
        z = bool<> baz::z^1
      unroll sequence: 
        bool<> x
        bool<> y
        bool<> z[0..N-1]
      footprint collection: {
        <3> {
          N = pint^0 value: 3
          x = bool^0 = baz::x (1) 
          y = bool^0 = baz::y (2) 
          z = bool^1
            {
              [0] = baz::z[0] (3) 
              [1] = baz::z[1] (4) 
              [2] = baz::z[2] (5) 
            }
          Created state:
          bool instance pool:
          1	baz::x
          2	baz::y
          3	baz::z[0]
          4	baz::z[1]
          5	baz::z[2]
        }
        <4> {
          N = pint^0 value: 4
          x = bool^0 = baz::x (1) 
          y = bool^0 = baz::y (2) 
          z = bool^1
            {
              [0] = baz::z[0] (3) 
              [1] = baz::z[1] (4) 
              [2] = baz::z[2] (5) 
              [3] = baz::z[3] (6) 
            }
          Created state:
          bool instance pool:
          1	baz::x
          2	baz::y
          3	baz::z[0]
          4	baz::z[1]
          5	baz::z[2]
          6	baz::z[3]
        }
      }
      }

  Typedefs:
    zab = process-definition-alias: zab<
      pint<> Z
      >
      = baz<zab::Z>
  Instances:
    P = baz<4> P
    Q = zab<3> Q
}

footprint: {
  P = process baz<4>^0 = P (1) (
    x = bool^0 = P.x (1) 
    y = bool^0 = P.y (2) 
    z = bool^1
      {
        [0] = P.z[0] (3) 
        [1] = P.z[1] (4) 
        [2] = P.z[2] (5) 
        [3] = P.z[3] (6) 
      }
  )
  Q = process baz<3>^0 = Q (2) (
    x = bool^0 = Q.x (7) 
    y = bool^0 = P.x (1) 
    z = bool^1
      {
        [0] = Q.z[0] (8) 
        [1] = Q.z[1] (9) 
        [2] = Q.z[2] (10) 
      }
  )
  Created state:
  process instance pool:
  1	P
  2	Q
  bool instance pool:
  1	P.x
  2	P.y
  3	P.z[0]
  4	P.z[1]
  5	P.z[2]
  6	P.z[3]
  7	Q.x
  8	Q.z[0]
  9	Q.z[1]
  10	Q.z[2]
}
