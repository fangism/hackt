WARNING: process thingy<>::I lacks connection to a consumer.
WARNING: process thingy<>::O lacks connection to a producer.
Warnings found (2) while creating complete type thingy<>.
WARNING: process container<>::A lacks connection to a consumer.
WARNING: process container<>::B lacks connection to a producer.
Warnings found (2) while creating complete type container<>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	162
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	25	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	26	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	29	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	34	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	42
	45	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	footprnt	0	#HEAD#	#TAIL#	394
	48	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	50	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	54	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	59	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	60	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	62	##ADDR##	procdefn	0	#HEAD#	#TAIL#	127
	63	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	64	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	65	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	66	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	67	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	68	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	69	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	70	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	71	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	72	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	73	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	75	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	76	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	80	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	footprnt	0	#HEAD#	#TAIL#	660
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	85	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	86	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	87	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	91	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1759
	94	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	95	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	96	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	97	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	98	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	99	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	100	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	101	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	102	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	103	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	105	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	106	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	107	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	108	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	109	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	110	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	111	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	112	##ADDR##	footprnt	0	#HEAD#	#TAIL#	757
	113	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    container = process-definition (defined) container(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? A
        e1of2<>! B
      )
      In definition "container", we have: {
      Instances:
        !GND = bool<> container::!GND
        !Vdd = bool<> container::!Vdd
        A = e1of2<>? container::A
        B = e1of2<>! container::B
        M = e1of2<> container::M
        bob = thingy<> container::bob
        joe = thingy<> container::joe
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? A
          e1of2<>! B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        e1of2<> M
        thingy<> bob
        bob ( , , , M);
        thingy<> joe
        joe ( , , M, );
      footprint: {
        !GND = bool^0 = container<>::!GND (7) @[ supply_low port-alias ] 
        !Vdd = bool^0 = container<>::!Vdd (8) @[ supply_high port-alias ] 
        A = process e1of2<>^0 = container<>::A (1) @[ port? port-alias ] (
          d = bool^1
            {
              [0] = container<>::A.d[0] (1) @[ port-alias ] 
              [1] = container<>::A.d[1] (2) @[ port-alias ] 
            }
          t = bool^0 = container<>::A.d[1] (2) @[ port-alias ] 
          f = bool^0 = container<>::A.d[0] (1) @[ port-alias ] 
          e = bool^0 = container<>::A.e (3) @[ port-alias ] 
        )
        B = process e1of2<>^0 = container<>::B (2) @[ port! port-alias ] (
          d = bool^1
            {
              [0] = container<>::B.d[0] (4) @[ port-alias ] 
              [1] = container<>::B.d[1] (5) @[ port-alias ] 
            }
          t = bool^0 = container<>::B.d[1] (5) @[ port-alias ] 
          f = bool^0 = container<>::B.d[0] (4) @[ port-alias ] 
          e = bool^0 = container<>::B.e (6) @[ port-alias ] 
        )
        M = process e1of2<>^0 = container<>::M (3) (
          d = bool^1
            {
              [0] = container<>::M.d[0] (9) 
              [1] = container<>::M.d[1] (10) 
            }
          t = bool^0 = container<>::M.d[1] (10) 
          f = bool^0 = container<>::M.d[0] (9) 
          e = bool^0 = container<>::M.e (11) 
        )
        bob = process thingy<>^0 = container<>::bob (4) (
          !GND = bool^0 = container<>::!GND (7) @[ supply_low port-alias ] 
          !Vdd = bool^0 = container<>::!Vdd (8) @[ supply_high port-alias ] 
          I = process e1of2<>^0 = container<>::bob.I (5) (
            d = bool^1
              {
                [0] = container<>::bob.I.d[0] (12) 
                [1] = container<>::bob.I.d[1] (13) 
              }
            t = bool^0 = container<>::bob.I.d[1] (13) 
            f = bool^0 = container<>::bob.I.d[0] (12) 
            e = bool^0 = container<>::bob.I.e (14) 
          )
          O = process e1of2<>^0 = container<>::M (3) (
            d = bool^1
              {
                [0] = container<>::M.d[0] (9) 
                [1] = container<>::M.d[1] (10) 
              }
            t = bool^0 = container<>::M.d[1] (10) 
            f = bool^0 = container<>::M.d[0] (9) 
            e = bool^0 = container<>::M.e (11) 
          )
        )
        joe = process thingy<>^0 = container<>::joe (6) (
          !GND = bool^0 = container<>::!GND (7) @[ supply_low port-alias ] 
          !Vdd = bool^0 = container<>::!Vdd (8) @[ supply_high port-alias ] 
          I = process e1of2<>^0 = container<>::M (3) (
            d = bool^1
              {
                [0] = container<>::M.d[0] (9) 
                [1] = container<>::M.d[1] (10) 
              }
            t = bool^0 = container<>::M.d[1] (10) 
            f = bool^0 = container<>::M.d[0] (9) 
            e = bool^0 = container<>::M.e (11) 
          )
          O = process e1of2<>^0 = container<>::joe.O (7) (
            d = bool^1
              {
                [0] = container<>::joe.O.d[0] (15) 
                [1] = container<>::joe.O.d[1] (16) 
              }
            t = bool^0 = container<>::joe.O.d[1] (16) 
            f = bool^0 = container<>::joe.O.d[0] (15) 
            e = bool^0 = container<>::joe.O.e (17) 
          )
        )
        Created state:
        process instance pool: (2 ports, 5 local, 0 mapped)
        1	container<>::A @[ port? port-alias ]	e1of2<>
          bool: 2,1,3
        2	container<>::B @[ port! port-alias ]	e1of2<>
          bool: 5,4,6
        3	container<>::M	e1of2<>
          bool: 10,9,11
        4	container<>::bob	thingy<>
          process: 5,3
          bool: 12,13,14,9,10,11,7,8
        5	container<>::bob.I	e1of2<>
          bool: 13,12,14
        6	container<>::joe	thingy<>
          process: 3,7
          bool: 9,10,11,15,16,17,7,8
        7	container<>::joe.O	e1of2<>
          bool: 16,15,17
        bool instance pool: (8 ports, 9 local, 0 mapped)
        1	container<>::A.d[0] @[ port-alias ]	
        2	container<>::A.d[1] @[ port-alias ]	
        3	container<>::A.e @[ port-alias ]	
        4	container<>::B.d[0] @[ port-alias ]	
        5	container<>::B.d[1] @[ port-alias ]	
        6	container<>::B.e @[ port-alias ]	
        7	container<>::!GND @[ supply_low port-alias ]	
        8	container<>::!Vdd @[ supply_high port-alias ]	
        9	container<>::M.d[0]	
        10	container<>::M.d[1]	
        11	container<>::M.e	
        12	container<>::bob.I.d[0]	
        13	container<>::bob.I.d[1]	
        14	container<>::bob.I.e	
        15	container<>::joe.O.d[0]	
        16	container<>::joe.O.d[1]	
        17	container<>::joe.O.e	
        bool port aliases:
        1: container<>::A.d[0] = container<>::A.f @[ port-alias ]
        2: container<>::A.d[1] = container<>::A.t @[ port-alias ]
        4: container<>::B.d[0] = container<>::B.f @[ port-alias ]
        5: container<>::B.d[1] = container<>::B.t @[ port-alias ]
      }
      }

    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> t
        bool<> f
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
        f = bool<> e1of2::f
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> t
          bool<> f
          bool<> e
        )
        d[0] = f;
        d[1] = t;
      spec:
        exclhi(f,t)
      footprint: {
        d = bool^1
          {
            [0] = e1of2<>::f (2) @[ port-alias ] 
            [1] = e1of2<>::t (1) @[ port-alias ] 
          }
        e = bool^0 = e1of2<>::e (3) @[ port-alias ] 
        f = bool^0 = e1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	e1of2<>::t @[ port-alias ]	
        2	e1of2<>::f @[ port-alias ]	
        3	e1of2<>::e @[ port-alias ]	
        bool port aliases:
        1: e1of2<>::t = e1of2<>::d[1] @[ port-alias ]
        2: e1of2<>::f = e1of2<>::d[0] @[ port-alias ]
        resolved specs:
        exclhi(f,t)
      }
      }

    thingy = process-definition (defined) thingy(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? I
        e1of2<>! O
      )
      In definition "thingy", we have: {
      Instances:
        !GND = bool<> thingy::!GND
        !Vdd = bool<> thingy::!Vdd
        I = e1of2<>? thingy::I
        O = e1of2<>! thingy::O
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? I
          e1of2<>! O
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = thingy<>::!GND (7) @[ supply_low port-alias ] 
        !Vdd = bool^0 = thingy<>::!Vdd (8) @[ supply_high port-alias ] 
        I = process e1of2<>^0 = thingy<>::I (1) @[ port? port-alias ] (
          d = bool^1
            {
              [0] = thingy<>::I.d[0] (1) @[ port-alias ] 
              [1] = thingy<>::I.d[1] (2) @[ port-alias ] 
            }
          t = bool^0 = thingy<>::I.d[1] (2) @[ port-alias ] 
          f = bool^0 = thingy<>::I.d[0] (1) @[ port-alias ] 
          e = bool^0 = thingy<>::I.e (3) @[ port-alias ] 
        )
        O = process e1of2<>^0 = thingy<>::O (2) @[ port! port-alias ] (
          d = bool^1
            {
              [0] = thingy<>::O.d[0] (4) @[ port-alias ] 
              [1] = thingy<>::O.d[1] (5) @[ port-alias ] 
            }
          t = bool^0 = thingy<>::O.d[1] (5) @[ port-alias ] 
          f = bool^0 = thingy<>::O.d[0] (4) @[ port-alias ] 
          e = bool^0 = thingy<>::O.e (6) @[ port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	thingy<>::I @[ port? port-alias ]	e1of2<>
          bool: 2,1,3
        2	thingy<>::O @[ port! port-alias ]	e1of2<>
          bool: 5,4,6
        bool instance pool: (8 ports, 0 local, 0 mapped)
        1	thingy<>::I.d[0] @[ port-alias ]	
        2	thingy<>::I.d[1] @[ port-alias ]	
        3	thingy<>::I.e @[ port-alias ]	
        4	thingy<>::O.d[0] @[ port-alias ]	
        5	thingy<>::O.d[1] @[ port-alias ]	
        6	thingy<>::O.e @[ port-alias ]	
        7	thingy<>::!GND @[ supply_low port-alias ]	
        8	thingy<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: thingy<>::I.d[0] = thingy<>::I.f @[ port-alias ]
        2: thingy<>::I.d[1] = thingy<>::I.t @[ port-alias ]
        4: thingy<>::O.d[0] = thingy<>::O.f @[ port-alias ]
        5: thingy<>::O.d[1] = thingy<>::O.t @[ port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    box = container<> box
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  box = process container<>^0 = box (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    A = process e1of2<>^0 = box.A (2) (
      d = bool^1
        {
          [0] = box.A.d[0] (3) 
          [1] = box.A.d[1] (4) 
        }
      t = bool^0 = box.A.d[1] (4) 
      f = bool^0 = box.A.d[0] (3) 
      e = bool^0 = box.A.e (5) 
    )
    B = process e1of2<>^0 = box.B (3) (
      d = bool^1
        {
          [0] = box.B.d[0] (6) 
          [1] = box.B.d[1] (7) 
        }
      t = bool^0 = box.B.d[1] (7) 
      f = bool^0 = box.B.d[0] (6) 
      e = bool^0 = box.B.e (8) 
    )
  )
  Created state:
  process instance pool: (0 ports, 3 local, 5 mapped)
  1	box	container<>
    process: 2,3
    bool: 3,4,5,6,7,8,1,2
  2	box.A	e1of2<>
    bool: 4,3,5
  3	box.B	e1of2<>
    bool: 7,6,8
  private sub-process index map:
    (1 -> 0)
    (4 -> 5)
  bool instance pool: (0 ports, 8 local, 9 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	box.A.d[0]	
  4	box.A.d[1]	
  5	box.A.e	
  6	box.B.d[0]	
  7	box.B.d[1]	
  8	box.B.e	
  private sub-bool index map:
    (1 -> 0)
    (4 -> 9)
}
