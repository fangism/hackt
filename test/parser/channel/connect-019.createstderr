WARNING: channel senders<>::a lacks connection to a producer.
WARNING: channel z.a lacks connection to a producer.
WARNING: channel z.a lacks connection to a consumer.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	8	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	9	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	chnalias	0	#HEAD#	#TAIL#	20
	17	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	chnalias	0	#HEAD#	#TAIL#	20
	20	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	chnalias	0	#HEAD#	#TAIL#	20
	23	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	footprnt	0	#HEAD#	#TAIL#	329
	26	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	27	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	28	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	footprnt	0	#HEAD#	#TAIL#	323
	32	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    senders = process-definition (defined) senders(
        chan!(bool<>) a
      )
      In definition "senders", we have: {
      Instances:
        a = chan!(bool<>) senders::a
        x = chan(bool<>) senders::x
        y = chan(bool<>) senders::y
      unroll sequence: 
        ports: (
          chan!(bool<>) a
        )
        chan(bool<>) x
        chan(bool<>) y
        a = x;
        a = y;
        x = y;
      footprint: {
        a = channel chan!(bool<>)^0 = senders<>::a (1) 
        x = channel chan(bool<>)^0 = senders<>::a (1) 
        y = channel chan(bool<>)^0 = senders<>::a (1) 
        Created state:
        channel instance pool:
        1	senders<>::a
      }
      }

  Instances:
    z = senders<> z
}

footprint: {
  z = process senders<>^0 = z (1) (
    a = channel chan!(bool<>)^0 = z.a (1) 
  )
  Created state:
  process instance pool:
  1	z
  channel instance pool:
  1	z.a
}
