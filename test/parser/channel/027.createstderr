
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	23	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	42
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	394
	36	##ADDR##	procdefn	0	#HEAD#	#TAIL#	154
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	40	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	41	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	43	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	46	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	69	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	58
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	footprnt	0	#HEAD#	#TAIL#	474
	79	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	81	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	83	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	87	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	89	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	90	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	92	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	94	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	96	##ADDR##	footprnt	0	#HEAD#	#TAIL#	943
	97	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	98	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	99	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> t
        bool<> f
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
        f = bool<> e1of2::f
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> t
          bool<> f
          bool<> e
        )
        d[0] = f;
        d[1] = t;
      spec:
        exclhi(f,t)
      footprint: {
        d = bool^1
          {
            [0] = e1of2<>::f (2) @[ port-alias ] 
            [1] = e1of2<>::t (1) @[ port-alias ] 
          }
        e = bool^0 = e1of2<>::e (3) @[ port-alias ] 
        f = bool^0 = e1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	e1of2<>::t @[ port-alias ]	
        2	e1of2<>::f @[ port-alias ]	
        3	e1of2<>::e @[ port-alias ]	
        bool port aliases:
        1: e1of2<>::t = e1of2<>::d[1] @[ port-alias ]
        2: e1of2<>::f = e1of2<>::d[0] @[ port-alias ]
        resolved specs:
        exclhi(f,t)
      }
      }

    e1of4 = process-definition (defined) e1of4(
        bool<> d[0..3]
        bool<> d0
        bool<> d1
        bool<> d2
        bool<> d3
        bool<> e
      )
      In definition "e1of4", we have: {
      Instances:
        d = bool<> e1of4::d^1
        d0 = bool<> e1of4::d0
        d1 = bool<> e1of4::d1
        d2 = bool<> e1of4::d2
        d3 = bool<> e1of4::d3
        e = bool<> e1of4::e
      unroll sequence: 
        ports: (
          bool<> d[0..3]
          bool<> d0
          bool<> d1
          bool<> d2
          bool<> d3
          bool<> e
        )
        d[0] = d0;
        d[1] = d1;
        d[2] = d2;
        d[3] = d3;
      spec:
        exclhi(d0,d1,d2,d3)
      footprint: {
        d = bool^1
          {
            [0] = e1of4<>::d0 (1) @[ port-alias ] 
            [1] = e1of4<>::d1 (2) @[ port-alias ] 
            [2] = e1of4<>::d2 (3) @[ port-alias ] 
            [3] = e1of4<>::d3 (4) @[ port-alias ] 
          }
        d0 = bool^0 = e1of4<>::d0 (1) @[ port-alias ] 
        d1 = bool^0 = e1of4<>::d1 (2) @[ port-alias ] 
        d2 = bool^0 = e1of4<>::d2 (3) @[ port-alias ] 
        d3 = bool^0 = e1of4<>::d3 (4) @[ port-alias ] 
        e = bool^0 = e1of4<>::e (5) @[ port-alias ] 
        Created state:
        bool instance pool: (5 ports, 0 local, 0 mapped)
        1	e1of4<>::d0 @[ port-alias ]	
        2	e1of4<>::d1 @[ port-alias ]	
        3	e1of4<>::d2 @[ port-alias ]	
        4	e1of4<>::d3 @[ port-alias ]	
        5	e1of4<>::e @[ port-alias ]	
        bool port aliases:
        1: e1of4<>::d0 = e1of4<>::d[0] @[ port-alias ]
        2: e1of4<>::d1 = e1of4<>::d[1] @[ port-alias ]
        3: e1of4<>::d2 = e1of4<>::d[2] @[ port-alias ]
        4: e1of4<>::d3 = e1of4<>::d[3] @[ port-alias ]
        resolved specs:
        exclhi(d0,d1,d2,d3)
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = e1of2<> a
    a4 = e1of4<> a4
    b = e1of2<> b
}

footprint: {
  !GND = bool^0 = !GND (12) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (13) @[ supply_high ] 
  a = process e1of2<>^0 = a (1) (
    d = bool^1
      {
        [0] = a.d[0] (1) 
        [1] = a.d[1] (2) 
      }
    t = bool^0 = a.d[1] (2) 
    f = bool^0 = a.d[0] (1) 
    e = bool^0 = a.e (3) 
  )
  a4 = process e1of4<>^0 = a4 (3) (
    d = bool^1
      {
        [0] = a4.d[0] (7) 
        [1] = a4.d[1] (8) 
        [2] = a4.d[2] (9) 
        [3] = a4.d[3] (10) 
      }
    d0 = bool^0 = a4.d[0] (7) 
    d1 = bool^0 = a4.d[1] (8) 
    d2 = bool^0 = a4.d[2] (9) 
    d3 = bool^0 = a4.d[3] (10) 
    e = bool^0 = a4.e (11) 
  )
  b = process e1of2<>^0 = b (2) (
    d = bool^1
      {
        [0] = b.d[0] (4) 
        [1] = b.d[1] (5) 
      }
    t = bool^0 = b.d[1] (5) 
    f = bool^0 = b.d[0] (4) 
    e = bool^0 = b.e (6) 
  )
  Created state:
  process instance pool: (0 ports, 3 local, 0 mapped)
  1	a	e1of2<>
    bool: 2,1,3
  2	b	e1of2<>
    bool: 5,4,6
  3	a4	e1of4<>
    bool: 7,8,9,10,11
  bool instance pool: (0 ports, 13 local, 0 mapped)
  1	a.d[0]	
  2	a.d[1]	
  3	a.e	
  4	b.d[0]	
  5	b.d[1]	
  6	b.e	
  7	a4.d[0]	
  8	a4.d[1]	
  9	a4.d[2]	
  10	a4.d[3]	
  11	a4.e	
  12	!GND @[ supply_low ]	
  13	!Vdd @[ supply_high ]	
}
