WARNING: process thingy<>::I[1] lacks connection to a consumer.
WARNING: process thingy<>::O[0] lacks connection to a producer.
Warnings found (2) while creating complete type thingy<>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	42
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	footprnt	0	#HEAD#	#TAIL#	394
	34	##ADDR##	procdefn	0	#HEAD#	#TAIL#	135
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	37	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	38	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	39	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	45	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	46	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	48	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	procdird	0	#HEAD#	#TAIL#	13
	58	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	procdird	0	#HEAD#	#TAIL#	13
	62	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1028
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	68	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	69	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	70	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	71	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	76	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	81	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1109
	82	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    e1of2 = process-definition (defined) e1of2(
        bool<> d[0..1]
        bool<> t
        bool<> f
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> e1of2::d^1
        e = bool<> e1of2::e
        f = bool<> e1of2::f
        t = bool<> e1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> t
          bool<> f
          bool<> e
        )
        d[0] = f;
        d[1] = t;
      spec:
        exclhi(f,t)
      footprint: {
        d = bool^1
          {
            [0] = e1of2<>::f (2) @[ port-alias ] 
            [1] = e1of2<>::t (1) @[ port-alias ] 
          }
        e = bool^0 = e1of2<>::e (3) @[ port-alias ] 
        f = bool^0 = e1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = e1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	e1of2<>::t @[ port-alias ]	
        2	e1of2<>::f @[ port-alias ]	
        3	e1of2<>::e @[ port-alias ]	
        bool port aliases:
        1: e1of2<>::t = e1of2<>::d[1] @[ port-alias ]
        2: e1of2<>::f = e1of2<>::d[0] @[ port-alias ]
        resolved specs:
        exclhi(f,t)
      }
      }

    thingy = process-definition (defined) thingy(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? I[0..1]
        e1of2<>! O[0..1]
      )
      In definition "thingy", we have: {
      Instances:
        !GND = bool<> thingy::!GND
        !Vdd = bool<> thingy::!Vdd
        I = e1of2<>? thingy::I^1
        O = e1of2<>! thingy::O^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? I[0..1]
          e1of2<>! O[0..1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        I[0]?
        O[1]!
      footprint: {
        !GND = bool^0 = thingy<>::!GND (13) @[ supply_low port-alias ] 
        !Vdd = bool^0 = thingy<>::!Vdd (14) @[ supply_high port-alias ] 
        I = process e1of2<>^1
          {
            [0] = thingy<>::I[0] (1) @[ port? loc? port-alias ] (
              d = bool^1
                {
                  [0] = thingy<>::I[0].d[0] (1) @[ port-alias ] 
                  [1] = thingy<>::I[0].d[1] (2) @[ port-alias ] 
                }
              t = bool^0 = thingy<>::I[0].d[1] (2) @[ port-alias ] 
              f = bool^0 = thingy<>::I[0].d[0] (1) @[ port-alias ] 
              e = bool^0 = thingy<>::I[0].e (3) @[ port-alias ] 
            )
            [1] = thingy<>::I[1] (2) @[ port? port-alias ] (
              d = bool^1
                {
                  [0] = thingy<>::I[1].d[0] (4) @[ port-alias ] 
                  [1] = thingy<>::I[1].d[1] (5) @[ port-alias ] 
                }
              t = bool^0 = thingy<>::I[1].d[1] (5) @[ port-alias ] 
              f = bool^0 = thingy<>::I[1].d[0] (4) @[ port-alias ] 
              e = bool^0 = thingy<>::I[1].e (6) @[ port-alias ] 
            )
          }
        O = process e1of2<>^1
          {
            [0] = thingy<>::O[0] (3) @[ port! port-alias ] (
              d = bool^1
                {
                  [0] = thingy<>::O[0].d[0] (7) @[ port-alias ] 
                  [1] = thingy<>::O[0].d[1] (8) @[ port-alias ] 
                }
              t = bool^0 = thingy<>::O[0].d[1] (8) @[ port-alias ] 
              f = bool^0 = thingy<>::O[0].d[0] (7) @[ port-alias ] 
              e = bool^0 = thingy<>::O[0].e (9) @[ port-alias ] 
            )
            [1] = thingy<>::O[1] (4) @[ loc! port! port-alias ] (
              d = bool^1
                {
                  [0] = thingy<>::O[1].d[0] (10) @[ port-alias ] 
                  [1] = thingy<>::O[1].d[1] (11) @[ port-alias ] 
                }
              t = bool^0 = thingy<>::O[1].d[1] (11) @[ port-alias ] 
              f = bool^0 = thingy<>::O[1].d[0] (10) @[ port-alias ] 
              e = bool^0 = thingy<>::O[1].e (12) @[ port-alias ] 
            )
          }
        Created state:
        process instance pool: (4 ports, 0 local, 0 mapped)
        1	thingy<>::I[0] @[ port? loc? port-alias ]	e1of2<>
          bool: 2,1,3
        2	thingy<>::I[1] @[ port? port-alias ]	e1of2<>
          bool: 5,4,6
        3	thingy<>::O[0] @[ port! port-alias ]	e1of2<>
          bool: 8,7,9
        4	thingy<>::O[1] @[ loc! port! port-alias ]	e1of2<>
          bool: 11,10,12
        bool instance pool: (14 ports, 0 local, 0 mapped)
        1	thingy<>::I[0].d[0] @[ port-alias ]	
        2	thingy<>::I[0].d[1] @[ port-alias ]	
        3	thingy<>::I[0].e @[ port-alias ]	
        4	thingy<>::I[1].d[0] @[ port-alias ]	
        5	thingy<>::I[1].d[1] @[ port-alias ]	
        6	thingy<>::I[1].e @[ port-alias ]	
        7	thingy<>::O[0].d[0] @[ port-alias ]	
        8	thingy<>::O[0].d[1] @[ port-alias ]	
        9	thingy<>::O[0].e @[ port-alias ]	
        10	thingy<>::O[1].d[0] @[ port-alias ]	
        11	thingy<>::O[1].d[1] @[ port-alias ]	
        12	thingy<>::O[1].e @[ port-alias ]	
        13	thingy<>::!GND @[ supply_low port-alias ]	
        14	thingy<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: thingy<>::I[0].d[0] = thingy<>::I[0].f @[ port-alias ]
        2: thingy<>::I[0].d[1] = thingy<>::I[0].t @[ port-alias ]
        4: thingy<>::I[1].d[0] = thingy<>::I[1].f @[ port-alias ]
        5: thingy<>::I[1].d[1] = thingy<>::I[1].t @[ port-alias ]
        7: thingy<>::O[0].d[0] = thingy<>::O[0].f @[ port-alias ]
        8: thingy<>::O[0].d[1] = thingy<>::O[0].t @[ port-alias ]
        10: thingy<>::O[1].d[0] = thingy<>::O[1].f @[ port-alias ]
        11: thingy<>::O[1].d[1] = thingy<>::O[1].t @[ port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bob = thingy<> bob
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bob = process thingy<>^0 = bob (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    I = process e1of2<>^1
      {
        [0] = bob.I[0] (2) @[ sub? ] (
          d = bool^1
            {
              [0] = bob.I[0].d[0] (3) 
              [1] = bob.I[0].d[1] (4) 
            }
          t = bool^0 = bob.I[0].d[1] (4) 
          f = bool^0 = bob.I[0].d[0] (3) 
          e = bool^0 = bob.I[0].e (5) 
        )
        [1] = bob.I[1] (3) (
          d = bool^1
            {
              [0] = bob.I[1].d[0] (6) 
              [1] = bob.I[1].d[1] (7) 
            }
          t = bool^0 = bob.I[1].d[1] (7) 
          f = bool^0 = bob.I[1].d[0] (6) 
          e = bool^0 = bob.I[1].e (8) 
        )
      }
    O = process e1of2<>^1
      {
        [0] = bob.O[0] (4) (
          d = bool^1
            {
              [0] = bob.O[0].d[0] (9) 
              [1] = bob.O[0].d[1] (10) 
            }
          t = bool^0 = bob.O[0].d[1] (10) 
          f = bool^0 = bob.O[0].d[0] (9) 
          e = bool^0 = bob.O[0].e (11) 
        )
        [1] = bob.O[1] (5) @[ sub! ] (
          d = bool^1
            {
              [0] = bob.O[1].d[0] (12) 
              [1] = bob.O[1].d[1] (13) 
            }
          t = bool^0 = bob.O[1].d[1] (13) 
          f = bool^0 = bob.O[1].d[0] (12) 
          e = bool^0 = bob.O[1].e (14) 
        )
      }
  )
  Created state:
  process instance pool: (0 ports, 5 local, 0 mapped)
  1	bob	thingy<>
    process: 2,3,4,5
    bool: 3,4,5,6,7,8,9,10,11,12,13,14,1,2
  2	bob.I[0] @[ sub? ]	e1of2<>
    bool: 4,3,5
  3	bob.I[1]	e1of2<>
    bool: 7,6,8
  4	bob.O[0]	e1of2<>
    bool: 10,9,11
  5	bob.O[1] @[ sub! ]	e1of2<>
    bool: 13,12,14
  bool instance pool: (0 ports, 14 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	bob.I[0].d[0]	
  4	bob.I[0].d[1]	
  5	bob.I[0].e	
  6	bob.I[1].d[0]	
  7	bob.I[1].d[1]	
  8	bob.I[1].e	
  9	bob.O[0].d[0]	
  10	bob.O[0].d[1]	
  11	bob.O[0].e	
  12	bob.O[1].d[0]	
  13	bob.O[1].d[1]	
  14	bob.O[1].e	
}
