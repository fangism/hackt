
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	31
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	31	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	45	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	49	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	53	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	55	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	56	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	58	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	footprnt	0	#HEAD#	#TAIL#	751
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	61	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> in_expr
        bool<> out
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        in_expr = bool<> foo::in_expr
        out = bool<> foo::out
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> in_expr
          bool<> out
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        in_expr@[atomic]
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
        in_expr = bool^0 = foo<>::in_expr (3) @[ atomic port-alias ] 
        out = bool^0 = foo<>::out (4) @[ port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	foo<>::!GND @[ supply_low port-alias ]	
        2	foo<>::!Vdd @[ supply_high port-alias ]	
        3	foo<>::in_expr @[ atomic port-alias ]	
        4	foo<>::out @[ port-alias ]	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<> bar
    baz = foo<> baz
    goo = foo<> goo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bar = process foo<>^0 = bar (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    in_expr = bool^0 = bar.in_expr (3) @[ atomic ] 
    out = bool^0 = bar.out (4) 
  )
  baz = process foo<>^0 = baz (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    in_expr = bool^0 = bar.in_expr (3) @[ atomic ] 
    out = bool^0 = baz.out (5) 
  )
  goo = process foo<>^0 = goo (3) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    in_expr = bool^0 = goo.in_expr (6) @[ atomic ] 
    out = bool^0 = baz.out (5) 
  )
  Created state:
  process instance pool: (0 ports, 3 local, 0 mapped)
  1	bar	foo<>
    bool: 1,2,3,4
  2	baz	foo<>
    bool: 1,2,3,5
  3	goo	foo<>
    bool: 1,2,6,5
  bool instance pool: (0 ports, 6 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	bar.in_expr @[ atomic ]	
  4	bar.out	
  5	baz.out	
  6	goo.in_expr @[ atomic ]	
}
