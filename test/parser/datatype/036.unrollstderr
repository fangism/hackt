
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	datadefn	0	#HEAD#	#TAIL#	244
	4	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	39
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	8	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	9	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	37
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	36
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	32
	23	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	28	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	31
	29	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	32
	30	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	31	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	32	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	53
	33	##ADDR##	dstrcoll	1	#HEAD#	#TAIL#	96
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	37	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	39
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	40	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	39
	41	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    my_data = user-defined-datatype (defined) my_data
      int<4>
      (
        int<8> x
        bool<> y
      )
      In datatype definition "my_data", we have: {
      Instances:
        fee = bool<> fee
        fi = bool<> fi
        fo = bool<> fo
        fum = bool<> fum with indices: {
          [0..1]
        }

        x = int<8> x
        y = bool<> y
      unroll sequence: 
        int<8> x
        bool<> y
        bool<> fee
        bool<> fi
        bool<> fo
        bool<> fum[0..1]
      footprint: {
        bool^0 fi (instantiated) = ::my_data::fi 
        bool^0 fo (instantiated) = ::my_data::fo 
        bool^0 fee (instantiated) = ::my_data::fee 
        int<8>^0 x (instantiated) = ::my_data::x 
        bool^0 y (instantiated) = ::my_data::y 
        bool^1 fum with indices: {
        }
          unrolled indices: {
            0 = ::my_data::fum[0] 
            1 = ::my_data::fum[1] 
          }
      }
      }

  Instances:
    Z = struct my_data<>^1 Z with indices: {
      [0..1]
    }
      unrolled indices: {
        0 = ::Z[0] (
          int<8>^0 x (instantiated) = ::Z[0].x 
          bool^0 y (instantiated) = ::Z[0].y 
        )
        1 = ::Z[1] (
          int<8>^0 x (instantiated) = ::Z[1].x 
          bool^0 y (instantiated) = ::Z[1].y 
        )
      }
}

