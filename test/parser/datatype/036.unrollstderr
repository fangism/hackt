
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	datadefn	0	#HEAD#	#TAIL#	128
	4	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	8	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	9	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	23	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	footprnt	0	#HEAD#	#TAIL#	407
	28	##ADDR##	dstrplch	0	#HEAD#	#TAIL#	25
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	32	##ADDR##	footprnt	0	#HEAD#	#TAIL#	454
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    my_data = user-defined-datatype (defined) my_data
      int<4>
      (
        int<8> x
        bool<> y
      )
      In datatype definition "my_data", we have: {
      Instances:
        fee = bool<> my_data::fee
        fi = bool<> my_data::fi
        fo = bool<> my_data::fo
        fum = bool<> my_data::fum^1
        x = int<8> my_data::x
        y = bool<> my_data::y
      unroll sequence: 
        int<8> x
        bool<> y
        bool<> fee
        bool<> fi
        bool<> fo
        bool<> fum[0..1]
      footprint: {
        fee = bool^0 = my_data::fee 
        fi = bool^0 = my_data::fi 
        fo = bool^0 = my_data::fo 
        fum = bool^1
          {
            [0] = my_data::fum[0] 
            [1] = my_data::fum[1] 
          }
        x = int<8>^0 = my_data::x 
        y = bool^0 = my_data::y 
      }
      }

  Instances:
    Z = my_data<> Z^1
}

footprint: {
  Z = struct my_data<>^1
    {
      [0] = Z[0] (
        x = int<8>^0 = Z[0].x 
        y = bool^0 = Z[0].y 
      )
      [1] = Z[1] (
        x = int<8>^0 = Z[1].x 
        y = bool^0 = Z[1].y 
      )
    }
}
