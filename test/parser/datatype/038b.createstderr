
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	123
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	19	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	42
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	footprnt	0	#HEAD#	#TAIL#	376
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	45	##ADDR##	footprnt	0	#HEAD#	#TAIL#	434
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    ch1of2 = process-definition (defined) ch1of2(
        bool<> d[0..1]
        bool<> t
        bool<> f
      )
      In definition "ch1of2", we have: {
      Instances:
        d = bool<> ch1of2::d^1
        f = bool<> ch1of2::f
        t = bool<> ch1of2::t
      unroll sequence: 
        ports: (
          bool<> d[0..1]
          bool<> t
          bool<> f
        )
        d[0] = f;
        d[1] = t;
      spec:
        exclhi(f,t)
      footprint: {
        d = bool^1
          {
            [0] = ch1of2<>::f (2) @[ port-alias ] 
            [1] = ch1of2<>::t (1) @[ port-alias ] 
          }
        f = bool^0 = ch1of2<>::f (2) @[ port-alias ] 
        t = bool^0 = ch1of2<>::t (1) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	ch1of2<>::t @[ port-alias ]	
        2	ch1of2<>::f @[ port-alias ]	
        bool port aliases:
        1: ch1of2<>::t = ch1of2<>::d[1] @[ port-alias ]
        2: ch1of2<>::f = ch1of2<>::d[0] @[ port-alias ]
        resolved specs:
        exclhi(f,t)
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    FOO = ch1of2<> FOO
}

footprint: {
  !GND = bool^0 = !GND (3) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (4) @[ supply_high ] 
  FOO = process ch1of2<>^0 = FOO (1) (
    d = bool^1
      {
        [0] = FOO.f (1) 
        [1] = FOO.t (2) 
      }
    t = bool^0 = FOO.t (2) 
    f = bool^0 = FOO.f (1) 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	FOO	ch1of2<>
    bool: 2,1
  bool instance pool: (0 ports, 4 local, 0 mapped)
  1	FOO.f	
  2	FOO.t	
  3	!GND @[ supply_low ]	
  4	!Vdd @[ supply_high ]	
}
