
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	10	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	14	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	footprnt	0	#HEAD#	#TAIL#	342
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	footprnt	0	#HEAD#	#TAIL#	510
	20	##ADDR##	procdefn	0	#HEAD#	#TAIL#	111
	21	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	22	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	30	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	footprnt	0	#HEAD#	#TAIL#	342
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	510
	36	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	40	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	47	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	48	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	54	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	20
	55	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	63	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	67	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	68	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	69	##ADDR##	footprnt	0	#HEAD#	#TAIL#	497
	70	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	71	##ADDR##	procdefn	0	#HEAD#	#TAIL#	112
	72	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	73	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	74	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	75	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	76	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	77	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	78	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	79	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	80	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	81	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	83	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	85	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	87	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	88	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	90	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	91	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	92	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	93	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	96	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	97	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	98	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	101	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	103	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	105	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	106	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	107	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	111	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	112	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	113	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	114	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	115	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	117	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	119	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	120	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	121	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	123	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	125	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	126	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	127	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	128	##ADDR##	footprnt	0	#HEAD#	#TAIL#	3504
	129	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	132	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	133	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	134	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	135	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	136	##ADDR##	footprnt	0	#HEAD#	#TAIL#	288
	137	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    ch1of = process-definition (defined) ch1of<
      pint<> N
      >(
        bool<> d[0..N-1]
      )
      In definition "ch1of", we have: {
      Parameters:
        N = pint<> ch1of::N
      Instances:
        d = bool<> ch1of::d^1
      unroll sequence: 
        bool<> d[0..N-1]
      footprint collection: {
        <4> {
          N = pint^0 value: 4
          d = bool^1
            {
              [0] = ch1of::d[0] (1) 
              [1] = ch1of::d[1] (2) 
              [2] = ch1of::d[2] (3) 
              [3] = ch1of::d[3] (4) 
            }
          Created state:
          bool instance pool:
          1	ch1of::d[0]
          2	ch1of::d[1]
          3	ch1of::d[2]
          4	ch1of::d[3]
        }
        <16> {
          N = pint^0 value: 16
          d = bool^1
            {
              [0] = ch1of::d[0] (1) 
              [1] = ch1of::d[1] (2) 
              [2] = ch1of::d[2] (3) 
              [3] = ch1of::d[3] (4) 
              [4] = ch1of::d[4] (5) 
              [5] = ch1of::d[5] (6) 
              [6] = ch1of::d[6] (7) 
              [7] = ch1of::d[7] (8) 
              [8] = ch1of::d[8] (9) 
              [9] = ch1of::d[9] (10) 
              [10] = ch1of::d[10] (11) 
              [11] = ch1of::d[11] (12) 
              [12] = ch1of::d[12] (13) 
              [13] = ch1of::d[13] (14) 
              [14] = ch1of::d[14] (15) 
              [15] = ch1of::d[15] (16) 
            }
          Created state:
          bool instance pool:
          1	ch1of::d[0]
          2	ch1of::d[1]
          3	ch1of::d[2]
          4	ch1of::d[3]
          5	ch1of::d[4]
          6	ch1of::d[5]
          7	ch1of::d[6]
          8	ch1of::d[7]
          9	ch1of::d[8]
          10	ch1of::d[9]
          11	ch1of::d[10]
          12	ch1of::d[11]
          13	ch1of::d[12]
          14	ch1of::d[13]
          15	ch1of::d[14]
          16	ch1of::d[15]
        }
      }
      }

    ch_1of = process-definition (defined) ch_1of<
      pint<> N
      >(
        bool<> d[0..N-1]
      )
      In definition "ch_1of", we have: {
      Parameters:
        N = pint<> ch_1of::N
      Instances:
        d = bool<> ch_1of::d^1
      unroll sequence: 
        bool<> d[0..N-1]
      footprint collection: {
        <4> {
          N = pint^0 value: 4
          d = bool^1
            {
              [0] = ch_1of::d[0] (1) 
              [1] = ch_1of::d[1] (2) 
              [2] = ch_1of::d[2] (3) 
              [3] = ch_1of::d[3] (4) 
            }
          Created state:
          bool instance pool:
          1	ch_1of::d[0]
          2	ch_1of::d[1]
          3	ch_1of::d[2]
          4	ch_1of::d[3]
        }
        <16> {
          N = pint^0 value: 16
          d = bool^1
            {
              [0] = ch_1of::d[0] (1) 
              [1] = ch_1of::d[1] (2) 
              [2] = ch_1of::d[2] (3) 
              [3] = ch_1of::d[3] (4) 
              [4] = ch_1of::d[4] (5) 
              [5] = ch_1of::d[5] (6) 
              [6] = ch_1of::d[6] (7) 
              [7] = ch_1of::d[7] (8) 
              [8] = ch_1of::d[8] (9) 
              [9] = ch_1of::d[9] (10) 
              [10] = ch_1of::d[10] (11) 
              [11] = ch_1of::d[11] (12) 
              [12] = ch_1of::d[12] (13) 
              [13] = ch_1of::d[13] (14) 
              [14] = ch_1of::d[14] (15) 
              [15] = ch_1of::d[15] (16) 
            }
          Created state:
          bool instance pool:
          1	ch_1of::d[0]
          2	ch_1of::d[1]
          3	ch_1of::d[2]
          4	ch_1of::d[3]
          5	ch_1of::d[4]
          6	ch_1of::d[5]
          7	ch_1of::d[6]
          8	ch_1of::d[7]
          9	ch_1of::d[8]
          10	ch_1of::d[9]
          11	ch_1of::d[10]
          12	ch_1of::d[11]
          13	ch_1of::d[12]
          14	ch_1of::d[13]
          15	ch_1of::d[14]
          16	ch_1of::d[15]
        }
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> a
        bool<> b
        bool<> _out
        bool<> out
      )
      In definition "dcelm", we have: {
      Instances:
        _out = bool<> dcelm::_out
        a = bool<> dcelm::a
        b = bool<> dcelm::b
        out = bool<> dcelm::out
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> _out
        bool<> out
      prs:
        a & b -> _out-
        ~a & ~b -> _out+
        _out -> out-
        ~_out -> out+
      footprint: {
        _out = bool^0 = dcelm::_out (3) 
        a = bool^0 = dcelm::a (1) 
        b = bool^0 = dcelm::b (2) 
        out = bool^0 = dcelm::out (4) 
        Created state:
        bool instance pool:
        1	dcelm::a
        2	dcelm::b
        3	dcelm::_out
        4	dcelm::out
        resolved prs:
        a & b -> _out-
        ~a & ~b -> _out+
        _out -> out-
        ~_out -> out+
      }
      }

    lut = process-definition (defined) lut(
      )
      In definition "lut", we have: {
      Instances:
        _ad = ch_1of<4> lut::_ad^1
        _d = ch_1of<16> lut::_d
        ad = ch1of<4> lut::ad^1
        ce = dcelm<> lut::ce^1
        d = ch1of<16> lut::d
      unroll sequence: 
        ch_1of<4> _ad[0..1]
        ch1of<4> ad[0..1]
        ch1of<16> d
        ch_1of<16> _d
        (;b:[0..15]:
          dcelm<> ce[$b..$b]
          ce[$b] (ad[1].d[$b/4], ad[0].d[$b%4], _d.d[$b], d.d[$b]);
        )
      footprint: {
        _ad = process ch_1of<4>^1
          {
            [0] = lut::_ad[0] (3) (
              d = bool^1
                {
                  [0] = lut::_ad[0].d[0] (33) 
                  [1] = lut::_ad[0].d[1] (34) 
                  [2] = lut::_ad[0].d[2] (35) 
                  [3] = lut::_ad[0].d[3] (36) 
                }
            )
            [1] = lut::_ad[1] (4) (
              d = bool^1
                {
                  [0] = lut::_ad[1].d[0] (37) 
                  [1] = lut::_ad[1].d[1] (38) 
                  [2] = lut::_ad[1].d[2] (39) 
                  [3] = lut::_ad[1].d[3] (40) 
                }
            )
          }
        _d = process ch_1of<16>^0 = lut::_d (2) (
          d = bool^1
            {
              [0] = lut::_d.d[0] (17) 
              [1] = lut::_d.d[1] (18) 
              [2] = lut::_d.d[2] (19) 
              [3] = lut::_d.d[3] (20) 
              [4] = lut::_d.d[4] (21) 
              [5] = lut::_d.d[5] (22) 
              [6] = lut::_d.d[6] (23) 
              [7] = lut::_d.d[7] (24) 
              [8] = lut::_d.d[8] (25) 
              [9] = lut::_d.d[9] (26) 
              [10] = lut::_d.d[10] (27) 
              [11] = lut::_d.d[11] (28) 
              [12] = lut::_d.d[12] (29) 
              [13] = lut::_d.d[13] (30) 
              [14] = lut::_d.d[14] (31) 
              [15] = lut::_d.d[15] (32) 
            }
        )
        ad = process ch1of<4>^1
          {
            [0] = lut::ad[0] (5) (
              d = bool^1
                {
                  [0] = lut::ad[0].d[0] (41) 
                  [1] = lut::ad[0].d[1] (42) 
                  [2] = lut::ad[0].d[2] (43) 
                  [3] = lut::ad[0].d[3] (44) 
                }
            )
            [1] = lut::ad[1] (6) (
              d = bool^1
                {
                  [0] = lut::ad[1].d[0] (45) 
                  [1] = lut::ad[1].d[1] (46) 
                  [2] = lut::ad[1].d[2] (47) 
                  [3] = lut::ad[1].d[3] (48) 
                }
            )
          }
        ce = process dcelm<>^1
          {
            [0] = lut::ce[0] (7) (
              a = bool^0 = lut::ad[1].d[0] (45) 
              b = bool^0 = lut::ad[0].d[0] (41) 
              _out = bool^0 = lut::_d.d[0] (17) 
              out = bool^0 = lut::d.d[0] (1) 
            )
            [1] = lut::ce[1] (8) (
              a = bool^0 = lut::ad[1].d[0] (45) 
              b = bool^0 = lut::ad[0].d[1] (42) 
              _out = bool^0 = lut::_d.d[1] (18) 
              out = bool^0 = lut::d.d[1] (2) 
            )
            [2] = lut::ce[2] (9) (
              a = bool^0 = lut::ad[1].d[0] (45) 
              b = bool^0 = lut::ad[0].d[2] (43) 
              _out = bool^0 = lut::_d.d[2] (19) 
              out = bool^0 = lut::d.d[2] (3) 
            )
            [3] = lut::ce[3] (10) (
              a = bool^0 = lut::ad[1].d[0] (45) 
              b = bool^0 = lut::ad[0].d[3] (44) 
              _out = bool^0 = lut::_d.d[3] (20) 
              out = bool^0 = lut::d.d[3] (4) 
            )
            [4] = lut::ce[4] (11) (
              a = bool^0 = lut::ad[1].d[1] (46) 
              b = bool^0 = lut::ad[0].d[0] (41) 
              _out = bool^0 = lut::_d.d[4] (21) 
              out = bool^0 = lut::d.d[4] (5) 
            )
            [5] = lut::ce[5] (12) (
              a = bool^0 = lut::ad[1].d[1] (46) 
              b = bool^0 = lut::ad[0].d[1] (42) 
              _out = bool^0 = lut::_d.d[5] (22) 
              out = bool^0 = lut::d.d[5] (6) 
            )
            [6] = lut::ce[6] (13) (
              a = bool^0 = lut::ad[1].d[1] (46) 
              b = bool^0 = lut::ad[0].d[2] (43) 
              _out = bool^0 = lut::_d.d[6] (23) 
              out = bool^0 = lut::d.d[6] (7) 
            )
            [7] = lut::ce[7] (14) (
              a = bool^0 = lut::ad[1].d[1] (46) 
              b = bool^0 = lut::ad[0].d[3] (44) 
              _out = bool^0 = lut::_d.d[7] (24) 
              out = bool^0 = lut::d.d[7] (8) 
            )
            [8] = lut::ce[8] (15) (
              a = bool^0 = lut::ad[1].d[2] (47) 
              b = bool^0 = lut::ad[0].d[0] (41) 
              _out = bool^0 = lut::_d.d[8] (25) 
              out = bool^0 = lut::d.d[8] (9) 
            )
            [9] = lut::ce[9] (16) (
              a = bool^0 = lut::ad[1].d[2] (47) 
              b = bool^0 = lut::ad[0].d[1] (42) 
              _out = bool^0 = lut::_d.d[9] (26) 
              out = bool^0 = lut::d.d[9] (10) 
            )
            [10] = lut::ce[10] (17) (
              a = bool^0 = lut::ad[1].d[2] (47) 
              b = bool^0 = lut::ad[0].d[2] (43) 
              _out = bool^0 = lut::_d.d[10] (27) 
              out = bool^0 = lut::d.d[10] (11) 
            )
            [11] = lut::ce[11] (18) (
              a = bool^0 = lut::ad[1].d[2] (47) 
              b = bool^0 = lut::ad[0].d[3] (44) 
              _out = bool^0 = lut::_d.d[11] (28) 
              out = bool^0 = lut::d.d[11] (12) 
            )
            [12] = lut::ce[12] (19) (
              a = bool^0 = lut::ad[1].d[3] (48) 
              b = bool^0 = lut::ad[0].d[0] (41) 
              _out = bool^0 = lut::_d.d[12] (29) 
              out = bool^0 = lut::d.d[12] (13) 
            )
            [13] = lut::ce[13] (20) (
              a = bool^0 = lut::ad[1].d[3] (48) 
              b = bool^0 = lut::ad[0].d[1] (42) 
              _out = bool^0 = lut::_d.d[13] (30) 
              out = bool^0 = lut::d.d[13] (14) 
            )
            [14] = lut::ce[14] (21) (
              a = bool^0 = lut::ad[1].d[3] (48) 
              b = bool^0 = lut::ad[0].d[2] (43) 
              _out = bool^0 = lut::_d.d[14] (31) 
              out = bool^0 = lut::d.d[14] (15) 
            )
            [15] = lut::ce[15] (22) (
              a = bool^0 = lut::ad[1].d[3] (48) 
              b = bool^0 = lut::ad[0].d[3] (44) 
              _out = bool^0 = lut::_d.d[15] (32) 
              out = bool^0 = lut::d.d[15] (16) 
            )
          }
        d = process ch1of<16>^0 = lut::d (1) (
          d = bool^1
            {
              [0] = lut::d.d[0] (1) 
              [1] = lut::d.d[1] (2) 
              [2] = lut::d.d[2] (3) 
              [3] = lut::d.d[3] (4) 
              [4] = lut::d.d[4] (5) 
              [5] = lut::d.d[5] (6) 
              [6] = lut::d.d[6] (7) 
              [7] = lut::d.d[7] (8) 
              [8] = lut::d.d[8] (9) 
              [9] = lut::d.d[9] (10) 
              [10] = lut::d.d[10] (11) 
              [11] = lut::d.d[11] (12) 
              [12] = lut::d.d[12] (13) 
              [13] = lut::d.d[13] (14) 
              [14] = lut::d.d[14] (15) 
              [15] = lut::d.d[15] (16) 
            }
        )
        Created state:
        process instance pool:
        1	lut::d
        2	lut::_d
        3	lut::_ad[0]
        4	lut::_ad[1]
        5	lut::ad[0]
        6	lut::ad[1]
        7	lut::ce[0]
        8	lut::ce[1]
        9	lut::ce[2]
        10	lut::ce[3]
        11	lut::ce[4]
        12	lut::ce[5]
        13	lut::ce[6]
        14	lut::ce[7]
        15	lut::ce[8]
        16	lut::ce[9]
        17	lut::ce[10]
        18	lut::ce[11]
        19	lut::ce[12]
        20	lut::ce[13]
        21	lut::ce[14]
        22	lut::ce[15]
        bool instance pool:
        1	lut::d.d[0]
        2	lut::d.d[1]
        3	lut::d.d[2]
        4	lut::d.d[3]
        5	lut::d.d[4]
        6	lut::d.d[5]
        7	lut::d.d[6]
        8	lut::d.d[7]
        9	lut::d.d[8]
        10	lut::d.d[9]
        11	lut::d.d[10]
        12	lut::d.d[11]
        13	lut::d.d[12]
        14	lut::d.d[13]
        15	lut::d.d[14]
        16	lut::d.d[15]
        17	lut::_d.d[0]
        18	lut::_d.d[1]
        19	lut::_d.d[2]
        20	lut::_d.d[3]
        21	lut::_d.d[4]
        22	lut::_d.d[5]
        23	lut::_d.d[6]
        24	lut::_d.d[7]
        25	lut::_d.d[8]
        26	lut::_d.d[9]
        27	lut::_d.d[10]
        28	lut::_d.d[11]
        29	lut::_d.d[12]
        30	lut::_d.d[13]
        31	lut::_d.d[14]
        32	lut::_d.d[15]
        33	lut::_ad[0].d[0]
        34	lut::_ad[0].d[1]
        35	lut::_ad[0].d[2]
        36	lut::_ad[0].d[3]
        37	lut::_ad[1].d[0]
        38	lut::_ad[1].d[1]
        39	lut::_ad[1].d[2]
        40	lut::_ad[1].d[3]
        41	lut::ad[0].d[0]
        42	lut::ad[0].d[1]
        43	lut::ad[0].d[2]
        44	lut::ad[0].d[3]
        45	lut::ad[1].d[0]
        46	lut::ad[1].d[1]
        47	lut::ad[1].d[2]
        48	lut::ad[1].d[3]
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = l (1) 
  Created state:
  process instance pool:
  1	l
}
