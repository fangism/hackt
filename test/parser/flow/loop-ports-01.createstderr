
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	footprnt	0	#HEAD#	#TAIL#	316
	25	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	26	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	28	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	29	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	34	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	35	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	footprnt	0	#HEAD#	#TAIL#	316
	44	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	45	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	46	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	47	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	48	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	49	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	50	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	53	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	64	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	66	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	67	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	68	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	70	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	72	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	footprnt	0	#HEAD#	#TAIL#	542
	74	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	80	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	88	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	89	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ch1of1 = process-definition (defined) ch1of1(
        bool<> !GND
        bool<> !Vdd
        bool<> d
      )
      In definition "ch1of1", we have: {
      Instances:
        !GND = bool<> ch1of1::!GND
        !Vdd = bool<> ch1of1::!Vdd
        d = bool<> ch1of1::d
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> d
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = ch1of1<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = ch1of1<>::!Vdd (2) @[ supply_high port-alias ] 
        d = bool^0 = ch1of1<>::d (3) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	ch1of1<>::!GND @[ supply_low port-alias ]	
        2	ch1of1<>::!Vdd @[ supply_high port-alias ]	
        3	ch1of1<>::d @[ port-alias ]	
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> !GND
        bool<> !Vdd
        bool<> a
      )
      In definition "dcelm", we have: {
      Instances:
        !GND = bool<> dcelm::!GND
        !Vdd = bool<> dcelm::!Vdd
        a = bool<> dcelm::a
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = dcelm<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = dcelm<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = dcelm<>::a (3) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	dcelm<>::!GND @[ supply_low port-alias ]	
        2	dcelm<>::!Vdd @[ supply_high port-alias ]	
        3	dcelm<>::a @[ port-alias ]	
      }
      }

    lut = process-definition (defined) lut(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "lut", we have: {
      Instances:
        !GND = bool<> lut::!GND
        !Vdd = bool<> lut::!Vdd
        ad = ch1of1<> lut::ad
        ce = dcelm<> lut::ce
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        ch1of1<> ad
        dcelm<> ce
        (;b:[0..0]:
          ce ( , , ad.d);
        )
      footprint: {
        !GND = bool^0 = lut<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = lut<>::!Vdd (2) @[ supply_high port-alias ] 
        ad = process ch1of1<>^0 = lut<>::ad (1) (
          !GND = bool^0 = lut<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = lut<>::!Vdd (2) @[ supply_high port-alias ] 
          d = bool^0 = lut<>::ad.d (3) 
        )
        ce = process dcelm<>^0 = lut<>::ce (2) (
          !GND = bool^0 = lut<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = lut<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = lut<>::ad.d (3) 
        )
        Created state:
        process instance pool: (0 ports, 2 local, 0 mapped)
        1	lut<>::ad	ch1of1<>
          bool: 1,2,3
        2	lut<>::ce	dcelm<>
          bool: 1,2,3
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	lut<>::!GND @[ supply_low port-alias ]	
        2	lut<>::!Vdd @[ supply_high port-alias ]	
        3	lut<>::ad.d	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    l = lut<> l
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  l = process lut<>^0 = l (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 2 mapped)
  1	l	lut<>
    bool: 1,2
  private sub-process index map:
    (1 -> 0)
    (2 -> 2)
  bool instance pool: (0 ports, 2 local, 1 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 1)
}
