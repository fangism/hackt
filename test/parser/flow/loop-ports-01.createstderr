
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	87
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	8	##ADDR##	footprnt	0	#HEAD#	#TAIL#	278
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	86
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	footprnt	0	#HEAD#	#TAIL#	278
	14	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	15	##ADDR##	procdefn	0	#HEAD#	#TAIL#	92
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	18	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	23	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	24	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	28	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	footprnt	0	#HEAD#	#TAIL#	376
	30	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	32	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	footprnt	0	#HEAD#	#TAIL#	292
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ch1of1 = process-definition (defined) ch1of1(
        bool<> d
      )
      In definition "ch1of1", we have: {
      Instances:
        d = bool<> ch1of1::d
      unroll sequence: 
        bool<> d
      footprint: {
        d = bool^0 = ch1of1<>::d (1) 
        Created state:
        bool instance pool:
        1	ch1of1<>::d
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> a
      )
      In definition "dcelm", we have: {
      Instances:
        a = bool<> dcelm::a
      unroll sequence: 
        bool<> a
      footprint: {
        a = bool^0 = dcelm<>::a (1) 
        Created state:
        bool instance pool:
        1	dcelm<>::a
      }
      }

    lut = process-definition (defined) lut(
      )
      In definition "lut", we have: {
      Instances:
        ad = ch1of1<> lut::ad
        ce = dcelm<> lut::ce
      unroll sequence: 
        ch1of1<> ad
        dcelm<> ce
        (;b:[0..0]:
          ce (ad.d);
        )
      footprint: {
        ad = process ch1of1<>^0 = lut<>::ad (1) (
          d = bool^0 = lut<>::ad.d (1) 
        )
        ce = process dcelm<>^0 = lut<>::ce (2) (
          a = bool^0 = lut<>::ad.d (1) 
        )
        Created state:
        process instance pool:
        1	lut<>::ad
        2	lut<>::ce
        bool instance pool:
        1	lut<>::ad.d
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = l (1) 
  Created state:
  process instance pool:
  1	l
}
