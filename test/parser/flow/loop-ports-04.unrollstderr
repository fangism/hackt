
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	214
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	15	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	188
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	18	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	procdefn	0	#HEAD#	#TAIL#	198
	22	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	23	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	31	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	35	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	40
	36	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	38	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	39	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	44	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	47	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	57	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	proccoll	0	#HEAD#	#TAIL#	37
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	48
	65	##ADDR##	proccoll	1	#HEAD#	#TAIL#	488
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	68	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	69	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	70	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	71	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	72	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	73	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	74	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	75	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	76	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	77	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	78	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	79	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	80	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	81	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	82	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	83	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	84	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	85	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	86	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	87	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	88	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	89	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	90	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	91	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	92	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	93	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	94	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	95	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	96	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	97	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	98	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	99	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	100	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	101	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	102	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	103	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	104	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	105	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	106	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	107	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	108	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	109	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	110	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	111	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	112	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	113	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	114	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	116	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	117	##ADDR##	proccoll	0	#HEAD#	#TAIL#	33
	118	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ch1of = process-definition (defined) ch1of<
      pint<> N
      >(
        bool<> d[0..N-1]
      )
      In definition "ch1of", we have: {
      Parameters:
        N = pint<> ch1of::N
      Instances:
        d = bool<> ch1of::d^1
      unroll sequence: 
        bool<> d[0..N-1]
      footprint collection: {
        <4> {
          N = pint^0 value: 4
          d = bool^1
            {
              [0] = ch1of::d[0] 
              [1] = ch1of::d[1] 
              [2] = ch1of::d[2] 
              [3] = ch1of::d[3] 
            }
        }
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "dcelm", we have: {
      Instances:
        a = bool<> dcelm::a
        b = bool<> dcelm::b
        c = bool<> dcelm::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      footprint: {
        a = bool^0 = dcelm::a 
        b = bool^0 = dcelm::b 
        c = bool^0 = dcelm::c 
      }
      }

    lut = process-definition (defined) lut(
      )
      In definition "lut", we have: {
      Instances:
        ad = ch1of<4> lut::ad
        ce = dcelm<> lut::ce^1
      unroll sequence: 
        ch1of<4> ad
        (;b:[0..15]:
          dcelm<> ce[$b..$b]
          ce[$b] (ad.d[$b/4], ad.d[$b%4], );
        )
      footprint: {
        ad = process ch1of<4>^0 = lut::ad (
          d = bool^1
            {
              [0] = lut::ce[8].b 
              [1] = lut::ce[9].b 
              [2] = lut::ce[11].a 
              [3] = lut::ce[15].a 
            }
        )
        ce = process dcelm<>^1
          {
            [0] = lut::ce[0] (
              a = bool^0 = lut::ce[0].b 
              b = bool^0 = lut::ce[1].a 
              c = bool^0 = lut::ce[0].c 
            )
            [1] = lut::ce[1] (
              a = bool^0 = lut::ce[2].a 
              b = bool^0 = lut::ce[4].a 
              c = bool^0 = lut::ce[1].c 
            )
            [2] = lut::ce[2] (
              a = bool^0 = lut::ce[3].a 
              b = bool^0 = lut::ce[6].b 
              c = bool^0 = lut::ce[2].c 
            )
            [3] = lut::ce[3] (
              a = bool^0 = lut::ce[4].b 
              b = bool^0 = lut::ce[7].b 
              c = bool^0 = lut::ce[3].c 
            )
            [4] = lut::ce[4] (
              a = bool^0 = lut::ce[5].a 
              b = bool^0 = lut::ce[8].b 
              c = bool^0 = lut::ce[4].c 
            )
            [5] = lut::ce[5] (
              a = bool^0 = lut::ce[5].b 
              b = bool^0 = lut::ce[6].a 
              c = bool^0 = lut::ce[5].c 
            )
            [6] = lut::ce[6] (
              a = bool^0 = lut::ce[7].a 
              b = bool^0 = lut::ce[8].a 
              c = bool^0 = lut::ce[6].c 
            )
            [7] = lut::ce[7] (
              a = bool^0 = lut::ce[9].b 
              b = bool^0 = lut::ce[11].b 
              c = bool^0 = lut::ce[7].c 
            )
            [8] = lut::ce[8] (
              a = bool^0 = lut::ce[9].a 
              b = bool^0 = lut::ce[12].b 
              c = bool^0 = lut::ce[8].c 
            )
            [9] = lut::ce[9] (
              a = bool^0 = lut::ce[10].a 
              b = bool^0 = lut::ce[13].b 
              c = bool^0 = lut::ce[9].c 
            )
            [10] = lut::ce[10] (
              a = bool^0 = lut::ce[10].b 
              b = bool^0 = lut::ce[11].a 
              c = bool^0 = lut::ce[10].c 
            )
            [11] = lut::ce[11] (
              a = bool^0 = lut::ce[14].b 
              b = bool^0 = lut::ce[12].a 
              c = bool^0 = lut::ce[11].c 
            )
            [12] = lut::ce[12] (
              a = bool^0 = lut::ce[13].a 
              b = bool^0 = lut::ce[12].b 
              c = bool^0 = lut::ce[12].c 
            )
            [13] = lut::ce[13] (
              a = bool^0 = lut::ce[14].a 
              b = bool^0 = lut::ce[13].b 
              c = bool^0 = lut::ce[13].c 
            )
            [14] = lut::ce[14] (
              a = bool^0 = lut::ce[15].a 
              b = bool^0 = lut::ce[14].b 
              c = bool^0 = lut::ce[14].c 
            )
            [15] = lut::ce[15] (
              a = bool^0 = lut::ce[15].b 
              b = bool^0 = lut::ce[15].b 
              c = bool^0 = lut::ce[15].c 
            )
          }
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = l 
}
