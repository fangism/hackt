Warning: node lut<>::ad[0].d[0] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[0].d[1] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[0].d[2] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[0].d[3] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[1].d[0] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[1].d[1] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[1].d[2] has no pull-up nor pull-dn PRS fanin.
Warning: node lut<>::ad[1].d[3] has no pull-up nor pull-dn PRS fanin.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	98
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	11	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	12	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	15	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	footprnt	0	#HEAD#	#TAIL#	354
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	24	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	32	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	38	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	39	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	47	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	51	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	53	##ADDR##	footprnt	0	#HEAD#	#TAIL#	509
	54	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	55	##ADDR##	procdefn	0	#HEAD#	#TAIL#	88
	56	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	57	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	59	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	62	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	63	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	64	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	67	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	69	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	72	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	78	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	84	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	86	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	footprnt	0	#HEAD#	#TAIL#	2776
	92	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	93	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	94	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	96	##ADDR##	footprnt	0	#HEAD#	#TAIL#	292
	97	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ch1of = process-definition (defined) ch1of<
      pint<> N
      >(
        bool<> d[0..N-1]
      )
      In definition "ch1of", we have: {
      Parameters:
        N = pint<> ch1of::N
      Instances:
        d = bool<> ch1of::d^1
      unroll sequence: 
        ports: (
          bool<> d[0..N-1]
        )
      footprint collection: {
        <4> {
          N = pint^0 value: 4
          d = bool^1
            {
              [0] = ch1of<4>::d[0] (1) 
              [1] = ch1of<4>::d[1] (2) 
              [2] = ch1of<4>::d[2] (3) 
              [3] = ch1of<4>::d[3] (4) 
            }
          Created state:
          bool instance pool:
          1	ch1of<4>::d[0]
          2	ch1of<4>::d[1]
          3	ch1of<4>::d[2]
          4	ch1of<4>::d[3]
        }
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> a
        bool<> b
        bool<> _out
        bool<> out
      )
      In definition "dcelm", we have: {
      Instances:
        _out = bool<> dcelm::_out
        a = bool<> dcelm::a
        b = bool<> dcelm::b
        out = bool<> dcelm::out
      unroll sequence: 
        ports: (
          bool<> a
          bool<> b
          bool<> _out
          bool<> out
        )
      prs:
        a & b -> _out-
        ~a & ~b -> _out+
        _out -> out-
        ~_out -> out+
      footprint: {
        _out = bool^0 = dcelm<>::_out (3) 
        a = bool^0 = dcelm<>::a (1) 
        b = bool^0 = dcelm<>::b (2) 
        out = bool^0 = dcelm<>::out (4) 
        Created state:
        bool instance pool:
        1	dcelm<>::a
        2	dcelm<>::b
        3	dcelm<>::_out
        4	dcelm<>::out
        resolved prs:
        a & b -> _out-
        ~a & ~b -> _out+
        _out -> out-
        ~_out -> out+
      }
      }

    lut = process-definition (defined) lut(
      )
      In definition "lut", we have: {
      Instances:
        ad = ch1of<4> lut::ad^1
        ce = dcelm<> lut::ce^1
      unroll sequence: 
        ch1of<4> ad[0..1]
        (;b:[0..15]:
          dcelm<> ce[$b..$b]
          ce[$b] (ad[1].d[$b/4], ad[0].d[$b%4], , );
        )
      footprint: {
        ad = process ch1of<4>^1
          {
            [0] = lut<>::ad[0] (1) (
              d = bool^1
                {
                  [0] = lut<>::ad[0].d[0] (1) 
                  [1] = lut<>::ad[0].d[1] (2) 
                  [2] = lut<>::ad[0].d[2] (3) 
                  [3] = lut<>::ad[0].d[3] (4) 
                }
            )
            [1] = lut<>::ad[1] (2) (
              d = bool^1
                {
                  [0] = lut<>::ad[1].d[0] (5) 
                  [1] = lut<>::ad[1].d[1] (6) 
                  [2] = lut<>::ad[1].d[2] (7) 
                  [3] = lut<>::ad[1].d[3] (8) 
                }
            )
          }
        ce = process dcelm<>^1
          {
            [0] = lut<>::ce[0] (3) (
              a = bool^0 = lut<>::ad[1].d[0] (5) 
              b = bool^0 = lut<>::ad[0].d[0] (1) 
              _out = bool^0 = lut<>::ce[0]._out (9) 
              out = bool^0 = lut<>::ce[0].out (10) 
            )
            [1] = lut<>::ce[1] (4) (
              a = bool^0 = lut<>::ad[1].d[0] (5) 
              b = bool^0 = lut<>::ad[0].d[1] (2) 
              _out = bool^0 = lut<>::ce[1]._out (11) 
              out = bool^0 = lut<>::ce[1].out (12) 
            )
            [2] = lut<>::ce[2] (5) (
              a = bool^0 = lut<>::ad[1].d[0] (5) 
              b = bool^0 = lut<>::ad[0].d[2] (3) 
              _out = bool^0 = lut<>::ce[2]._out (13) 
              out = bool^0 = lut<>::ce[2].out (14) 
            )
            [3] = lut<>::ce[3] (6) (
              a = bool^0 = lut<>::ad[1].d[0] (5) 
              b = bool^0 = lut<>::ad[0].d[3] (4) 
              _out = bool^0 = lut<>::ce[3]._out (15) 
              out = bool^0 = lut<>::ce[3].out (16) 
            )
            [4] = lut<>::ce[4] (7) (
              a = bool^0 = lut<>::ad[1].d[1] (6) 
              b = bool^0 = lut<>::ad[0].d[0] (1) 
              _out = bool^0 = lut<>::ce[4]._out (17) 
              out = bool^0 = lut<>::ce[4].out (18) 
            )
            [5] = lut<>::ce[5] (8) (
              a = bool^0 = lut<>::ad[1].d[1] (6) 
              b = bool^0 = lut<>::ad[0].d[1] (2) 
              _out = bool^0 = lut<>::ce[5]._out (19) 
              out = bool^0 = lut<>::ce[5].out (20) 
            )
            [6] = lut<>::ce[6] (9) (
              a = bool^0 = lut<>::ad[1].d[1] (6) 
              b = bool^0 = lut<>::ad[0].d[2] (3) 
              _out = bool^0 = lut<>::ce[6]._out (21) 
              out = bool^0 = lut<>::ce[6].out (22) 
            )
            [7] = lut<>::ce[7] (10) (
              a = bool^0 = lut<>::ad[1].d[1] (6) 
              b = bool^0 = lut<>::ad[0].d[3] (4) 
              _out = bool^0 = lut<>::ce[7]._out (23) 
              out = bool^0 = lut<>::ce[7].out (24) 
            )
            [8] = lut<>::ce[8] (11) (
              a = bool^0 = lut<>::ad[1].d[2] (7) 
              b = bool^0 = lut<>::ad[0].d[0] (1) 
              _out = bool^0 = lut<>::ce[8]._out (25) 
              out = bool^0 = lut<>::ce[8].out (26) 
            )
            [9] = lut<>::ce[9] (12) (
              a = bool^0 = lut<>::ad[1].d[2] (7) 
              b = bool^0 = lut<>::ad[0].d[1] (2) 
              _out = bool^0 = lut<>::ce[9]._out (27) 
              out = bool^0 = lut<>::ce[9].out (28) 
            )
            [10] = lut<>::ce[10] (13) (
              a = bool^0 = lut<>::ad[1].d[2] (7) 
              b = bool^0 = lut<>::ad[0].d[2] (3) 
              _out = bool^0 = lut<>::ce[10]._out (29) 
              out = bool^0 = lut<>::ce[10].out (30) 
            )
            [11] = lut<>::ce[11] (14) (
              a = bool^0 = lut<>::ad[1].d[2] (7) 
              b = bool^0 = lut<>::ad[0].d[3] (4) 
              _out = bool^0 = lut<>::ce[11]._out (31) 
              out = bool^0 = lut<>::ce[11].out (32) 
            )
            [12] = lut<>::ce[12] (15) (
              a = bool^0 = lut<>::ad[1].d[3] (8) 
              b = bool^0 = lut<>::ad[0].d[0] (1) 
              _out = bool^0 = lut<>::ce[12]._out (33) 
              out = bool^0 = lut<>::ce[12].out (34) 
            )
            [13] = lut<>::ce[13] (16) (
              a = bool^0 = lut<>::ad[1].d[3] (8) 
              b = bool^0 = lut<>::ad[0].d[1] (2) 
              _out = bool^0 = lut<>::ce[13]._out (35) 
              out = bool^0 = lut<>::ce[13].out (36) 
            )
            [14] = lut<>::ce[14] (17) (
              a = bool^0 = lut<>::ad[1].d[3] (8) 
              b = bool^0 = lut<>::ad[0].d[2] (3) 
              _out = bool^0 = lut<>::ce[14]._out (37) 
              out = bool^0 = lut<>::ce[14].out (38) 
            )
            [15] = lut<>::ce[15] (18) (
              a = bool^0 = lut<>::ad[1].d[3] (8) 
              b = bool^0 = lut<>::ad[0].d[3] (4) 
              _out = bool^0 = lut<>::ce[15]._out (39) 
              out = bool^0 = lut<>::ce[15].out (40) 
            )
          }
        Created state:
        process instance pool:
        1	lut<>::ad[0]
        2	lut<>::ad[1]
        3	lut<>::ce[0]
        4	lut<>::ce[1]
        5	lut<>::ce[2]
        6	lut<>::ce[3]
        7	lut<>::ce[4]
        8	lut<>::ce[5]
        9	lut<>::ce[6]
        10	lut<>::ce[7]
        11	lut<>::ce[8]
        12	lut<>::ce[9]
        13	lut<>::ce[10]
        14	lut<>::ce[11]
        15	lut<>::ce[12]
        16	lut<>::ce[13]
        17	lut<>::ce[14]
        18	lut<>::ce[15]
        bool instance pool:
        1	lut<>::ad[0].d[0]
        2	lut<>::ad[0].d[1]
        3	lut<>::ad[0].d[2]
        4	lut<>::ad[0].d[3]
        5	lut<>::ad[1].d[0]
        6	lut<>::ad[1].d[1]
        7	lut<>::ad[1].d[2]
        8	lut<>::ad[1].d[3]
        9	lut<>::ce[0]._out
        10	lut<>::ce[0].out
        11	lut<>::ce[1]._out
        12	lut<>::ce[1].out
        13	lut<>::ce[2]._out
        14	lut<>::ce[2].out
        15	lut<>::ce[3]._out
        16	lut<>::ce[3].out
        17	lut<>::ce[4]._out
        18	lut<>::ce[4].out
        19	lut<>::ce[5]._out
        20	lut<>::ce[5].out
        21	lut<>::ce[6]._out
        22	lut<>::ce[6].out
        23	lut<>::ce[7]._out
        24	lut<>::ce[7].out
        25	lut<>::ce[8]._out
        26	lut<>::ce[8].out
        27	lut<>::ce[9]._out
        28	lut<>::ce[9].out
        29	lut<>::ce[10]._out
        30	lut<>::ce[10].out
        31	lut<>::ce[11]._out
        32	lut<>::ce[11].out
        33	lut<>::ce[12]._out
        34	lut<>::ce[12].out
        35	lut<>::ce[13]._out
        36	lut<>::ce[13].out
        37	lut<>::ce[14]._out
        38	lut<>::ce[14].out
        39	lut<>::ce[15]._out
        40	lut<>::ce[15].out
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = l (1) 
  Created state:
  process instance pool:
  1	l
}
