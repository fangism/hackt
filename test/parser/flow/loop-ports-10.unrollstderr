
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	80
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	9	##ADDR##	footprnt	0	#HEAD#	#TAIL#	378
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	36
	15	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	19	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	20	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	22	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1228
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    ass = process-definition (defined) ass(
        bool<> q[0..2][0..1]
      )
      In definition "ass", we have: {
      Instances:
        q = bool<> ass::q^2
      unroll sequence: 
        bool<> q[0..2][0..1]
      footprint: {
        q = bool^2
          {
            [0][0] = ass::q[0][0] 
            [0][1] = ass::q[0][1] 
            [1][0] = ass::q[1][0] 
            [1][1] = ass::q[1][1] 
            [2][0] = ass::q[2][0] 
            [2][1] = ass::q[2][1] 
          }
      }
      }

  Instances:
    myass = ass<> myass^1
    x = bool<> x^3
}

footprint: {
  myass = process ass<>^1
    {
      [0] = myass[0] (
        q = bool^2
          {
            [0][0] = myass[0].q[0][0] 
            [0][1] = myass[0].q[0][1] 
            [1][0] = myass[0].q[1][0] 
            [1][1] = myass[0].q[1][1] 
            [2][0] = myass[0].q[2][0] 
            [2][1] = myass[0].q[2][1] 
          }
      )
      [1] = myass[1] (
        q = bool^2
          {
            [0][0] = myass[1].q[0][0] 
            [0][1] = myass[1].q[0][1] 
            [1][0] = myass[1].q[1][0] 
            [1][1] = myass[1].q[1][1] 
            [2][0] = myass[1].q[2][0] 
            [2][1] = myass[1].q[2][1] 
          }
      )
      [2] = myass[2] (
        q = bool^2
          {
            [0][0] = myass[2].q[0][0] 
            [0][1] = myass[2].q[0][1] 
            [1][0] = myass[2].q[1][0] 
            [1][1] = myass[2].q[1][1] 
            [2][0] = myass[2].q[2][0] 
            [2][1] = myass[2].q[2][1] 
          }
      )
      [3] = myass[3] (
        q = bool^2
          {
            [0][0] = myass[3].q[0][0] 
            [0][1] = myass[3].q[0][1] 
            [1][0] = myass[3].q[1][0] 
            [1][1] = myass[3].q[1][1] 
            [2][0] = myass[3].q[2][0] 
            [2][1] = myass[3].q[2][1] 
          }
      )
    }
  x = bool^3
    {
      [0][0][0] = myass[0].q[0][0] 
      [0][0][1] = myass[0].q[0][1] 
      [0][1][0] = myass[0].q[1][0] 
      [0][1][1] = myass[0].q[1][1] 
      [0][2][0] = myass[0].q[2][0] 
      [0][2][1] = myass[0].q[2][1] 
      [1][0][0] = myass[1].q[0][0] 
      [1][0][1] = myass[1].q[0][1] 
      [1][1][0] = myass[1].q[1][0] 
      [1][1][1] = myass[1].q[1][1] 
      [1][2][0] = myass[1].q[2][0] 
      [1][2][1] = myass[1].q[2][1] 
      [2][0][0] = myass[2].q[0][0] 
      [2][0][1] = myass[2].q[0][1] 
      [2][1][0] = myass[2].q[1][0] 
      [2][1][1] = myass[2].q[1][1] 
      [2][2][0] = myass[2].q[2][0] 
      [2][2][1] = myass[2].q[2][1] 
      [3][0][0] = myass[3].q[0][0] 
      [3][0][1] = myass[3].q[0][1] 
      [3][1][0] = myass[3].q[1][0] 
      [3][1][1] = myass[3].q[1][1] 
      [3][2][0] = myass[3].q[2][0] 
      [3][2][1] = myass[3].q[2][1] 
    }
}
