
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	176
	4	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	127
	10	##ADDR##	proccoll	1	#HEAD#	#TAIL#	137
	11	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	12	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	16	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	17	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	18	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	19	##ADDR##	dboolcol	3	#HEAD#	#TAIL#	817
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	36
	23	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	24	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	25	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	27	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    ass = process-definition (defined) ass(
        bool<> q with indices: {
        }

      )
      In definition "ass", we have: {
      Instances:
        q = bool<> q with indices: {
        }

      unroll sequence: 
        bool<> q[0..2][0..1]
      footprint: {
        bool^2 q with indices: {
        }
          unrolled indices: {
            [0][0] = ::ass::q[0][0] 
            [0][1] = ::ass::q[0][1] 
            [1][0] = ::ass::q[1][0] 
            [1][1] = ::ass::q[1][1] 
            [2][0] = ::ass::q[2][0] 
            [2][1] = ::ass::q[2][1] 
          }
      }
      }

  Instances:
    myass = process ass<>^1 myass with indices: {
    }
      unrolled indices: {
        0 = ::myass[0] (
          bool^2 q with indices: {
          }
            unrolled indices: {
              [0][0] = ::x[0][0][0] 
              [0][1] = ::x[0][0][1] 
              [1][0] = ::x[0][1][0] 
              [1][1] = ::x[0][1][1] 
              [2][0] = ::x[0][2][0] 
              [2][1] = ::x[0][2][1] 
            }
        )
        1 = ::myass[1] (
          bool^2 q with indices: {
          }
            unrolled indices: {
              [0][0] = ::x[1][0][0] 
              [0][1] = ::x[1][0][1] 
              [1][0] = ::x[1][1][0] 
              [1][1] = ::x[1][1][1] 
              [2][0] = ::x[1][2][0] 
              [2][1] = ::x[1][2][1] 
            }
        )
        2 = ::myass[2] (
          bool^2 q with indices: {
          }
            unrolled indices: {
              [0][0] = ::x[2][0][0] 
              [0][1] = ::x[2][0][1] 
              [1][0] = ::x[2][1][0] 
              [1][1] = ::x[2][1][1] 
              [2][0] = ::x[2][2][0] 
              [2][1] = ::x[2][2][1] 
            }
        )
        3 = ::myass[3] (
          bool^2 q with indices: {
          }
            unrolled indices: {
              [0][0] = ::x[3][0][0] 
              [0][1] = ::x[3][0][1] 
              [1][0] = ::x[3][1][0] 
              [1][1] = ::x[3][1][1] 
              [2][0] = ::x[3][2][0] 
              [2][1] = ::x[3][2][1] 
            }
        )
      }
    x = bool^3 x with indices: {
    }
      unrolled indices: {
        [0][0][0] = ::myass[0].q[0][0] 
        [0][0][1] = ::myass[0].q[0][1] 
        [0][1][0] = ::myass[0].q[1][0] 
        [0][1][1] = ::myass[0].q[1][1] 
        [0][2][0] = ::myass[0].q[2][0] 
        [0][2][1] = ::myass[0].q[2][1] 
        [1][0][0] = ::myass[1].q[0][0] 
        [1][0][1] = ::myass[1].q[0][1] 
        [1][1][0] = ::myass[1].q[1][0] 
        [1][1][1] = ::myass[1].q[1][1] 
        [1][2][0] = ::myass[1].q[2][0] 
        [1][2][1] = ::myass[1].q[2][1] 
        [2][0][0] = ::myass[2].q[0][0] 
        [2][0][1] = ::myass[2].q[0][1] 
        [2][1][0] = ::myass[2].q[1][0] 
        [2][1][1] = ::myass[2].q[1][1] 
        [2][2][0] = ::myass[2].q[2][0] 
        [2][2][1] = ::myass[2].q[2][1] 
        [3][0][0] = ::myass[3].q[0][0] 
        [3][0][1] = ::myass[3].q[0][1] 
        [3][1][0] = ::myass[3].q[1][0] 
        [3][1][1] = ::myass[3].q[1][1] 
        [3][2][0] = ::myass[3].q[2][0] 
        [3][2][1] = ::myass[3].q[2][1] 
      }
}

