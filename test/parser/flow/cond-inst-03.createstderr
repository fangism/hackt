
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	154
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	16	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	condscop	0	#HEAD#	#TAIL#	44
	22	##ADDR##	pireltex	0	#HEAD#	#TAIL#	21
	23	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	30	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	414
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	50	##ADDR##	footprnt	0	#HEAD#	#TAIL#	470
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	52	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    spec_test = process-definition (defined) spec_test<
      pint<> N
      pint<> M
      >(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "spec_test", we have: {
      Parameters:
        M = pint<> spec_test::M
        N = pint<> spec_test::N
      Instances:
        !GND = bool<> spec_test::!GND
        !Vdd = bool<> spec_test::!Vdd
        y = bool<> spec_test::y
        z = bool<> spec_test::z^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        [ N>M ->
        [] else ->
          bool<> z[0..2]
          bool<> y
          y = z[2];
        ]
      footprint collection: {
        <2, 4> {
          !GND = bool^0 = spec_test<2, 4>::!GND (1) 
          !Vdd = bool^0 = spec_test<2, 4>::!Vdd (2) 
          M = pint^0 value: 4
          N = pint^0 value: 2
          y = bool^0 = spec_test<2, 4>::y (3) 
          z = bool^1
            {
              [0] = spec_test<2, 4>::z[0] (4) 
              [1] = spec_test<2, 4>::z[1] (5) 
              [2] = spec_test<2, 4>::y (3) 
            }
          Created state:
          bool instance pool:
          1	spec_test<2, 4>::!GND
          2	spec_test<2, 4>::!Vdd
          3	spec_test<2, 4>::y
          4	spec_test<2, 4>::z[0]
          5	spec_test<2, 4>::z[1]
        }
        <3, 1> {
          !GND = bool^0 = spec_test<3, 1>::!GND (1) 
          !Vdd = bool^0 = spec_test<3, 1>::!Vdd (2) 
          M = pint^0 value: 1
          N = pint^0 value: 3
          Created state:
          bool instance pool:
          1	spec_test<3, 1>::!GND
          2	spec_test<3, 1>::!Vdd
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    A = spec_test<2, 4> A
    B = spec_test<3, 1> B
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  A = process spec_test<2, 4>^0 = A (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
  )
  B = process spec_test<3, 1>^0 = B (2) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
  )
  Created state:
  process instance pool:
  1	A
  2	B
  bool instance pool:
  1	!GND
  2	!Vdd
}
