
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	238
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	15	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	1044
	17	##ADDR##	proccoll	0	#HEAD#	#TAIL#	47
	18	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	procdefn	0	#HEAD#	#TAIL#	274
	21	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	22	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	30	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	34	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	proccoll	1	#HEAD#	#TAIL#	34
	37	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	39	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	41	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	43	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	45	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	47	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	57	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	65	##ADDR##	proccoll	1	#HEAD#	#TAIL#	562
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	70	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	71	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	72	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	73	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	74	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	75	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	76	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	77	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	79	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	80	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	81	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	82	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	83	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	84	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	85	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	86	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	88	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	89	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	90	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	91	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	92	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	93	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	94	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	95	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	96	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	97	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	98	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	99	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	100	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	101	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	102	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	103	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	104	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	105	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	106	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	107	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	109	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	110	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	111	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	112	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	113	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	114	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	115	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	116	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	117	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ch1of = process-definition (defined) ch1of<
      pint<> N
      >(
        bool<> d[0..N-1]
      )
      In definition "ch1of", we have: {
      Parameters:
        N = pint<> N
      Instances:
        d = bool<> d

      unroll sequence: 
        pint<> N
        bool<> d[0..N-1]
      footprint collection: {
        <4> {
          pint^0 N value: ?
          bool^1 d
            unrolled indices: {
              0 = ::ch1of::d[0] (1) 
              1 = ::ch1of::d[1] (2) 
              2 = ::ch1of::d[2] (3) 
              3 = ::ch1of::d[3] (4) 
            }
          bool instance pool:
          1	::ch1of::d[0]
          2	::ch1of::d[1]
          3	::ch1of::d[2]
          4	::ch1of::d[3]
        }
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "dcelm", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
        c = bool<> c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      footprint: {
        bool^0 a (instantiated) = ::dcelm::a (1) 
        bool^0 b (instantiated) = ::dcelm::b (2) 
        bool^0 c (instantiated) = ::dcelm::c (3) 
        bool instance pool:
        1	::dcelm::a
        2	::dcelm::b
        3	::dcelm::c
      }
      }

    lut = process-definition (defined) lut(
      )
      In definition "lut", we have: {
      Instances:
        ad = ch1of<4> ad
        ce = dcelm<> ce

      unroll sequence: 
        ch1of<4> ad
        (;b:[0..15]:
          dcelm<> ce[$b..$b]
          ce[$b] (ad.d[$b/4], ad.d[$b%4], );
        )
      footprint: {
        process ch1of<4>^0 ad (instantiated) = ::lut::ad (1) (
          bool^1 d
            unrolled indices: {
              0 = ::lut::ad.d[0] (1) 
              1 = ::lut::ad.d[1] (2) 
              2 = ::lut::ad.d[2] (3) 
              3 = ::lut::ad.d[3] (4) 
            }
        )
        process dcelm<>^1 ce
          unrolled indices: {
            0 = ::lut::ce[0] (2) (
              bool^0 a (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 b (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 c (instantiated) = ::lut::ce[0].c (5) 
            )
            1 = ::lut::ce[1] (3) (
              bool^0 a (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 b (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 c (instantiated) = ::lut::ce[1].c (6) 
            )
            2 = ::lut::ce[2] (4) (
              bool^0 a (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 b (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 c (instantiated) = ::lut::ce[2].c (7) 
            )
            3 = ::lut::ce[3] (5) (
              bool^0 a (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 b (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 c (instantiated) = ::lut::ce[3].c (8) 
            )
            4 = ::lut::ce[4] (6) (
              bool^0 a (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 b (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 c (instantiated) = ::lut::ce[4].c (9) 
            )
            5 = ::lut::ce[5] (7) (
              bool^0 a (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 b (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 c (instantiated) = ::lut::ce[5].c (10) 
            )
            6 = ::lut::ce[6] (8) (
              bool^0 a (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 b (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 c (instantiated) = ::lut::ce[6].c (11) 
            )
            7 = ::lut::ce[7] (9) (
              bool^0 a (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 b (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 c (instantiated) = ::lut::ce[7].c (12) 
            )
            8 = ::lut::ce[8] (10) (
              bool^0 a (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 b (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 c (instantiated) = ::lut::ce[8].c (13) 
            )
            9 = ::lut::ce[9] (11) (
              bool^0 a (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 b (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 c (instantiated) = ::lut::ce[9].c (14) 
            )
            10 = ::lut::ce[10] (12) (
              bool^0 a (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 b (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 c (instantiated) = ::lut::ce[10].c (15) 
            )
            11 = ::lut::ce[11] (13) (
              bool^0 a (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 b (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 c (instantiated) = ::lut::ce[11].c (16) 
            )
            12 = ::lut::ce[12] (14) (
              bool^0 a (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 b (instantiated) = ::lut::ad.d[0] (1) 
              bool^0 c (instantiated) = ::lut::ce[12].c (17) 
            )
            13 = ::lut::ce[13] (15) (
              bool^0 a (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 b (instantiated) = ::lut::ad.d[1] (2) 
              bool^0 c (instantiated) = ::lut::ce[13].c (18) 
            )
            14 = ::lut::ce[14] (16) (
              bool^0 a (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 b (instantiated) = ::lut::ad.d[2] (3) 
              bool^0 c (instantiated) = ::lut::ce[14].c (19) 
            )
            15 = ::lut::ce[15] (17) (
              bool^0 a (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 b (instantiated) = ::lut::ad.d[3] (4) 
              bool^0 c (instantiated) = ::lut::ce[15].c (20) 
            )
          }
        process instance pool:
        1	::lut::ad
        2	::lut::ce[0]
        3	::lut::ce[1]
        4	::lut::ce[2]
        5	::lut::ce[3]
        6	::lut::ce[4]
        7	::lut::ce[5]
        8	::lut::ce[6]
        9	::lut::ce[7]
        10	::lut::ce[8]
        11	::lut::ce[9]
        12	::lut::ce[10]
        13	::lut::ce[11]
        14	::lut::ce[12]
        15	::lut::ce[13]
        16	::lut::ce[14]
        17	::lut::ce[15]
        bool instance pool:
        1	::lut::ad.d[0]
        2	::lut::ad.d[1]
        3	::lut::ad.d[2]
        4	::lut::ad.d[3]
        5	::lut::ce[0].c
        6	::lut::ce[1].c
        7	::lut::ce[2].c
        8	::lut::ce[3].c
        9	::lut::ce[4].c
        10	::lut::ce[5].c
        11	::lut::ce[6].c
        12	::lut::ce[7].c
        13	::lut::ce[8].c
        14	::lut::ce[9].c
        15	::lut::ce[10].c
        16	::lut::ce[11].c
        17	::lut::ce[12].c
        18	::lut::ce[13].c
        19	::lut::ce[14].c
        20	::lut::ce[15].c
      }
      }

  Instances:
    l = process lut<>^0 l (instantiated) = ::l (1) 
}

Created state:
process instance pool:
1	::l

