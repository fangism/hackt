
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	238
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	15	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	1044
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	18	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	procdefn	0	#HEAD#	#TAIL#	270
	22	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	23	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	31	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	35	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	36	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	38	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	39	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	44	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	47	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	57	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	65	##ADDR##	proccoll	1	#HEAD#	#TAIL#	552
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	70	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	71	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	72	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	73	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	74	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	75	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	76	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	77	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	79	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	80	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	81	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	82	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	83	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	84	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	85	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	86	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	88	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	89	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	90	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	91	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	92	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	93	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	94	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	95	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	96	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	97	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	98	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	99	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	100	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	101	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	102	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	103	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	104	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	105	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	106	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	107	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	109	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	110	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	111	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	112	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	113	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	29
	114	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	116	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	117	##ADDR##	proccoll	0	#HEAD#	#TAIL#	37
	118	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ch1of = process-definition (defined) ch1of<
      pint<> N
      >(
        bool<> d[0..N-1]
      )
      In definition "ch1of", we have: {
      Parameters:
        N = pint<> ch1of::N
      Instances:
        d = bool<> ch1of::d^1
      unroll sequence: 
        bool<> d[0..N-1]
      footprint collection: {
        <4> {
          N = pint^0 value: 4
          d = bool^1
            {
              0 = ch1of::d[0] (1) 
              1 = ch1of::d[1] (2) 
              2 = ch1of::d[2] (3) 
              3 = ch1of::d[3] (4) 
            }
          Created state:
          bool instance pool:
          1	ch1of::d[0]
          2	ch1of::d[1]
          3	ch1of::d[2]
          4	ch1of::d[3]
        }
      }
      }

    dcelm = process-definition (defined) dcelm(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "dcelm", we have: {
      Instances:
        a = bool<> dcelm::a
        b = bool<> dcelm::b
        c = bool<> dcelm::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      footprint: {
        a = bool^0 = dcelm::a (1) 
        b = bool^0 = dcelm::b (2) 
        c = bool^0 = dcelm::c (3) 
        Created state:
        bool instance pool:
        1	dcelm::a
        2	dcelm::b
        3	dcelm::c
      }
      }

    lut = process-definition (defined) lut(
      )
      In definition "lut", we have: {
      Instances:
        ad = ch1of<4> lut::ad
        ce = dcelm<> lut::ce^1
      unroll sequence: 
        ch1of<4> ad
        (;b:[0..15]:
          dcelm<> ce[$b..$b]
          ce[$b] (ad.d[$b/4], ad.d[$b%4], );
        )
      footprint: {
        ad = process ch1of<4>^0 = lut::ad (1) (
          d = bool^1
            {
              0 = lut::ad.d[0] (1) 
              1 = lut::ad.d[1] (2) 
              2 = lut::ad.d[2] (3) 
              3 = lut::ad.d[3] (4) 
            }
        )
        ce = process dcelm<>^1
          {
            0 = lut::ce[0] (2) (
              a = bool^0 = lut::ad.d[0] (1) 
              b = bool^0 = lut::ad.d[0] (1) 
              c = bool^0 = lut::ce[0].c (5) 
            )
            1 = lut::ce[1] (3) (
              a = bool^0 = lut::ad.d[0] (1) 
              b = bool^0 = lut::ad.d[1] (2) 
              c = bool^0 = lut::ce[1].c (6) 
            )
            2 = lut::ce[2] (4) (
              a = bool^0 = lut::ad.d[0] (1) 
              b = bool^0 = lut::ad.d[2] (3) 
              c = bool^0 = lut::ce[2].c (7) 
            )
            3 = lut::ce[3] (5) (
              a = bool^0 = lut::ad.d[0] (1) 
              b = bool^0 = lut::ad.d[3] (4) 
              c = bool^0 = lut::ce[3].c (8) 
            )
            4 = lut::ce[4] (6) (
              a = bool^0 = lut::ad.d[1] (2) 
              b = bool^0 = lut::ad.d[0] (1) 
              c = bool^0 = lut::ce[4].c (9) 
            )
            5 = lut::ce[5] (7) (
              a = bool^0 = lut::ad.d[1] (2) 
              b = bool^0 = lut::ad.d[1] (2) 
              c = bool^0 = lut::ce[5].c (10) 
            )
            6 = lut::ce[6] (8) (
              a = bool^0 = lut::ad.d[1] (2) 
              b = bool^0 = lut::ad.d[2] (3) 
              c = bool^0 = lut::ce[6].c (11) 
            )
            7 = lut::ce[7] (9) (
              a = bool^0 = lut::ad.d[1] (2) 
              b = bool^0 = lut::ad.d[3] (4) 
              c = bool^0 = lut::ce[7].c (12) 
            )
            8 = lut::ce[8] (10) (
              a = bool^0 = lut::ad.d[2] (3) 
              b = bool^0 = lut::ad.d[0] (1) 
              c = bool^0 = lut::ce[8].c (13) 
            )
            9 = lut::ce[9] (11) (
              a = bool^0 = lut::ad.d[2] (3) 
              b = bool^0 = lut::ad.d[1] (2) 
              c = bool^0 = lut::ce[9].c (14) 
            )
            10 = lut::ce[10] (12) (
              a = bool^0 = lut::ad.d[2] (3) 
              b = bool^0 = lut::ad.d[2] (3) 
              c = bool^0 = lut::ce[10].c (15) 
            )
            11 = lut::ce[11] (13) (
              a = bool^0 = lut::ad.d[2] (3) 
              b = bool^0 = lut::ad.d[3] (4) 
              c = bool^0 = lut::ce[11].c (16) 
            )
            12 = lut::ce[12] (14) (
              a = bool^0 = lut::ad.d[3] (4) 
              b = bool^0 = lut::ad.d[0] (1) 
              c = bool^0 = lut::ce[12].c (17) 
            )
            13 = lut::ce[13] (15) (
              a = bool^0 = lut::ad.d[3] (4) 
              b = bool^0 = lut::ad.d[1] (2) 
              c = bool^0 = lut::ce[13].c (18) 
            )
            14 = lut::ce[14] (16) (
              a = bool^0 = lut::ad.d[3] (4) 
              b = bool^0 = lut::ad.d[2] (3) 
              c = bool^0 = lut::ce[14].c (19) 
            )
            15 = lut::ce[15] (17) (
              a = bool^0 = lut::ad.d[3] (4) 
              b = bool^0 = lut::ad.d[3] (4) 
              c = bool^0 = lut::ce[15].c (20) 
            )
          }
        Created state:
        process instance pool:
        1	lut::ad
        2	lut::ce[0]
        3	lut::ce[1]
        4	lut::ce[2]
        5	lut::ce[3]
        6	lut::ce[4]
        7	lut::ce[5]
        8	lut::ce[6]
        9	lut::ce[7]
        10	lut::ce[8]
        11	lut::ce[9]
        12	lut::ce[10]
        13	lut::ce[11]
        14	lut::ce[12]
        15	lut::ce[13]
        16	lut::ce[14]
        17	lut::ce[15]
        bool instance pool:
        1	lut::ad.d[0]
        2	lut::ad.d[1]
        3	lut::ad.d[2]
        4	lut::ad.d[3]
        5	lut::ce[0].c
        6	lut::ce[1].c
        7	lut::ce[2].c
        8	lut::ce[3].c
        9	lut::ce[4].c
        10	lut::ce[5].c
        11	lut::ce[6].c
        12	lut::ce[7].c
        13	lut::ce[8].c
        14	lut::ce[9].c
        15	lut::ce[10].c
        16	lut::ce[11].c
        17	lut::ce[12].c
        18	lut::ce[13].c
        19	lut::ce[14].c
        20	lut::ce[15].c
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = l (1) 
  Created state:
  process instance pool:
  1	l
}
