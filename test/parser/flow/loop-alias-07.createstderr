
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	96
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	8	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	88
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	11	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	procdefn	0	#HEAD#	#TAIL#	85
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	footprnt	0	#HEAD#	#TAIL#	268
	19	##ADDR##	footprnt	0	#HEAD#	#TAIL#	309
	20	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	21	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	24	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	25	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	26	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	27	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	29	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	33	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	footprnt	0	#HEAD#	#TAIL#	560
	37	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	38	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	footprnt	0	#HEAD#	#TAIL#	459
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    lut = process-definition (defined) lut(
        pbitint<> pbint[0..1]
      )
      In definition "lut", we have: {
      Instances:
        p = pbit<> lut::p^1
        pbint = pbitint<> lut::pbint^1
      unroll sequence: 
        pbitint<> pbint[0..1]
        pbit<> p[0..1]
        (;i:[0..1]:
          p[$i] = pbint[$i].pb;
        )
      footprint: {
        p = process pbit<>^1
          {
            [0] = lut::p[0] (1) (
              t = bool^0 = lut::p[0].t (1) 
            )
            [1] = lut::p[1] (2) (
              t = bool^0 = lut::p[1].t (2) 
            )
          }
        pbint = process pbitint<>^1
          {
            [0] = lut::pbint[0] (3) (
              pb = process pbit<>^0 = lut::p[0] (1) (
                t = bool^0 = lut::p[0].t (1) 
              )
            )
            [1] = lut::pbint[1] (4) (
              pb = process pbit<>^0 = lut::p[1] (2) (
                t = bool^0 = lut::p[1].t (2) 
              )
            )
          }
        Created state:
        process instance pool:
        1	lut::p[0]
        2	lut::p[1]
        3	lut::pbint[0]
        4	lut::pbint[1]
        bool instance pool:
        1	lut::p[0].t
        2	lut::p[1].t
      }
      }

    pbit = process-definition (defined) pbit(
        bool<> t
      )
      In definition "pbit", we have: {
      Instances:
        t = bool<> pbit::t
      unroll sequence: 
        bool<> t
      footprint: {
        t = bool^0 = pbit::t (1) 
        Created state:
        bool instance pool:
        1	pbit::t
      }
      }

    pbitint = process-definition (defined) pbitint(
        pbit<> pb
      )
      In definition "pbitint", we have: {
      Instances:
        pb = pbit<> pbitint::pb
      unroll sequence: 
        pbit<> pb
      footprint: {
        pb = process pbit<>^0 = pbitint::pb (1) (
          t = bool^0 = pbitint::pb.t (1) 
        )
        Created state:
        process instance pool:
        1	pbitint::pb
        bool instance pool:
        1	pbitint::pb.t
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = l (1) (
    pbint = process pbitint<>^1
      {
        [0] = l.pbint[0] (2) (
          pb = process pbit<>^0 = l.pbint[0].pb (3) (
            t = bool^0 = l.pbint[0].pb.t (1) 
          )
        )
        [1] = l.pbint[1] (4) (
          pb = process pbit<>^0 = l.pbint[1].pb (5) (
            t = bool^0 = l.pbint[1].pb.t (2) 
          )
        )
      }
  )
  Created state:
  process instance pool:
  1	l
  2	l.pbint[0]
  3	l.pbint[0].pb
  4	l.pbint[1]
  5	l.pbint[1].pb
  bool instance pool:
  1	l.pbint[0].pb.t
  2	l.pbint[1].pb.t
}
