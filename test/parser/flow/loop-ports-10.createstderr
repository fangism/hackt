
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	344
	4	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	127
	10	##ADDR##	proccoll	1	#HEAD#	#TAIL#	137
	11	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	12	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	16	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	17	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	18	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	223
	19	##ADDR##	dboolcol	3	#HEAD#	#TAIL#	529
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	36
	23	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	24	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	25	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	27	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    ass = process-definition (defined) ass(
        bool<> q[0..2][0..1]
      )
      In definition "ass", we have: {
      Instances:
        q = bool<> q

      unroll sequence: 
        bool<> q[0..2][0..1]
      footprint: {
        bool^2 q
          unrolled indices: {
            [0][0] = ::ass::q[0][0] (1) 
            [0][1] = ::ass::q[0][1] (2) 
            [1][0] = ::ass::q[1][0] (3) 
            [1][1] = ::ass::q[1][1] (4) 
            [2][0] = ::ass::q[2][0] (5) 
            [2][1] = ::ass::q[2][1] (6) 
          }
        bool instance pool:
        1	::ass::q[0][0]
        2	::ass::q[0][1]
        3	::ass::q[1][0]
        4	::ass::q[1][1]
        5	::ass::q[2][0]
        6	::ass::q[2][1]
      }
      }

  Instances:
    myass = process ass<>^1 myass
      unrolled indices: {
        0 = ::myass[0] (1) (
          bool^2 q
            unrolled indices: {
              [0][0] = ::x[0][0][0] (1) 
              [0][1] = ::x[0][0][1] (2) 
              [1][0] = ::x[0][1][0] (3) 
              [1][1] = ::x[0][1][1] (4) 
              [2][0] = ::x[0][2][0] (5) 
              [2][1] = ::x[0][2][1] (6) 
            }
        )
        1 = ::myass[1] (2) (
          bool^2 q
            unrolled indices: {
              [0][0] = ::x[1][0][0] (7) 
              [0][1] = ::x[1][0][1] (8) 
              [1][0] = ::x[1][1][0] (9) 
              [1][1] = ::x[1][1][1] (10) 
              [2][0] = ::x[1][2][0] (11) 
              [2][1] = ::x[1][2][1] (12) 
            }
        )
        2 = ::myass[2] (3) (
          bool^2 q
            unrolled indices: {
              [0][0] = ::x[2][0][0] (13) 
              [0][1] = ::x[2][0][1] (14) 
              [1][0] = ::x[2][1][0] (15) 
              [1][1] = ::x[2][1][1] (16) 
              [2][0] = ::x[2][2][0] (17) 
              [2][1] = ::x[2][2][1] (18) 
            }
        )
        3 = ::myass[3] (4) (
          bool^2 q
            unrolled indices: {
              [0][0] = ::x[3][0][0] (19) 
              [0][1] = ::x[3][0][1] (20) 
              [1][0] = ::x[3][1][0] (21) 
              [1][1] = ::x[3][1][1] (22) 
              [2][0] = ::x[3][2][0] (23) 
              [2][1] = ::x[3][2][1] (24) 
            }
        )
      }
    x = bool^3 x
      unrolled indices: {
        [0][0][0] = ::x[0][0][0] (1) 
        [0][0][1] = ::x[0][0][1] (2) 
        [0][1][0] = ::x[0][1][0] (3) 
        [0][1][1] = ::x[0][1][1] (4) 
        [0][2][0] = ::x[0][2][0] (5) 
        [0][2][1] = ::x[0][2][1] (6) 
        [1][0][0] = ::x[1][0][0] (7) 
        [1][0][1] = ::x[1][0][1] (8) 
        [1][1][0] = ::x[1][1][0] (9) 
        [1][1][1] = ::x[1][1][1] (10) 
        [1][2][0] = ::x[1][2][0] (11) 
        [1][2][1] = ::x[1][2][1] (12) 
        [2][0][0] = ::x[2][0][0] (13) 
        [2][0][1] = ::x[2][0][1] (14) 
        [2][1][0] = ::x[2][1][0] (15) 
        [2][1][1] = ::x[2][1][1] (16) 
        [2][2][0] = ::x[2][2][0] (17) 
        [2][2][1] = ::x[2][2][1] (18) 
        [3][0][0] = ::x[3][0][0] (19) 
        [3][0][1] = ::x[3][0][1] (20) 
        [3][1][0] = ::x[3][1][0] (21) 
        [3][1][1] = ::x[3][1][1] (22) 
        [3][2][0] = ::x[3][2][0] (23) 
        [3][2][1] = ::x[3][2][1] (24) 
      }
}

Created state:
process instance pool:
1	::myass[0]
2	::myass[1]
3	::myass[2]
4	::myass[3]
bool instance pool:
1	::x[0][0][0]
2	::x[0][0][1]
3	::x[0][1][0]
4	::x[0][1][1]
5	::x[0][2][0]
6	::x[0][2][1]
7	::x[1][0][0]
8	::x[1][0][1]
9	::x[1][1][0]
10	::x[1][1][1]
11	::x[1][2][0]
12	::x[1][2][1]
13	::x[2][0][0]
14	::x[2][0][1]
15	::x[2][1][0]
16	::x[2][1][1]
17	::x[2][2][0]
18	::x[2][2][1]
19	::x[3][0][0]
20	::x[3][0][1]
21	::x[3][1][0]
22	::x[3][1][1]
23	::x[3][2][0]
24	::x[3][2][1]

