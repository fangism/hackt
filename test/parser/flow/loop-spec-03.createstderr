
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	106
	5	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	6	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	20
	13	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	16	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	SPCdloop	0	#HEAD#	#TAIL#	24
	24	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	25	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	28	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	37
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	footprnt	0	#HEAD#	#TAIL#	493
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	footprnt	0	#HEAD#	#TAIL#	407
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    spec_test = process-definition (defined) spec_test<
      pint<> N
      >(
        bool<> x[0..N-1][0..2-1]
      )
      In definition "spec_test", we have: {
      Parameters:
        N = pint<> spec_test::N
      Instances:
        x = bool<> spec_test::x^2
      unroll sequence: 
        ports: (
          bool<> x[0..N-1][0..2-1]
        )
      spec:
        (:i:[0..N-1]:
          mk_exclhi(x[$i])
        )
      footprint collection: {
        <3> {
          N = pint^0 value: 3
          x = bool^2
            {
              [0][0] = spec_test<3>::x[0][0] (1) 
              [0][1] = spec_test<3>::x[0][1] (2) 
              [1][0] = spec_test<3>::x[1][0] (3) 
              [1][1] = spec_test<3>::x[1][1] (4) 
              [2][0] = spec_test<3>::x[2][0] (5) 
              [2][1] = spec_test<3>::x[2][1] (6) 
            }
          Created state:
          bool instance pool:
          1	spec_test<3>::x[0][0]
          2	spec_test<3>::x[0][1]
          3	spec_test<3>::x[1][0]
          4	spec_test<3>::x[1][1]
          5	spec_test<3>::x[2][0]
          6	spec_test<3>::x[2][1]
          resolved specs:
          mk_exclhi({x[0][0],x[0][1]})
          mk_exclhi({x[1][0],x[1][1]})
          mk_exclhi({x[2][0],x[2][1]})
        }
      }
      }

  Instances:
    X = spec_test<3> X
}

footprint: {
  X = process spec_test<3>^0 = X (1) (
    x = bool^2
      {
        [0][0] = X.x[0][0] (1) 
        [0][1] = X.x[0][1] (2) 
        [1][0] = X.x[1][0] (3) 
        [1][1] = X.x[1][1] (4) 
        [2][0] = X.x[2][0] (5) 
        [2][1] = X.x[2][1] (6) 
      }
  )
  Created state:
  process instance pool:
  1	X
  bool instance pool:
  1	X.x[0][0]
  2	X.x[0][1]
  3	X.x[1][0]
  4	X.x[1][1]
  5	X.x[2][0]
  6	X.x[2][1]
}
