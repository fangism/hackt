
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	184
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	5	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	181
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	13	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	14	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	15	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	196
	18	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	19	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	24	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	25	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	26	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	29	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	31	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	35	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	38	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	39	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	40	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	41	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	42	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	44	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	45	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    lut = process-definition (defined) lut(
        pbitint<> pbint
      )
      In definition "lut", we have: {
      Instances:
        p = pbit<> ::lut::p
        pbint = pbitint<> ::lut::pbint
      unroll sequence: 
        pbitint<> pbint
        pbit<> p
        (;i:[0..0]:
          p.t = pbint.pb.t;
        )
      footprint: {
        p = process pbit<>^0 = ::lut::p (
          t = bool^0 = ::lut::pbint.pb.t 
        )
        pbint = process pbitint<>^0 = ::lut::pbint (
          pb = process pbit<>^0 = ::lut::pbint.pb (
            t = bool^0 = ::lut::pbint.pb.t 
          )
        )
      }
      }

    pbit = process-definition (defined) pbit(
        bool<> t
      )
      In definition "pbit", we have: {
      Instances:
        t = bool<> ::pbit::t
      unroll sequence: 
        bool<> t
      footprint: {
        t = bool^0 = ::pbit::t 
      }
      }

    pbitint = process-definition (defined) pbitint(
        pbit<> pb
      )
      In definition "pbitint", we have: {
      Instances:
        pb = pbit<> ::pbitint::pb
      unroll sequence: 
        pbit<> pb
      footprint: {
        pb = process pbit<>^0 = ::pbitint::pb (
          t = bool^0 = ::pbitint::pb.t 
        )
      }
      }

  Instances:
    l = lut<> l
}

footprint: {
  l = process lut<>^0 = ::l (
    pbint = process pbitint<>^0 = ::l.pbint (
      pb = process pbit<>^0 = ::l.pbint.pb (
        t = bool^0 = ::l.pbint.pb.t 
      )
    )
  )
}
