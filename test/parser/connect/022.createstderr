
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	proccoll	2	#HEAD#	#TAIL#	701
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	137
	5	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	6	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	9	##ADDR##	proccoll	1	#HEAD#	#TAIL#	200
	10	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	11	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	14	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	15	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    barf = process-definition (defined) barf(
      )
      In definition "barf", we have: {
      unroll sequence: 
      footprint: {
      }
      }

  Instances:
    bag = process barf<>^1 bag
      unrolled indices: {
        0 = ::sack[4][0] (1) 
        1 = ::sack[4][1] (2) 
        2 = ::sack[4][2] (3) 
        3 = ::sack[4][3] (4) 
        4 = ::sack[4][4] (5) 
      }
    sack = process barf<>^2 sack
      unrolled indices: {
        [0][0] = ::sack[0][0] (6) 
        [0][1] = ::sack[0][1] (7) 
        [0][2] = ::sack[0][2] (8) 
        [0][3] = ::sack[0][3] (9) 
        [0][4] = ::sack[0][4] (10) 
        [1][0] = ::sack[1][0] (11) 
        [1][1] = ::sack[1][1] (12) 
        [1][2] = ::sack[1][2] (13) 
        [1][3] = ::sack[1][3] (14) 
        [1][4] = ::sack[1][4] (15) 
        [2][0] = ::sack[2][0] (16) 
        [2][1] = ::sack[2][1] (17) 
        [2][2] = ::sack[2][2] (18) 
        [2][3] = ::sack[2][3] (19) 
        [2][4] = ::sack[2][4] (20) 
        [3][0] = ::sack[3][0] (21) 
        [3][1] = ::sack[3][1] (22) 
        [3][2] = ::sack[3][2] (23) 
        [3][3] = ::sack[3][3] (24) 
        [3][4] = ::sack[3][4] (25) 
        [4][0] = ::bag[0] (1) 
        [4][1] = ::bag[1] (2) 
        [4][2] = ::bag[2] (3) 
        [4][3] = ::bag[3] (4) 
        [4][4] = ::bag[4] (5) 
      }
}

Created state:
process instance pool:
1	::sack[4][0]
2	::sack[4][1]
3	::sack[4][2]
4	::sack[4][3]
5	::sack[4][4]
6	::sack[0][0]
7	::sack[0][1]
8	::sack[0][2]
9	::sack[0][3]
10	::sack[0][4]
11	::sack[1][0]
12	::sack[1][1]
13	::sack[1][2]
14	::sack[1][3]
15	::sack[1][4]
16	::sack[2][0]
17	::sack[2][1]
18	::sack[2][2]
19	::sack[2][3]
20	::sack[2][4]
21	::sack[3][0]
22	::sack[3][1]
23	::sack[3][2]
24	::sack[3][3]
25	::sack[3][4]

