
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	132
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	11	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	14	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	15	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	16	##ADDR##	footprnt	0	#HEAD#	#TAIL#	282
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	footprnt	0	#HEAD#	#TAIL#	282
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	footprnt	0	#HEAD#	#TAIL#	282
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	footprnt	0	#HEAD#	#TAIL#	358
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	footprnt	0	#HEAD#	#TAIL#	358
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	40	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	41	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	48	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	49	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	458
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	54	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> X
      pint<> Y
      >(
        foo<bar::X> a
        foo<bar::Y> b
      )
      In definition "bar", we have: {
      Parameters:
        X = pint<> bar::X
        Y = pint<> bar::Y
      Instances:
        a = foo<bar::X> bar::a
        b = foo<bar::Y> bar::b
      unroll sequence: 
        ports: (
          foo<bar::X> a
          foo<bar::Y> b
        )
      footprint collection: {
        <2, 3> {
          X = pint^0 value: 2
          Y = pint^0 value: 3
          a = process foo<2>^0 = bar<2, 3>::a (1) 
          b = process foo<3>^0 = bar<2, 3>::b (2) 
          Created state:
          process instance pool:
          1	bar<2, 3>::a
          2	bar<2, 3>::b
        }
        <3, 4> {
          X = pint^0 value: 3
          Y = pint^0 value: 4
          a = process foo<3>^0 = bar<3, 4>::a (1) 
          b = process foo<4>^0 = bar<3, 4>::b (2) 
          Created state:
          process instance pool:
          1	bar<3, 4>::a
          2	bar<3, 4>::b
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> A
      >(
      )
      In definition "foo", we have: {
      Parameters:
        A = pint<> foo::A
      unroll sequence: 
      footprint collection: {
        <2> {
          A = pint^0 value: 2
          Created state:
        }
        <3> {
          A = pint^0 value: 3
          Created state:
        }
        <4> {
          A = pint^0 value: 4
          Created state:
        }
      }
      }

  Instances:
    w = bar<2, 3> w
    z = bar<3, 4> z
}

footprint: {
  w = process bar<2, 3>^0 = w (1) (
    a = process foo<2>^0 = w.a (2) 
    b = process foo<3>^0 = w.b (3) 
  )
  z = process bar<3, 4>^0 = z (4) (
    a = process foo<3>^0 = w.b (3) 
    b = process foo<4>^0 = z.b (5) 
  )
  Created state:
  process instance pool:
  1	w
  2	w.a
  3	w.b
  4	z
  5	z.b
}
