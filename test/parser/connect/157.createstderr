
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	20	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	24	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	37	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	52
	38	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	39	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	40	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	41	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	44	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	52	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	53	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	54	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	57	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	66	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	70	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	72	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	37
	73	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	37
	79	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	81	##ADDR##	footprnt	0	#HEAD#	#TAIL#	782
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	86	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	87	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	88	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	89	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	footprnt	0	#HEAD#	#TAIL#	298
	93	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	94	##ADDR##	procdefn	0	#HEAD#	#TAIL#	172
	95	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	96	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	97	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	98	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	99	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	100	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	101	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	102	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	103	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	104	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	106	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	107	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	108	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	109	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	110	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	111	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	112	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	113	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	114	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	115	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	116	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	117	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	119	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	120	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	121	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	122	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	123	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	124	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	125	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	126	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	127	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	128	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	129	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	130	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	133	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	134	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	135	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	136	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	137	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	140	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	141	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	142	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	143	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	146	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	147	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	148	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	149	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	150	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	151	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	152	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	153	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	155	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	156	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	157	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	159	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	160	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	161	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	162	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	163	##ADDR##	footprnt	0	#HEAD#	#TAIL#	829
	164	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	165	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	166	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	167	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	168	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	169	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	170	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	171	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	172	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	173	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	174	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	175	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	176	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	177	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	178	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	179	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	180	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	181	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	182	##ADDR##	footprnt	0	#HEAD#	#TAIL#	669
	183	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    celem = process-definition (defined) celem<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> i[0..N-1]
        bool<> o
      )
      In definition "celem", we have: {
      Parameters:
        N = pint<> celem::N
      Instances:
        !GND = bool<> celem::!GND
        !Vdd = bool<> celem::!Vdd
        _o = bool<> celem::_o
        i = bool<> celem::i^1
        o = bool<> celem::o
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> i[0..N-1]
          bool<> o
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> _o
      prs:
        {
        (&:j:[0..N-1]: i[$j]) -> _o-
        (&:j:[0..N-1]: ~i[$j]) -> _o+
        _o -> o-
        ~_o -> o+
        o -> _o- [iskeeper=1]
        ~o -> _o+ [iskeeper=1]
        }
      footprint collection: {
        <2> {
          !GND = bool^0 = celem<2>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = celem<2>::!Vdd (2) @[ supply_high port-alias ] 
          N = pint^0 value: 2
          _o = bool^0 = celem<2>::_o (6) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
          i = bool^1
            {
              [0] = celem<2>::i[0] (4) @[ port-alias loc-FO- loc-FO+ ] 
              [1] = celem<2>::i[1] (5) @[ port-alias loc-FO- loc-FO+ ] 
            }
          o = bool^0 = celem<2>::o (3) @[ port-alias loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
          Created state:
          bool instance pool: (5 ports, 1 local, 0 mapped)
          1	celem<2>::!GND @[ supply_low port-alias ]	
          2	celem<2>::!Vdd @[ supply_high port-alias ]	
          3	celem<2>::o @[ port-alias loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
          4	celem<2>::i[0] @[ port-alias loc-FO- loc-FO+ ]	
          5	celem<2>::i[1] @[ port-alias loc-FO- loc-FO+ ]	
          6	celem<2>::_o @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
          resolved prs:
          i[0] & i[1] -> _o-
          ~i[0] & ~i[1] -> _o+
          _o -> o-
          ~_o -> o+
          o -> _o- [iskeeper=1]
          ~o -> _o+ [iskeeper=1]
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..5 none none : 2, 1 | 2, 1
        }
      }
      }

    e1of1 = process-definition (defined) e1of1(
        bool<> d
        bool<> e
      )
      In definition "e1of1", we have: {
      Instances:
        d = bool<> e1of1::d
        e = bool<> e1of1::e
      unroll sequence: 
        ports: (
          bool<> d
          bool<> e
        )
      footprint: {
        d = bool^0 = e1of1<>::d (1) @[ port-alias ] 
        e = bool^0 = e1of1<>::e (2) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	e1of1<>::d @[ port-alias ]	
        2	e1of1<>::e @[ port-alias ]	
      }
      }

    wire_copy_e1of1 = process-definition (defined) wire_copy_e1of1<
      pint<> C
      >(
        bool<> !GND
        bool<> !Vdd
        e1of1<> I
        e1of1<> O[0..C-1]
      )
      In definition "wire_copy_e1of1", we have: {
      Parameters:
        C = pint<> wire_copy_e1of1::C
      Instances:
        !GND = bool<> wire_copy_e1of1::!GND
        !Vdd = bool<> wire_copy_e1of1::!Vdd
        I = e1of1<> wire_copy_e1of1::I
        O = e1of1<> wire_copy_e1of1::O^1
        c = celem<wire_copy_e1of1::C> wire_copy_e1of1::c
        re = bool<> wire_copy_e1of1::re^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of1<> I
          e1of1<> O[0..C-1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> re[0..C-1]
        (;i:[0..C-1]:
          O[$i].e = re[$i];
          O[$i].d = I.d;
        )
        celem<wire_copy_e1of1::C> c
        c ( , , re, I.e);
      footprint collection: {
        <2> {
          !GND = bool^0 = wire_copy_e1of1<2>::!GND (3) @[ supply_low port-alias ] 
          !Vdd = bool^0 = wire_copy_e1of1<2>::!Vdd (4) @[ supply_high port-alias ] 
          C = pint^0 value: 2
          I = process e1of1<>^0 = wire_copy_e1of1<2>::I (1) @[ port-alias ] (
            d = bool^0 = wire_copy_e1of1<2>::I.d (1) @[ port-alias ] 
            e = bool^0 = wire_copy_e1of1<2>::I.e (2) @[ port-alias sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
          )
          O = process e1of1<>^1
            {
              [0] = wire_copy_e1of1<2>::O[0] (2) @[ port-alias ] (
                d = bool^0 = wire_copy_e1of1<2>::I.d (1) @[ port-alias ] 
                e = bool^0 = wire_copy_e1of1<2>::re[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
              )
              [1] = wire_copy_e1of1<2>::O[1] (3) @[ port-alias ] (
                d = bool^0 = wire_copy_e1of1<2>::I.d (1) @[ port-alias ] 
                e = bool^0 = wire_copy_e1of1<2>::re[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
              )
            }
          c = process celem<2>^0 = wire_copy_e1of1<2>::c (4) (
            !GND = bool^0 = wire_copy_e1of1<2>::!GND (3) @[ supply_low port-alias ] 
            !Vdd = bool^0 = wire_copy_e1of1<2>::!Vdd (4) @[ supply_high port-alias ] 
            i = bool^1
              {
                [0] = wire_copy_e1of1<2>::re[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
                [1] = wire_copy_e1of1<2>::re[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
              }
            o = bool^0 = wire_copy_e1of1<2>::I.e (2) @[ port-alias sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
          )
          re = bool^1
            {
              [0] = wire_copy_e1of1<2>::re[0] (5) @[ port-alias sub-FO- sub-FO+ ] 
              [1] = wire_copy_e1of1<2>::re[1] (6) @[ port-alias sub-FO- sub-FO+ ] 
            }
          Created state:
          process instance pool: (3 ports, 1 local, 0 mapped)
          1	wire_copy_e1of1<2>::I @[ port-alias ]	e1of1<>
            bool: 1,2
          2	wire_copy_e1of1<2>::O[0] @[ port-alias ]	e1of1<>
            bool: 1,5
          3	wire_copy_e1of1<2>::O[1] @[ port-alias ]	e1of1<>
            bool: 1,6
          4	wire_copy_e1of1<2>::c	celem<2>
            bool: 3,4,2,5,6
          bool instance pool: (6 ports, 0 local, 1 mapped)
          1	wire_copy_e1of1<2>::I.d @[ port-alias ]	
          2	wire_copy_e1of1<2>::I.e @[ port-alias sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
          3	wire_copy_e1of1<2>::!GND @[ supply_low port-alias ]	
          4	wire_copy_e1of1<2>::!Vdd @[ supply_high port-alias ]	
          5	wire_copy_e1of1<2>::re[0] @[ port-alias sub-FO- sub-FO+ ]	
          6	wire_copy_e1of1<2>::re[1] @[ port-alias sub-FO- sub-FO+ ]	
          private sub-bool index map:
            (4 -> 0)
            (5 -> 1)
          bool port aliases:
          1: wire_copy_e1of1<2>::I.d = wire_copy_e1of1<2>::O[0].d = wire_copy_e1of1<2>::O[1].d @[ port-alias ]
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = wire_copy_e1of1<2> foo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  foo = process wire_copy_e1of1<2>^0 = foo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    I = process e1of1<>^0 = foo.I (2) (
      d = bool^0 = foo.I.d (3) 
      e = bool^0 = foo.I.e (4) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
    )
    O = process e1of1<>^1
      {
        [0] = foo.O[0] (3) (
          d = bool^0 = foo.I.d (3) 
          e = bool^0 = foo.O[0].e (5) @[ sub-FO- sub-FO+ ] 
        )
        [1] = foo.O[1] (4) (
          d = bool^0 = foo.I.d (3) 
          e = bool^0 = foo.O[1].e (6) @[ sub-FO- sub-FO+ ] 
        )
      }
  )
  Created state:
  process instance pool: (0 ports, 4 local, 1 mapped)
  1	foo	wire_copy_e1of1<2>
    process: 2,3,4
    bool: 3,4,1,2,5,6
  2	foo.I	e1of1<>
    bool: 3,4
  3	foo.O[0]	e1of1<>
    bool: 3,5
  4	foo.O[1]	e1of1<>
    bool: 3,6
  private sub-process index map:
    (1 -> 0)
    (5 -> 1)
  bool instance pool: (0 ports, 6 local, 1 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	foo.I.d	
  4	foo.I.e @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
  5	foo.O[0].e @[ sub-FO- sub-FO+ ]	
  6	foo.O[1].e @[ sub-FO- sub-FO+ ]	
  private sub-bool index map:
    (1 -> 0)
    (5 -> 1)
}
