
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	56
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procdefn	0	#HEAD#	#TAIL#	205
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	19	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	34	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	38	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	42	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	43	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	45	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	48	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	51	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	54	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	62	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	63	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	65	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	66	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	67	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	68	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	69	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	70	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	71	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	72	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	73	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	74	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	25
	75	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	76	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	77	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  8 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    wrap = process-definition (defined) wrap(
        bool<> a
        bool<> b
      )
      In definition "wrap", we have: {
      Instances:
        a = bool<> wrap::a
        b = bool<> wrap::b
      unroll sequence: 
        bool<> a
        bool<> b
      footprint: {
        a = bool^0 = wrap::a (1) 
        b = bool^0 = wrap::b (2) 
        Created state:
        bool instance pool:
        1	wrap::a
        2	wrap::b
      }
      }

  Instances:
    j = wrap<> j
    k = wrap<> k
    l = wrap<> l
    m = wrap<> m
    w = bool<> w
    x = bool<> x
    y = bool<> y
    z = bool<> z
}

footprint: {
  j = process wrap<>^0 = j (1) (
    a = bool^0 = w (1) 
    b = bool^0 = w (1) 
  )
  k = process wrap<>^0 = j (1) (
    a = bool^0 = w (1) 
    b = bool^0 = w (1) 
  )
  l = process wrap<>^0 = l (2) (
    a = bool^0 = w (1) 
    b = bool^0 = w (1) 
  )
  m = process wrap<>^0 = m (3) (
    a = bool^0 = w (1) 
    b = bool^0 = w (1) 
  )
  w = bool^0 = w (1) 
  x = bool^0 = w (1) 
  y = bool^0 = w (1) 
  z = bool^0 = w (1) 
  Created state:
  process instance pool:
  1	j
  2	l
  3	m
  bool instance pool:
  1	w
}
