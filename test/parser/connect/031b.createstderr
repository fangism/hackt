
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	46
	4	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datadefn	0	#HEAD#	#TAIL#	52
	7	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	9	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	45
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	15	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	16	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	19	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	procdefn	0	#HEAD#	#TAIL#	111
	23	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	24	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	25	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	26	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	27	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	28	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	29	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	30	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	32	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	33	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	36	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	37	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	57
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	44	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	45	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	46	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	47	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	48	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	49	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	50	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	52	##ADDR##	mdintref	0	#HEAD#	#TAIL#	24
	53	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    basket = process-definition (defined) basket(
        egg<> egg_array
      )
      In definition "basket", we have: {
        egg_array = egg<> egg_array
        footprint: {
          process egg<>^0 egg_array (instantiated) = ::basket::egg_array (1) (
            int<32>^0 yolk (instantiated) = ::basket::egg_array.yolk (1) 
          )
          process instance pool:
          1	::basket::egg_array
          int instance pool:
          1	::basket::egg_array.yolk
        }
      }

    bundle = process-definition (defined) bundle(
        basket<> c
      )
      In definition "bundle", we have: {
        c = basket<> c
        footprint: {
          process basket<>^0 c (instantiated) = ::bundle::c (1) (
            process egg<>^0 egg_array (instantiated) = ::bundle::c.egg_array (2) (
              int<32>^0 yolk (instantiated) = ::bundle::c.egg_array.yolk (1) 
            )
          )
          process instance pool:
          1	::bundle::c
          2	::bundle::c.egg_array
          int instance pool:
          1	::bundle::c.egg_array.yolk
        }
      }

    egg = process-definition (defined) egg(
        int<32> yolk
      )
      In definition "egg", we have: {
        yolk = int<32> yolk
        footprint: {
          int<32>^0 yolk (instantiated) = ::egg::yolk (1) 
          int instance pool:
          1	::egg::yolk
        }
      }

  Instances:
    count = int<32>^0 count (instantiated) = ::golden.yolk (1) 
    golden = process egg<>^0 golden (instantiated) = ::load.c.egg_array (3) (
      int<32>^0 yolk (instantiated) = ::count (1) 
    )
    load = process bundle<>^0 load (instantiated) = ::load (1) (
      process basket<>^0 c (instantiated) = ::load.c (2) (
        process egg<>^0 egg_array (instantiated) = ::golden (3) (
          int<32>^0 yolk (instantiated) = ::load.c.egg_array.yolk (1) 
        )
      )
    )
}

Created state:
process instance pool:
1	::load
2	::load.c
3	::load.c.egg_array
int instance pool:
1	::golden.yolk

