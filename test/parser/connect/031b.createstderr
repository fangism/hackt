
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	33
	9	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	17	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	19	##ADDR##	dintplch	0	#HEAD#	#TAIL#	28
	20	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	26	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	footprnt	0	#HEAD#	#TAIL#	316
	38	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	footprnt	0	#HEAD#	#TAIL#	416
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	48	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	49	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	50	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	51	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	52	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	53	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	54	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	55	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	58	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	63	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	footprnt	0	#HEAD#	#TAIL#	511
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	68	##ADDR##	dintplch	0	#HEAD#	#TAIL#	29
	69	##ADDR##	procplch	0	#HEAD#	#TAIL#	30
	70	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	71	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	72	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	79	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	84	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	85	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	86	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	87	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	88	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	89	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	93	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	95	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	mdintref	0	#HEAD#	#TAIL#	20
	97	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	footprnt	0	#HEAD#	#TAIL#	742
	99	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	100	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    basket = process-definition (defined) basket(
        bool<> !GND
        bool<> !Vdd
        egg<> egg_array
      )
      In definition "basket", we have: {
      Instances:
        !GND = bool<> basket::!GND
        !Vdd = bool<> basket::!Vdd
        egg_array = egg<> basket::egg_array
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          egg<> egg_array
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = basket<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = basket<>::!Vdd (2) @[ supply_high port-alias ] 
        egg_array = process egg<>^0 = basket<>::egg_array (1) @[ port-alias ] (
          !GND = bool^0 = basket<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = basket<>::!Vdd (2) @[ supply_high port-alias ] 
          yolk = int<32>^0 = basket<>::egg_array.yolk (1) 
        )
        Created state:
        process instance pool: (1 ports, 0 local, 0 mapped)
        1	basket<>::egg_array @[ port-alias ]	egg<>
          int: 1
          bool: 1,2
        int instance pool: (1 ports, 0 local, 0 mapped)
        1	basket<>::egg_array.yolk	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	basket<>::!GND @[ supply_low port-alias ]	
        2	basket<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: basket<>::egg_array.!GND = basket<>::!GND @[ supply_low port-alias ]
        2: basket<>::egg_array.!Vdd = basket<>::!Vdd @[ supply_high port-alias ]
      }
      }

    bundle = process-definition (defined) bundle(
        bool<> !GND
        bool<> !Vdd
        basket<> c
      )
      In definition "bundle", we have: {
      Instances:
        !GND = bool<> bundle::!GND
        !Vdd = bool<> bundle::!Vdd
        c = basket<> bundle::c
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          basket<> c
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
        c = process basket<>^0 = bundle<>::c (1) @[ port-alias ] (
          !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
          egg_array = process egg<>^0 = bundle<>::c.egg_array (2) @[ port-alias ] (
            !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
            yolk = int<32>^0 = bundle<>::c.egg_array.yolk (1) 
          )
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	bundle<>::c @[ port-alias ]	basket<>
          process: 2
          int: 1
          bool: 1,2
        2	bundle<>::c.egg_array @[ port-alias ]	egg<>
          int: 1
          bool: 1,2
        int instance pool: (1 ports, 0 local, 0 mapped)
        1	bundle<>::c.egg_array.yolk	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	bundle<>::!GND @[ supply_low port-alias ]	
        2	bundle<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: bundle<>::c.!GND = bundle<>::c.egg_array.!GND = bundle<>::!GND @[ supply_low port-alias ]
        2: bundle<>::c.!Vdd = bundle<>::c.egg_array.!Vdd = bundle<>::!Vdd @[ supply_high port-alias ]
      }
      }

    egg = process-definition (defined) egg(
        bool<> !GND
        bool<> !Vdd
        int<32> yolk
      )
      In definition "egg", we have: {
      Instances:
        !GND = bool<> egg::!GND
        !Vdd = bool<> egg::!Vdd
        yolk = int<32> egg::yolk
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          int<32> yolk
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = egg<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = egg<>::!Vdd (2) @[ supply_high port-alias ] 
        yolk = int<32>^0 = egg<>::yolk (1) 
        Created state:
        int instance pool: (1 ports, 0 local, 0 mapped)
        1	egg<>::yolk	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	egg<>::!GND @[ supply_low port-alias ]	
        2	egg<>::!Vdd @[ supply_high port-alias ]	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    count = int<32> count
    golden = egg<> golden
    load = bundle<> load
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  count = int<32>^0 = count (1) 
  golden = process egg<>^0 = golden (3) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    yolk = int<32>^0 = count (1) 
  )
  load = process bundle<>^0 = load (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    c = process basket<>^0 = load.c (2) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      egg_array = process egg<>^0 = golden (3) (
        !GND = bool^0 = !GND (1) @[ supply_low ] 
        !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
        yolk = int<32>^0 = count (1) 
      )
    )
  )
  Created state:
  process instance pool: (0 ports, 3 local, 0 mapped)
  1	load	bundle<>
    process: 2,3
    int: 1
    bool: 1,2
  2	load.c	basket<>
    process: 3
    int: 1
    bool: 1,2
  3	golden	egg<>
    int: 1
    bool: 1,2
  int instance pool: (0 ports, 1 local, 0 mapped)
  1	count	
  bool instance pool: (0 ports, 2 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
}
