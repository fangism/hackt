
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	164
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	9	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	12	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	13	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	proccoll	1	#HEAD#	#TAIL#	87
	16	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	17	##ADDR##	proccoll	1	#HEAD#	#TAIL#	111
	18	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
      )
      In definition "foo", we have: {
      unroll sequence: 
      footprint: {
      }
      }

  Instances:
    bar = foo<> bar^1
    blah = foo<> blah^1
}

footprint: {
  bar = process foo<>^1
    {
      0 = blah[0] 
      1 = blah[1] 
      2 = blah[2] 
    }
  blah = process foo<>^1
    {
      0 = blah[0] 
      1 = blah[1] 
      2 = blah[2] 
    }
}
