
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	198
	4	##ADDR##	chancoll	0	#HEAD#	#TAIL#	47
	5	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	uchntprf	0	#HEAD#	#TAIL#	21
	7	##ADDR##	chandefn	0	#HEAD#	#TAIL#	82
	8	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	12	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	18	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	chancoll	0	#HEAD#	#TAIL#	47
	22	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	chancoll	0	#HEAD#	#TAIL#	47
	24	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	25	##ADDR##	chancoll	0	#HEAD#	#TAIL#	47
	26	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	27	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	28	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	chancoll	0	#HEAD#	#TAIL#	51
	32	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	33	##ADDR##	chancoll	0	#HEAD#	#TAIL#	51
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	35	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	36	##ADDR##	uchntprf	0	#HEAD#	#TAIL#	21
	37	##ADDR##	chancoll	0	#HEAD#	#TAIL#	51
	38	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	39	##ADDR##	chancoll	0	#HEAD#	#TAIL#	51
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	41	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	42	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	43	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    chan_proc = process-definition (defined) chan_proc(
        fake_chan<> L
        fake_chan<> R
      )
      In definition "chan_proc", we have: {
      Instances:
        L = fake_chan<> L
        R = fake_chan<> R
      unroll sequence: 
        fake_chan<> L
        fake_chan<> R
      footprint: {
        channel fake_chan<>^0 L (instantiated) = ::chan_proc::L 
        channel fake_chan<>^0 R (instantiated) = ::chan_proc::R 
      }
      }

    fake_chan = user-def-chan (defined) fake_chan
      chan(
        int<32>
      )
      (
        int<32> d
        bool<> e
      )
      In channel definition "fake_chan", we have: {
      Instances:
        d = int<32> d
        e = bool<> e
      unroll sequence: 
        int<32> d
        bool<> e
      }

  Instances:
    P = process chan_proc<>^0 P (instantiated) = ::P (
      channel fake_chan<>^0 L (instantiated) = ::X 
      channel fake_chan<>^0 R (instantiated) = ::Y 
    )
    X = channel fake_chan<>^0 X (instantiated) = ::P.L 
    Y = channel fake_chan<>^0 Y (instantiated) = ::P.R 
}

