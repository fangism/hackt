
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	42
	4	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	7	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	9	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	procdefn	0	#HEAD#	#TAIL#	363
	15	##ADDR##	proccoll	1	#HEAD#	#TAIL#	33
	16	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	procdefn	0	#HEAD#	#TAIL#	235
	19	##ADDR##	proccoll	1	#HEAD#	#TAIL#	41
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	procdefn	0	#HEAD#	#TAIL#	168
	23	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	24	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	25	##ADDR##	proccoll	1	#HEAD#	#TAIL#	91
	26	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	27	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	28	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	29	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	proccoll	1	#HEAD#	#TAIL#	83
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	32	##ADDR##	proccoll	1	#HEAD#	#TAIL#	91
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	34	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	35	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	36	##ADDR##	proccoll	1	#HEAD#	#TAIL#	91
	37	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	39	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	40	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	43	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	45	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	49	##ADDR##	proccoll	1	#HEAD#	#TAIL#	83
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	proccoll	1	#HEAD#	#TAIL#	95
	52	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	54	##ADDR##	proccoll	1	#HEAD#	#TAIL#	91
	55	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	56	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	57	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	58	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	59	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	60	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	63	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	68	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	mdintref	0	#HEAD#	#TAIL#	20
	70	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    basket = process-definition (defined) basket(
        egg<> egg_array

      )
      In definition "basket", we have: {
      Instances:
        egg_array = egg<> egg_array

      unroll sequence: 
        egg<> egg_array[0..1]
      footprint: {
        process egg<>^1 egg_array
          unrolled indices: {
            0 = ::basket::egg_array[0] (1) (
              int<32>^0 yolk (instantiated) = ::basket::egg_array[0].yolk (1) 
            )
            1 = ::basket::egg_array[1] (2) (
              int<32>^0 yolk (instantiated) = ::basket::egg_array[1].yolk (2) 
            )
          }
        process instance pool:
        1	::basket::egg_array[0]
        2	::basket::egg_array[1]
        int instance pool:
        1	::basket::egg_array[0].yolk
        2	::basket::egg_array[1].yolk
      }
      }

    bundle = process-definition (defined) bundle(
        basket<> c

      )
      In definition "bundle", we have: {
      Instances:
        c = basket<> c

      unroll sequence: 
        basket<> c[0..1]
      footprint: {
        process basket<>^1 c
          unrolled indices: {
            0 = ::bundle::c[0] (1) (
              process egg<>^1 egg_array
                unrolled indices: {
                  0 = ::bundle::c[0].egg_array[0] (2) (
                    int<32>^0 yolk (instantiated) = ::bundle::c[0].egg_array[0].yolk (1) 
                  )
                  1 = ::bundle::c[0].egg_array[1] (3) (
                    int<32>^0 yolk (instantiated) = ::bundle::c[0].egg_array[1].yolk (2) 
                  )
                }
            )
            1 = ::bundle::c[1] (4) (
              process egg<>^1 egg_array
                unrolled indices: {
                  0 = ::bundle::c[1].egg_array[0] (5) (
                    int<32>^0 yolk (instantiated) = ::bundle::c[1].egg_array[0].yolk (3) 
                  )
                  1 = ::bundle::c[1].egg_array[1] (6) (
                    int<32>^0 yolk (instantiated) = ::bundle::c[1].egg_array[1].yolk (4) 
                  )
                }
            )
          }
        process instance pool:
        1	::bundle::c[0]
        2	::bundle::c[0].egg_array[0]
        3	::bundle::c[0].egg_array[1]
        4	::bundle::c[1]
        5	::bundle::c[1].egg_array[0]
        6	::bundle::c[1].egg_array[1]
        int instance pool:
        1	::bundle::c[0].egg_array[0].yolk
        2	::bundle::c[0].egg_array[1].yolk
        3	::bundle::c[1].egg_array[0].yolk
        4	::bundle::c[1].egg_array[1].yolk
      }
      }

    egg = process-definition (defined) egg(
        int<32> yolk
      )
      In definition "egg", we have: {
      Instances:
        yolk = int<32> yolk
      unroll sequence: 
        int<32> yolk
      footprint: {
        int<32>^0 yolk (instantiated) = ::egg::yolk (1) 
        int instance pool:
        1	::egg::yolk
      }
      }

  Instances:
    count = int<32>^0 count (instantiated) = ::load.c[0].egg_array[1].yolk (1) 
    golden = process egg<>^0 golden (instantiated) = ::golden (1) (
      int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[1].yolk (1) 
    )
    load = process bundle<>^0 load (instantiated) = ::load (2) (
      process basket<>^1 c
        unrolled indices: {
          0 = ::load.c[0] (3) (
            process egg<>^1 egg_array
              unrolled indices: {
                0 = ::load.c[0].egg_array[0] (4) (
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[0].yolk (2) 
                )
                1 = ::golden (1) (
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[1].yolk (1) 
                )
              }
          )
          1 = ::load.c[1] (5) (
            process egg<>^1 egg_array
              unrolled indices: {
                0 = ::load.c[1].egg_array[0] (6) (
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[0].yolk (3) 
                )
                1 = ::load.c[1].egg_array[1] (7) (
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[1].yolk (4) 
                )
              }
          )
        }
    )
}

Created state:
process instance pool:
1	::golden
2	::load
3	::load.c[0]
4	::load.c[0].egg_array[0]
5	::load.c[1]
6	::load.c[1].egg_array[0]
7	::load.c[1].egg_array[1]
int instance pool:
1	::count
2	::load.c[0].egg_array[0].yolk
3	::load.c[1].egg_array[0].yolk
4	::load.c[1].egg_array[1].yolk

