
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	33
	9	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	17	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	19	##ADDR##	dintplch	0	#HEAD#	#TAIL#	28
	20	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	26	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	footprnt	0	#HEAD#	#TAIL#	316
	38	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	39	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	footprnt	0	#HEAD#	#TAIL#	537
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	50	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	51	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	52	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	53	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	56	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	60	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	67	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	953
	69	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	70	##ADDR##	dintplch	0	#HEAD#	#TAIL#	29
	71	##ADDR##	procplch	0	#HEAD#	#TAIL#	30
	72	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	75	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	80	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	85	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	86	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	88	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	89	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	90	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	91	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	92	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	93	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	98	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	99	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	100	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	101	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	mdintref	0	#HEAD#	#TAIL#	20
	103	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1172
	105	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	106	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    basket = process-definition (defined) basket(
        bool<> !GND
        bool<> !Vdd
        egg<> egg_array[0..1]
      )
      In definition "basket", we have: {
      Instances:
        !GND = bool<> basket::!GND
        !Vdd = bool<> basket::!Vdd
        egg_array = egg<> basket::egg_array^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          egg<> egg_array[0..1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = basket<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = basket<>::!Vdd (2) @[ supply_high port-alias ] 
        egg_array = process egg<>^1
          {
            [0] = basket<>::egg_array[0] (1) @[ port-alias ] (
              !GND = bool^0 = basket<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = basket<>::!Vdd (2) @[ supply_high port-alias ] 
              yolk = int<32>^0 = basket<>::egg_array[0].yolk (1) 
            )
            [1] = basket<>::egg_array[1] (2) @[ port-alias ] (
              !GND = bool^0 = basket<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = basket<>::!Vdd (2) @[ supply_high port-alias ] 
              yolk = int<32>^0 = basket<>::egg_array[1].yolk (2) 
            )
          }
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	basket<>::egg_array[0] @[ port-alias ]	egg<>
          int: 1
          bool: 1,2
        2	basket<>::egg_array[1] @[ port-alias ]	egg<>
          int: 2
          bool: 1,2
        int instance pool: (2 ports, 0 local, 0 mapped)
        1	basket<>::egg_array[0].yolk	
        2	basket<>::egg_array[1].yolk	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	basket<>::!GND @[ supply_low port-alias ]	
        2	basket<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: basket<>::egg_array[0].!GND = basket<>::egg_array[1].!GND = basket<>::!GND @[ supply_low port-alias ]
        2: basket<>::egg_array[0].!Vdd = basket<>::egg_array[1].!Vdd = basket<>::!Vdd @[ supply_high port-alias ]
      }
      }

    bundle = process-definition (defined) bundle(
        bool<> !GND
        bool<> !Vdd
        basket<> c[0..1]
      )
      In definition "bundle", we have: {
      Instances:
        !GND = bool<> bundle::!GND
        !Vdd = bool<> bundle::!Vdd
        c = basket<> bundle::c^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          basket<> c[0..1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
        c = process basket<>^1
          {
            [0] = bundle<>::c[0] (1) @[ port-alias ] (
              !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
              egg_array = process egg<>^1
                {
                  [0] = bundle<>::c[0].egg_array[0] (2) @[ port-alias ] (
                    !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
                    !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
                    yolk = int<32>^0 = bundle<>::c[0].egg_array[0].yolk (1) 
                  )
                  [1] = bundle<>::c[0].egg_array[1] (3) @[ port-alias ] (
                    !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
                    !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
                    yolk = int<32>^0 = bundle<>::c[0].egg_array[1].yolk (2) 
                  )
                }
            )
            [1] = bundle<>::c[1] (4) @[ port-alias ] (
              !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
              egg_array = process egg<>^1
                {
                  [0] = bundle<>::c[1].egg_array[0] (5) @[ port-alias ] (
                    !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
                    !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
                    yolk = int<32>^0 = bundle<>::c[1].egg_array[0].yolk (3) 
                  )
                  [1] = bundle<>::c[1].egg_array[1] (6) @[ port-alias ] (
                    !GND = bool^0 = bundle<>::!GND (1) @[ supply_low port-alias ] 
                    !Vdd = bool^0 = bundle<>::!Vdd (2) @[ supply_high port-alias ] 
                    yolk = int<32>^0 = bundle<>::c[1].egg_array[1].yolk (4) 
                  )
                }
            )
          }
        Created state:
        process instance pool: (6 ports, 0 local, 0 mapped)
        1	bundle<>::c[0] @[ port-alias ]	basket<>
          process: 2,3
          int: 1,2
          bool: 1,2
        2	bundle<>::c[0].egg_array[0] @[ port-alias ]	egg<>
          int: 1
          bool: 1,2
        3	bundle<>::c[0].egg_array[1] @[ port-alias ]	egg<>
          int: 2
          bool: 1,2
        4	bundle<>::c[1] @[ port-alias ]	basket<>
          process: 5,6
          int: 3,4
          bool: 1,2
        5	bundle<>::c[1].egg_array[0] @[ port-alias ]	egg<>
          int: 3
          bool: 1,2
        6	bundle<>::c[1].egg_array[1] @[ port-alias ]	egg<>
          int: 4
          bool: 1,2
        int instance pool: (4 ports, 0 local, 0 mapped)
        1	bundle<>::c[0].egg_array[0].yolk	
        2	bundle<>::c[0].egg_array[1].yolk	
        3	bundle<>::c[1].egg_array[0].yolk	
        4	bundle<>::c[1].egg_array[1].yolk	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	bundle<>::!GND @[ supply_low port-alias ]	
        2	bundle<>::!Vdd @[ supply_high port-alias ]	
        bool port aliases:
        1: bundle<>::c[0].!GND = bundle<>::c[0].egg_array[0].!GND = bundle<>::c[0].egg_array[1].!GND = bundle<>::c[1].!GND = bundle<>::c[1].egg_array[0].!GND = bundle<>::c[1].egg_array[1].!GND = bundle<>::!GND @[ supply_low port-alias ]
        2: bundle<>::c[0].!Vdd = bundle<>::c[0].egg_array[0].!Vdd = bundle<>::c[0].egg_array[1].!Vdd = bundle<>::c[1].!Vdd = bundle<>::c[1].egg_array[0].!Vdd = bundle<>::c[1].egg_array[1].!Vdd = bundle<>::!Vdd @[ supply_high port-alias ]
      }
      }

    egg = process-definition (defined) egg(
        bool<> !GND
        bool<> !Vdd
        int<32> yolk
      )
      In definition "egg", we have: {
      Instances:
        !GND = bool<> egg::!GND
        !Vdd = bool<> egg::!Vdd
        yolk = int<32> egg::yolk
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          int<32> yolk
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = egg<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = egg<>::!Vdd (2) @[ supply_high port-alias ] 
        yolk = int<32>^0 = egg<>::yolk (1) 
        Created state:
        int instance pool: (1 ports, 0 local, 0 mapped)
        1	egg<>::yolk	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	egg<>::!GND @[ supply_low port-alias ]	
        2	egg<>::!Vdd @[ supply_high port-alias ]	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    count = int<32> count
    golden = egg<> golden
    load = bundle<> load
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  count = int<32>^0 = count (2) 
  golden = process egg<>^0 = golden (4) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    yolk = int<32>^0 = count (2) 
  )
  load = process bundle<>^0 = load (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    c = process basket<>^1
      {
        [0] = load.c[0] (2) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          egg_array = process egg<>^1
            {
              [0] = load.c[0].egg_array[0] (3) (
                !GND = bool^0 = !GND (1) @[ supply_low ] 
                !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
                yolk = int<32>^0 = load.c[0].egg_array[0].yolk (1) 
              )
              [1] = golden (4) (
                !GND = bool^0 = !GND (1) @[ supply_low ] 
                !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
                yolk = int<32>^0 = count (2) 
              )
            }
        )
        [1] = load.c[1] (5) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          egg_array = process egg<>^1
            {
              [0] = load.c[1].egg_array[0] (6) (
                !GND = bool^0 = !GND (1) @[ supply_low ] 
                !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
                yolk = int<32>^0 = load.c[1].egg_array[0].yolk (3) 
              )
              [1] = load.c[1].egg_array[1] (7) (
                !GND = bool^0 = !GND (1) @[ supply_low ] 
                !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
                yolk = int<32>^0 = load.c[1].egg_array[1].yolk (4) 
              )
            }
        )
      }
  )
  Created state:
  process instance pool: (0 ports, 7 local, 0 mapped)
  1	load	bundle<>
    process: 2,3,4,5,6,7
    int: 1,2,3,4
    bool: 1,2
  2	load.c[0]	basket<>
    process: 3,4
    int: 1,2
    bool: 1,2
  3	load.c[0].egg_array[0]	egg<>
    int: 1
    bool: 1,2
  4	golden	egg<>
    int: 2
    bool: 1,2
  5	load.c[1]	basket<>
    process: 6,7
    int: 3,4
    bool: 1,2
  6	load.c[1].egg_array[0]	egg<>
    int: 3
    bool: 1,2
  7	load.c[1].egg_array[1]	egg<>
    int: 4
    bool: 1,2
  int instance pool: (0 ports, 4 local, 0 mapped)
  1	load.c[0].egg_array[0].yolk	
  2	count	
  3	load.c[1].egg_array[0].yolk	
  4	load.c[1].egg_array[1].yolk	
  bool instance pool: (0 ports, 2 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
}
