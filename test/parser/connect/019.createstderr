
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	137
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	5	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	6	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	7	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	8	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	proccoll	2	#HEAD#	#TAIL#	186
	11	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	12	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	15	##ADDR##	proccoll	2	#HEAD#	#TAIL#	258
	16	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	20	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	21	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	23	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  2 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    M = pint^0 M (init = 3) value: 3
    N = pint^0 N (init = 2) value: 2
  Definitions:
    fang = process-definition (defined) fang(
      )
      In definition "fang", we have: {
      unroll sequence: 
      footprint: {
      }
      }

  Instances:
    that = process fang<>^2 that
      unrolled indices: {
        [0][0] = ::that[0][0] (1) 
        [0][1] = ::that[0][1] (2) 
        [0][2] = ::that[0][2] (3) 
        [1][0] = ::that[1][0] (4) 
        [1][1] = ::that[1][1] (5) 
        [1][2] = ::that[1][2] (6) 
      }
    this = process fang<>^2 this
      unrolled indices: {
        [0][0] = ::that[0][0] (1) 
        [0][1] = ::that[0][1] (2) 
        [0][2] = ::that[0][2] (3) 
        [1][0] = ::that[1][0] (4) 
        [1][1] = ::that[1][1] (5) 
        [1][2] = ::that[1][2] (6) 
      }
}

Created state:
process instance pool:
1	::that[0][0]
2	::that[0][1]
3	::that[0][2]
4	::that[1][0]
5	::that[1][1]
6	::that[1][2]

