
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	127
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	29	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	33	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	33
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	38	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	44	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	45	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	51	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	54	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	58	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	59	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	62	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	63	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	69	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	78	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	79	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	80	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	82	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	footprnt	0	#HEAD#	#TAIL#	542
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	85	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	86	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	88	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	90	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	94	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	98	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	99	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	100	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	101	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	102	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	103	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	104	##ADDR##	footprnt	0	#HEAD#	#TAIL#	637
	105	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	106	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    ar = process-definition (defined) ar(
        bool<> !GND
        bool<> !Vdd
        bool<> y
      )
      In definition "ar", we have: {
      Instances:
        !GND = bool<> ar::!GND
        !Vdd = bool<> ar::!Vdd
        y = bool<> ar::y
        z = bool<> ar::z
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> z
        y = z;
      footprint: {
        !GND = bool^0 = ar<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = ar<>::!Vdd (2) @[ supply_high port-alias ] 
        y = bool^0 = ar<>::y (3) @[ port-alias ] 
        z = bool^0 = ar<>::y (3) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	ar<>::!GND @[ supply_low port-alias ]	
        2	ar<>::!Vdd @[ supply_high port-alias ]	
        3	ar<>::y @[ port-alias ]	
      }
      }

    array = process-definition (defined) array(
        bool<> !GND
        bool<> !Vdd
        bool<> x
      )
      In definition "array", we have: {
      Instances:
        !GND = bool<> array::!GND
        !Vdd = bool<> array::!Vdd
        composite = bool<> array::composite
        x = bool<> array::x
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> composite
        x = composite;
      footprint: {
        !GND = bool^0 = array<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = array<>::!Vdd (2) @[ supply_high port-alias ] 
        composite = bool^0 = array<>::x (3) @[ port-alias ] 
        x = bool^0 = array<>::x (3) @[ port-alias ] 
        Created state:
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	array<>::!GND @[ supply_low port-alias ]	
        2	array<>::!Vdd @[ supply_high port-alias ]	
        3	array<>::x @[ port-alias ]	
      }
      }

    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        ar<> r
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        k = array<> foo::k
        r = ar<> foo::r
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          ar<> r
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        array<> k
        k ( , , r.y);
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
        k = process array<>^0 = foo<>::k (2) (
          !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
          x = bool^0 = foo<>::r.y (3) @[ port-alias ] 
        )
        r = process ar<>^0 = foo<>::r (1) @[ port-alias ] (
          !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
          y = bool^0 = foo<>::r.y (3) @[ port-alias ] 
        )
        Created state:
        process instance pool: (1 ports, 1 local, 0 mapped)
        1	foo<>::r @[ port-alias ]	ar<>
          bool: 1,2,3
        2	foo<>::k	array<>
          bool: 1,2,3
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	foo<>::!GND @[ supply_low port-alias ]	
        2	foo<>::!Vdd @[ supply_high port-alias ]	
        3	foo<>::r.y @[ port-alias ]	
        bool port aliases:
        1: foo<>::r.!GND = foo<>::!GND @[ supply_low port-alias ]
        2: foo<>::r.!Vdd = foo<>::!Vdd @[ supply_high port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    B = ar<> B
    C = foo<> C
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  B = process ar<>^0 = B (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    y = bool^0 = B.y (3) 
  )
  C = process foo<>^0 = C (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    r = process ar<>^0 = B (1) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      y = bool^0 = B.y (3) 
    )
  )
  Created state:
  process instance pool: (0 ports, 2 local, 1 mapped)
  1	B	ar<>
    bool: 1,2,3
  2	C	foo<>
    process: 1
    bool: 1,2,3
  private sub-process index map:
    (2 -> 0)
    (3 -> 1)
  bool instance pool: (0 ports, 3 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	B.y	
}
