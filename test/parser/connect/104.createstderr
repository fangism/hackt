
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	58
	4	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	5	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	6	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	7	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	228
	10	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpic_	0	#HEAD#	#TAIL#	28
	13	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	14	##ADDR##	cnstpic_	0	#HEAD#	#TAIL#	28
	15	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	16	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	17	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpic_	0	#HEAD#	#TAIL#	28
	25	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	26	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	28	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	34	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	35	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	38	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	42	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	43	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	44	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	45	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	50	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	51	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	52	##ADDR##	procdefn	0	#HEAD#	#TAIL#	192
	53	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	54	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	60	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	63	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	68	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	portconn	0	#HEAD#	#TAIL#	24
	71	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	72	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	73	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	74	##ADDR##	portconn	0	#HEAD#	#TAIL#	24
	75	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	76	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  1 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Parameters:
    Q = pint^1 Q with indices: {
      [0..1]
    }
      unrolled index-value pairs: {
        0 = 1
        1 = 2
      }
  Definitions:
    bar = process-definition (defined) bar(
        foo<1> a
        foo<2> b
      )
      In definition "bar", we have: {
      Instances:
        a = foo<1> a
        b = foo<2> b
      footprint: {
        process foo<1>^0 a (instantiated) = ::bar::a (1) 
        process foo<2>^0 b (instantiated) = ::bar::b (2) 
        process instance pool:
        1	::bar::a
        2	::bar::b
      }
      }

    foo = process-definition (defined) foo<
      pint<> A
      >(
      )
      In definition "foo", we have: {
      Parameters:
        A = pint<> A
      footprint collection: {
        <1> {
          pint^0 A value: ?
        }
        <2> {
          pint^0 A value: ?
        }
      }
      }

  Instances:
    p = process foo<1>^0 p (instantiated) = ::w.a (2) 
    q = process foo<2>^0 q (instantiated) = ::w.b (3) 
    r = process foo<1>^0 r (instantiated) = ::p (2) 
    w = process bar<>^0 w (instantiated) = ::w (1) (
      process foo<1>^0 a (instantiated) = ::r (2) 
      process foo<2>^0 b (instantiated) = ::q (3) 
    )
}

Created state:
process instance pool:
1	::w
2	::p
3	::q

