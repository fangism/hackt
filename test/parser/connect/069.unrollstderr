
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	230
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	15	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	29
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	21	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	22	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	23	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	24	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	28	##ADDR##	proccoll	2	#HEAD#	#TAIL#	279
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	34	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	35	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	36	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	37	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	38	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	39	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	40	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	41	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	42	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	43	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	45	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	46	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	47	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	48	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	49	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	50	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	51	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	52	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	53	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	54	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	55	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	56	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	58	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	71
	61	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	62	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	63	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	65	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	109
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	67	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	69	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	70	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	79	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    portaproc = process-definition (defined) portaproc(
        bool<> b
        bool<> c[0..3]
        int<32> i
        int<32> j[0..1]
      )
      In definition "portaproc", we have: {
      Instances:
        b = bool<> b
        c = bool<> c

        i = int<32> i
        j = int<32> j

      unroll sequence: 
        bool<> b
        bool<> c[0..3]
        int<32> i
        int<32> j[0..1]
      footprint: {
        bool^0 b (instantiated) = ::portaproc::b 
        bool^1 c
          unrolled indices: {
            0 = ::portaproc::c[0] 
            1 = ::portaproc::c[1] 
            2 = ::portaproc::c[2] 
            3 = ::portaproc::c[3] 
          }
        int<32>^0 i (instantiated) = ::portaproc::i 
        int<32>^1 j
          unrolled indices: {
            0 = ::portaproc::j[0] 
            1 = ::portaproc::j[1] 
          }
      }
      }

  Instances:
    a = bool^0 a (instantiated) = ::p[0][1].b 
    p = process portaproc<>^2 p
      unrolled indices: {
        [0][0] = ::p[0][0] (
          bool^0 b (instantiated) = ::p[0][0].b 
          bool^1 c
            unrolled indices: {
              0 = ::p[0][0].c[0] 
              1 = ::p[0][0].c[1] 
              2 = ::p[0][0].c[2] 
              3 = ::p[0][0].c[3] 
            }
          int<32>^0 i (instantiated) = ::p[0][0].i 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[0][0].j[0] 
              1 = ::p[0][0].j[1] 
            }
        )
        [0][1] = ::p[0][1] (
          bool^0 b (instantiated) = ::p[0][1].b 
          bool^1 c
            unrolled indices: {
              0 = ::p[0][1].c[0] 
              1 = ::p[0][1].c[1] 
              2 = ::p[0][1].c[2] 
              3 = ::p[0][1].c[3] 
            }
          int<32>^0 i (instantiated) = ::p[0][1].i 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[0][1].j[0] 
              1 = ::p[0][1].j[1] 
            }
        )
        [0][2] = ::p[0][2] (
          bool^0 b (instantiated) = ::p[0][2].b 
          bool^1 c
            unrolled indices: {
              0 = ::p[0][2].c[0] 
              1 = ::p[0][2].c[1] 
              2 = ::p[0][2].c[2] 
              3 = ::p[0][2].c[3] 
            }
          int<32>^0 i (instantiated) = ::p[0][2].i 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[0][2].j[0] 
              1 = ::p[0][2].j[1] 
            }
        )
        [1][0] = ::p[1][0] (
          bool^0 b (instantiated) = ::p[1][0].b 
          bool^1 c
            unrolled indices: {
              0 = ::p[1][0].c[0] 
              1 = ::p[1][0].c[1] 
              2 = ::p[1][0].c[2] 
              3 = ::p[1][0].c[3] 
            }
          int<32>^0 i (instantiated) = ::p[1][0].i 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[1][0].j[0] 
              1 = ::p[1][0].j[1] 
            }
        )
        [1][1] = ::p[1][1] (
          bool^0 b (instantiated) = ::p[1][1].b 
          bool^1 c
            unrolled indices: {
              0 = ::p[1][1].c[0] 
              1 = ::p[1][1].c[1] 
              2 = ::p[1][1].c[2] 
              3 = ::p[1][1].c[3] 
            }
          int<32>^0 i (instantiated) = ::p[1][1].i 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[1][1].j[0] 
              1 = ::p[1][1].j[1] 
            }
        )
        [1][2] = ::p[1][2] (
          bool^0 b (instantiated) = ::p[1][2].b 
          bool^1 c
            unrolled indices: {
              0 = ::p[1][2].c[0] 
              1 = ::p[1][2].c[1] 
              2 = ::p[1][2].c[2] 
              3 = ::p[1][2].c[3] 
            }
          int<32>^0 i (instantiated) = ::p[1][2].i 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[1][2].j[0] 
              1 = ::p[1][2].j[1] 
            }
        )
      }
    q = int<32>^0 q (instantiated) = ::p[0][1].i 
    r = int<32>^1 r
      unrolled indices: {
        0 = ::p[0][1].j[0] 
        1 = ::p[0][1].j[1] 
      }
    x = bool^1 x
      unrolled indices: {
        0 = ::p[0][1].c[0] 
        1 = ::p[0][1].c[1] 
        2 = ::p[0][1].c[2] 
        3 = ::p[0][1].c[3] 
      }
}

