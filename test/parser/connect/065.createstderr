
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	142
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	footprnt	0	#HEAD#	#TAIL#	452
	31	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	32	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	51	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	52	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	53	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	61	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	footprnt	0	#HEAD#	#TAIL#	992
	65	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    portaproc = process-definition (defined) portaproc(
        bool<> !GND
        bool<> !Vdd
        bool<> b
        bool<> c[0..3]
        int<32> i
        int<32> j[0..1]
      )
      In definition "portaproc", we have: {
      Instances:
        !GND = bool<> portaproc::!GND
        !Vdd = bool<> portaproc::!Vdd
        b = bool<> portaproc::b
        c = bool<> portaproc::c^1
        i = int<32> portaproc::i
        j = int<32> portaproc::j^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> b
          bool<> c[0..3]
          int<32> i
          int<32> j[0..1]
        )
      footprint: {
        !GND = bool^0 = portaproc<>::!GND (1) 
        !Vdd = bool^0 = portaproc<>::!Vdd (2) 
        b = bool^0 = portaproc<>::b (3) 
        c = bool^1
          {
            [0] = portaproc<>::c[0] (4) 
            [1] = portaproc<>::c[1] (5) 
            [2] = portaproc<>::c[2] (6) 
            [3] = portaproc<>::c[3] (7) 
          }
        i = int<32>^0 = portaproc<>::i (1) 
        j = int<32>^1
          {
            [0] = portaproc<>::j[0] (2) 
            [1] = portaproc<>::j[1] (3) 
          }
        Created state:
        int instance pool:
        1	portaproc<>::i
        2	portaproc<>::j[0]
        3	portaproc<>::j[1]
        bool instance pool:
        1	portaproc<>::!GND
        2	portaproc<>::!Vdd
        3	portaproc<>::b
        4	portaproc<>::c[0]
        5	portaproc<>::c[1]
        6	portaproc<>::c[2]
        7	portaproc<>::c[3]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = bool<> a
    p = portaproc<> p^1
    q = int<32> q
    r = int<32> r^1
    x = bool<> x^1
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  a = bool^0 = a (3) 
  p = process portaproc<>^1
    {
      [0] = p[0] (1) (
        !GND = bool^0 = !GND (1) 
        !Vdd = bool^0 = !Vdd (2) 
        b = bool^0 = a (3) 
        c = bool^1
          {
            [0] = x[0] (4) 
            [1] = x[1] (5) 
            [2] = x[2] (6) 
            [3] = x[3] (7) 
          }
        i = int<32>^0 = q (1) 
        j = int<32>^1
          {
            [0] = r[0] (2) 
            [1] = r[1] (3) 
          }
      )
      [1] = p[1] (2) (
        !GND = bool^0 = !GND (1) 
        !Vdd = bool^0 = !Vdd (2) 
        b = bool^0 = p[1].b (8) 
        c = bool^1
          {
            [0] = p[1].c[0] (9) 
            [1] = p[1].c[1] (10) 
            [2] = p[1].c[2] (11) 
            [3] = p[1].c[3] (12) 
          }
        i = int<32>^0 = p[1].i (4) 
        j = int<32>^1
          {
            [0] = p[1].j[0] (5) 
            [1] = p[1].j[1] (6) 
          }
      )
    }
  q = int<32>^0 = q (1) 
  r = int<32>^1
    {
      [0] = r[0] (2) 
      [1] = r[1] (3) 
    }
  x = bool^1
    {
      [0] = x[0] (4) 
      [1] = x[1] (5) 
      [2] = x[2] (6) 
      [3] = x[3] (7) 
    }
  Created state:
  process instance pool:
  1	p[0]
  2	p[1]
  int instance pool:
  1	q
  2	r[0]
  3	r[1]
  4	p[1].i
  5	p[1].j[0]
  6	p[1].j[1]
  bool instance pool:
  1	!GND
  2	!Vdd
  3	a
  4	x[0]
  5	x[1]
  6	x[2]
  7	x[3]
  8	p[1].b
  9	p[1].c[0]
  10	p[1].c[1]
  11	p[1].c[2]
  12	p[1].c[3]
}
