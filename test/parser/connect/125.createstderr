
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	4	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	182
	7	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	43
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	11	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	16	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	17	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	42
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	19	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	21	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	24	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	27	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	29	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	30	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	31	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	32	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	33	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	35	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	36	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	37	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	38	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	40	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	43	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	44	##ADDR##	portconn	0	#HEAD#	#TAIL#	20
	45	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	46	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    array = process-definition (defined) array(
        bool<> x
      )
      In definition "array", we have: {
      Instances:
        composite = bool<> composite
        x = bool<> x
      footprint: {
        bool^0 composite (instantiated) = ::array::x (1) 
        bool^0 x (instantiated) = ::array::composite (1) 
        bool instance pool:
        1	::array::composite
      }
      }

    foo = process-definition (defined) foo(
        array<> q
      )
      In definition "foo", we have: {
      Instances:
        p = array<> p
        q = array<> q
      footprint: {
        process array<>^0 p (instantiated) = ::foo::q (1) (
          bool^0 x (instantiated) = ::foo::p.x (1) 
        )
        process array<>^0 q (instantiated) = ::foo::p (1) (
          bool^0 x (instantiated) = ::foo::q.x (1) 
        )
        process instance pool:
        1	::foo::p
        bool instance pool:
        1	::foo::p.x
      }
      }

  Instances:
    s = process array<>^0 s (instantiated) = ::x.q (2) (
      bool^0 x (instantiated) = ::s.x (1) 
    )
    x = process foo<>^0 x (instantiated) = ::x (1) (
      process array<>^0 q (instantiated) = ::s (2) (
        bool^0 x (instantiated) = ::x.q.x (1) 
      )
    )
}

Created state:
process instance pool:
1	::x
2	::s
bool instance pool:
1	::s.x

