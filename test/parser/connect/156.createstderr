
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	142
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	13	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	17	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	23	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	24	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	25	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	28	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	36	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	37	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	38	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	41	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	45	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	50	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	54	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	56	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	37
	57	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	37
	63	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	65	##ADDR##	footprnt	0	#HEAD#	#TAIL#	674
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	procdefn	0	#HEAD#	#TAIL#	98
	70	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	71	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	72	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	footprnt	0	#HEAD#	#TAIL#	298
	77	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	78	##ADDR##	procdefn	0	#HEAD#	#TAIL#	144
	79	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	80	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	81	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	82	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	83	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	84	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	85	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	86	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	88	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	91	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	92	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	93	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	96	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	97	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	98	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	101	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	103	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	104	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	105	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	108	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	109	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	110	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	111	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	113	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	114	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	115	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	117	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	119	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	120	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	121	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	123	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	124	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	126	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	127	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	128	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	129	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	130	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	132	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	133	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	134	##ADDR##	footprnt	0	#HEAD#	#TAIL#	694
	135	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	136	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	137	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	138	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	139	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	140	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	141	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	142	##ADDR##	footprnt	0	#HEAD#	#TAIL#	605
	143	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    celem = process-definition (defined) celem<
      pint<> N
      >(
        bool<> i[0..N-1]
        bool<> o
      )
      In definition "celem", we have: {
      Parameters:
        N = pint<> celem::N
      Instances:
        _o = bool<> celem::_o
        i = bool<> celem::i^1
        o = bool<> celem::o
      unroll sequence: 
        ports: (
          bool<> i[0..N-1]
          bool<> o
        )
        bool<> _o
      prs:
        (&:j:[0..N-1]: i[$j]) -> _o-
        (&:j:[0..N-1]: ~i[$j]) -> _o+
        _o -> o-
        ~_o -> o+
        o -> _o- [iskeeper=1]
        ~o -> _o+ [iskeeper=1]
      footprint collection: {
        <2> {
          N = pint^0 value: 2
          _o = bool^0 = celem<2>::_o (2) 
          i = bool^1
            {
              [0] = celem<2>::i[0] (3) 
              [1] = celem<2>::i[1] (4) 
            }
          o = bool^0 = celem<2>::o (1) 
          Created state:
          bool instance pool:
          1	celem<2>::o
          2	celem<2>::_o
          3	celem<2>::i[0]
          4	celem<2>::i[1]
          resolved prs:
          i[0] & i[1] -> _o-
          ~i[0] & ~i[1] -> _o+
          _o -> o-
          ~_o -> o+
          o -> _o- [iskeeper=1]
          ~o -> _o+ [iskeeper=1]
        }
      }
      }

    e1of1 = process-definition (defined) e1of1(
        bool<> d
        bool<> e
      )
      In definition "e1of1", we have: {
      Instances:
        d = bool<> e1of1::d
        e = bool<> e1of1::e
      unroll sequence: 
        ports: (
          bool<> d
          bool<> e
        )
      footprint: {
        d = bool^0 = e1of1<>::d (1) 
        e = bool^0 = e1of1<>::e (2) 
        Created state:
        bool instance pool:
        1	e1of1<>::d
        2	e1of1<>::e
      }
      }

    wire_copy_e1of1 = process-definition (defined) wire_copy_e1of1<
      pint<> C
      >(
        e1of1<> I
        e1of1<> O[0..C-1]
        bool<> re[0..C-1]
      )
      In definition "wire_copy_e1of1", we have: {
      Parameters:
        C = pint<> wire_copy_e1of1::C
      Instances:
        I = e1of1<> wire_copy_e1of1::I
        O = e1of1<> wire_copy_e1of1::O^1
        c = celem<wire_copy_e1of1::C> wire_copy_e1of1::c
        re = bool<> wire_copy_e1of1::re^1
      unroll sequence: 
        ports: (
          e1of1<> I
          e1of1<> O[0..C-1]
          bool<> re[0..C-1]
        )
        (;i:[0..C-1]:
          re[$i] = O[$i].e;
          O[$i].d = I.d;
        )
        celem<wire_copy_e1of1::C> c
        c (re, I.e);
      footprint collection: {
        <2> {
          C = pint^0 value: 2
          I = process e1of1<>^0 = wire_copy_e1of1<2>::I (1) (
            d = bool^0 = wire_copy_e1of1<2>::I.d (1) 
            e = bool^0 = wire_copy_e1of1<2>::I.e (2) 
          )
          O = process e1of1<>^1
            {
              [0] = wire_copy_e1of1<2>::O[0] (3) (
                d = bool^0 = wire_copy_e1of1<2>::I.d (1) 
                e = bool^0 = wire_copy_e1of1<2>::re[0] (3) 
              )
              [1] = wire_copy_e1of1<2>::O[1] (4) (
                d = bool^0 = wire_copy_e1of1<2>::I.d (1) 
                e = bool^0 = wire_copy_e1of1<2>::re[1] (4) 
              )
            }
          c = process celem<2>^0 = wire_copy_e1of1<2>::c (2) (
            i = bool^1
              {
                [0] = wire_copy_e1of1<2>::re[0] (3) 
                [1] = wire_copy_e1of1<2>::re[1] (4) 
              }
            o = bool^0 = wire_copy_e1of1<2>::I.e (2) 
          )
          re = bool^1
            {
              [0] = wire_copy_e1of1<2>::re[0] (3) 
              [1] = wire_copy_e1of1<2>::re[1] (4) 
            }
          Created state:
          process instance pool:
          1	wire_copy_e1of1<2>::I
          2	wire_copy_e1of1<2>::c
          3	wire_copy_e1of1<2>::O[0]
          4	wire_copy_e1of1<2>::O[1]
          bool instance pool:
          1	wire_copy_e1of1<2>::I.d
          2	wire_copy_e1of1<2>::I.e
          3	wire_copy_e1of1<2>::re[0]
          4	wire_copy_e1of1<2>::re[1]
          bool port aliases:
          1: wire_copy_e1of1<2>::I.d = wire_copy_e1of1<2>::O[0].d = wire_copy_e1of1<2>::O[1].d
          3: wire_copy_e1of1<2>::O[0].e = wire_copy_e1of1<2>::re[0]
          4: wire_copy_e1of1<2>::O[1].e = wire_copy_e1of1<2>::re[1]
        }
      }
      }

  Instances:
    foo = wire_copy_e1of1<2> foo
}

footprint: {
  foo = process wire_copy_e1of1<2>^0 = foo (1) (
    I = process e1of1<>^0 = foo.I (2) (
      d = bool^0 = foo.I.d (1) 
      e = bool^0 = foo.I.e (2) 
    )
    O = process e1of1<>^1
      {
        [0] = foo.O[0] (3) (
          d = bool^0 = foo.I.d (1) 
          e = bool^0 = foo.re[0] (3) 
        )
        [1] = foo.O[1] (4) (
          d = bool^0 = foo.I.d (1) 
          e = bool^0 = foo.re[1] (4) 
        )
      }
    re = bool^1
      {
        [0] = foo.re[0] (3) 
        [1] = foo.re[1] (4) 
      }
  )
  Created state:
  process instance pool:
  1	foo
  2	foo.I
  3	foo.O[0]
  4	foo.O[1]
  bool instance pool:
  1	foo.I.d
  2	foo.I.e
  3	foo.re[0]
  4	foo.re[1]
}
