
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	proccoll	2	#HEAD#	#TAIL#	705
	4	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	49
	7	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	8	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	9	##ADDR##	proccoll	1	#HEAD#	#TAIL#	204
	10	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	13	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	14	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	15	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	16	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	17	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    barf = process-definition (declared) barf(
      )
      In definition "barf", we have: {
      }

  Instances:
    bag = process barf<>^1 bag with indices: {
      [0..4]
    }
      unrolled indices: {
        0 = ::sack[4][0] 
        1 = ::sack[4][1] 
        2 = ::sack[4][2] 
        3 = ::sack[4][3] 
        4 = ::sack[4][4] 
      }
    sack = process barf<>^2 sack with indices: {
      [0..4][0..4]
    }
      unrolled indices: {
        [0][0] = ::sack[0][0] 
        [0][1] = ::sack[0][1] 
        [0][2] = ::sack[0][2] 
        [0][3] = ::sack[0][3] 
        [0][4] = ::sack[0][4] 
        [1][0] = ::sack[1][0] 
        [1][1] = ::sack[1][1] 
        [1][2] = ::sack[1][2] 
        [1][3] = ::sack[1][3] 
        [1][4] = ::sack[1][4] 
        [2][0] = ::sack[2][0] 
        [2][1] = ::sack[2][1] 
        [2][2] = ::sack[2][2] 
        [2][3] = ::sack[2][3] 
        [2][4] = ::sack[2][4] 
        [3][0] = ::sack[3][0] 
        [3][1] = ::sack[3][1] 
        [3][2] = ::sack[3][2] 
        [3][3] = ::sack[3][3] 
        [3][4] = ::sack[3][4] 
        [4][0] = ::bag[0] 
        [4][1] = ::bag[1] 
        [4][2] = ::bag[2] 
        [4][3] = ::bag[3] 
        [4][4] = ::bag[4] 
      }
}

