
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	60
	3	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	46
	4	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datadefn	0	#HEAD#	#TAIL#	52
	7	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	9	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	45
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	42
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	53
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	42
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	procdefn	0	#HEAD#	#TAIL#	141
	23	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	24	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	procdefn	0	#HEAD#	#TAIL#	109
	27	##ADDR##	proccoll	1	#HEAD#	#TAIL#	45
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	29	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	30	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	31	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	37
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	33	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	34	##ADDR##	proccoll	1	#HEAD#	#TAIL#	41
	35	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	36	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	37	##ADDR##	proccoll	1	#HEAD#	#TAIL#	37
	38	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	39	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	40	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	42	##ADDR##	proccoll	1	#HEAD#	#TAIL#	33
	43	##ADDR##	proccoll	0	#HEAD#	#TAIL#	71
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	proccoll	1	#HEAD#	#TAIL#	397
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	50	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	51	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	52	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	53	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	54	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	55	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	56	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	57	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	58	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	59	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	60	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	61	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	62	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	64	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	65	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	66	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	67	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	68	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	70	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	71	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	72	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	73	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	48
	74	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	75	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	45
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	44
	79	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	80	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	81	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	42
	82	##ADDR##	proccoll	0	#HEAD#	#TAIL#	65
	83	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	84	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	86	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	87	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	88	##ADDR##	proccoll	1	#HEAD#	#TAIL#	417
	89	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	90	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	91	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	92	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	93	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	94	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	95	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	96	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	97	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	98	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	99	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	100	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	101	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	102	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	103	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	104	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	105	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	106	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	107	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	109	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	110	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	111	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	112	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	113	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	114	##ADDR##	proccoll	0	#HEAD#	#TAIL#	69
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	116	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	117	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	118	##ADDR##	proccoll	1	#HEAD#	#TAIL#	393
	119	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	120	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	121	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	122	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	123	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	124	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	125	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	126	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	127	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	128	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	129	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	130	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	131	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	132	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	133	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	134	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	135	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	136	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	137	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	138	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	139	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	140	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	141	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	142	##ADDR##	proccoll	1	#HEAD#	#TAIL#	191
	143	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	144	##ADDR##	proccoll	1	#HEAD#	#TAIL#	393
	145	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	146	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	147	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	148	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	149	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	150	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	151	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	152	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	153	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	154	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	155	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	156	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	157	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	158	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	159	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	160	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	161	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	162	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	163	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	164	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	165	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	166	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	167	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	168	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	169	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	170	##ADDR##	proccoll	1	#HEAD#	#TAIL#	393
	171	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	172	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	173	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	174	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	175	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	176	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	177	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	178	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	179	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	180	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	181	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	182	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	183	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	184	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	185	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	186	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	187	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	188	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	189	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	190	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	191	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	192	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	193	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	194	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	195	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	196	##ADDR##	proccoll	1	#HEAD#	#TAIL#	393
	197	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	198	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	199	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	200	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	201	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	202	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	203	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	204	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	205	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	206	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	207	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	208	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	209	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	210	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	211	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	212	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	213	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	214	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	215	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	216	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	217	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	218	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	219	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	220	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	221	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	222	##ADDR##	proccoll	1	#HEAD#	#TAIL#	401
	223	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	224	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	225	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	226	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	227	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	228	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	229	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	230	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	231	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	232	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	233	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	234	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	235	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	236	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	237	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	238	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	239	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	240	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	241	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	242	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	243	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	244	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	245	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	246	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	247	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	248	##ADDR##	proccoll	1	#HEAD#	#TAIL#	393
	249	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	250	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	251	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	252	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	253	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	254	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	255	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	256	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	257	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	258	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	259	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	260	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	261	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	262	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	263	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	264	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	265	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	266	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	267	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	268	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	269	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	270	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	271	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	272	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	273	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	274	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	275	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	276	##ADDR##	proccoll	1	#HEAD#	#TAIL#	417
	277	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	278	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	279	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	280	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	281	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	282	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	283	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	284	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	285	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	286	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	287	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	288	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	289	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	290	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	291	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	292	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	293	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	294	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	295	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	296	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	297	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	298	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	299	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	300	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	301	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	41
	302	##ADDR##	prcalias	0	#HEAD#	#TAIL#	24
	303	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	304	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	305	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	306	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	307	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	308	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	309	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	310	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	311	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	312	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	313	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	314	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	315	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	316	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	317	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	318	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	319	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	320	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	321	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	322	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	323	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	324	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	325	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	326	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	327	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	328	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	329	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	330	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	331	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	332	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	333	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	334	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	335	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	336	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	337	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	338	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	339	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	340	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	341	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	342	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	343	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	344	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	345	##ADDR##	mdintref	0	#HEAD#	#TAIL#	24
	346	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	347	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	348	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	349	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	350	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	351	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	352	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	353	##ADDR##	mdintref	0	#HEAD#	#TAIL#	24
	354	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	355	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	356	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	357	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	358	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	359	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	360	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	361	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	362	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	363	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	364	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    basket = process-definition (declared) basket(
        egg<> egg_array with indices: {
          [0..11]
        }

      )
      In definition "basket", we have: {
        egg_array = egg<> egg_array with indices: {
          [0..11]
        }

      }

    bundle = process-definition (declared) bundle(
        basket<> a
        basket<> b
        basket<> c with indices: {
          [0..5]
        }

      )
      In definition "bundle", we have: {
        a = basket<> a
        b = basket<> b
        c = basket<> c with indices: {
          [0..5]
        }

      }

    egg = process-definition (declared) egg(
        bool<> white
        int<32> yolk
      )
      In definition "egg", we have: {
        yolk = int<32> yolk
        white = bool<> white
      }

  Instances:
    a_basket = process basket<>^0 a_basket (instantiated) = ::load.a (
      process egg<>^1 egg_array with indices: {
        [0..11]
      }
        unrolled indices: {
          0 = ::a_basket.egg_array[0] (
            bool^0 white (instantiated) = ::a_basket.egg_array[0].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[0].yolk 
          )
          1 = ::a_basket.egg_array[1] (
            bool^0 white (instantiated) = ::a_basket.egg_array[1].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[1].yolk 
          )
          2 = ::a_basket.egg_array[2] (
            bool^0 white (instantiated) = ::a_basket.egg_array[2].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[2].yolk 
          )
          3 = ::a_basket.egg_array[3] (
            bool^0 white (instantiated) = ::a_basket.egg_array[3].white 
            int<32>^0 yolk (instantiated) = ::uncount 
          )
          4 = ::a_basket.egg_array[4] (
            bool^0 white (instantiated) = ::a_basket.egg_array[4].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[4].yolk 
          )
          5 = ::a_basket.egg_array[5] (
            bool^0 white (instantiated) = ::uncrack 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[5].yolk 
          )
          6 = ::a_basket.egg_array[6] (
            bool^0 white (instantiated) = ::a_basket.egg_array[6].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[6].yolk 
          )
          7 = ::a_basket.egg_array[7] (
            bool^0 white (instantiated) = ::a_basket.egg_array[7].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[7].yolk 
          )
          8 = ::a_basket.egg_array[8] (
            bool^0 white (instantiated) = ::a_basket.egg_array[8].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[8].yolk 
          )
          9 = ::a_basket.egg_array[9] (
            bool^0 white (instantiated) = ::a_basket.egg_array[9].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[9].yolk 
          )
          10 = ::a_basket.egg_array[10] (
            bool^0 white (instantiated) = ::a_basket.egg_array[10].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[10].yolk 
          )
          11 = ::a_basket.egg_array[11] (
            bool^0 white (instantiated) = ::a_basket.egg_array[11].white 
            int<32>^0 yolk (instantiated) = ::a_basket.egg_array[11].yolk 
          )
        }
    )
    count = int<32>^0 count (instantiated) = ::golden.yolk 
    crack = bool^0 crack (instantiated) = ::golden.white 
    golden = process egg<>^0 golden (instantiated) = ::load.c[0].egg_array[1] (
      bool^0 white (instantiated) = ::crack 
      int<32>^0 yolk (instantiated) = ::count 
    )
    load = process bundle<>^0 load (instantiated) = ::load (
      process basket<>^0 a (instantiated) = ::load.c[2] (
        process egg<>^1 egg_array with indices: {
          [0..11]
        }
          unrolled indices: {
            0 = ::load.c[4].egg_array[11] (
              bool^0 white (instantiated) = ::load.a.egg_array[0].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[0].yolk 
            )
            1 = ::load.b.egg_array[3] (
              bool^0 white (instantiated) = ::load.a.egg_array[1].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[1].yolk 
            )
            2 = ::load.b.egg_array[4] (
              bool^0 white (instantiated) = ::load.a.egg_array[2].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[2].yolk 
            )
            3 = ::load.a.egg_array[3] (
              bool^0 white (instantiated) = ::load.a.egg_array[3].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[3].yolk 
            )
            4 = ::load.a.egg_array[4] (
              bool^0 white (instantiated) = ::load.a.egg_array[4].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[4].yolk 
            )
            5 = ::load.a.egg_array[5] (
              bool^0 white (instantiated) = ::load.a.egg_array[5].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[5].yolk 
            )
            6 = ::load.a.egg_array[6] (
              bool^0 white (instantiated) = ::load.a.egg_array[6].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[6].yolk 
            )
            7 = ::load.a.egg_array[7] (
              bool^0 white (instantiated) = ::load.a.egg_array[7].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[7].yolk 
            )
            8 = ::load.a.egg_array[8] (
              bool^0 white (instantiated) = ::load.a.egg_array[8].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[8].yolk 
            )
            9 = ::load.a.egg_array[9] (
              bool^0 white (instantiated) = ::load.a.egg_array[9].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[9].yolk 
            )
            10 = ::load.a.egg_array[10] (
              bool^0 white (instantiated) = ::load.a.egg_array[10].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[10].yolk 
            )
            11 = ::load.a.egg_array[11] (
              bool^0 white (instantiated) = ::load.a.egg_array[11].white 
              int<32>^0 yolk (instantiated) = ::load.a.egg_array[11].yolk 
            )
          }
      )
      process basket<>^0 b (instantiated) = ::load.b (
        process egg<>^1 egg_array with indices: {
          [0..11]
        }
          unrolled indices: {
            0 = ::load.b.egg_array[0] (
              bool^0 white (instantiated) = ::load.b.egg_array[0].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[0].yolk 
            )
            1 = ::load.b.egg_array[1] (
              bool^0 white (instantiated) = ::load.b.egg_array[1].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[1].yolk 
            )
            2 = ::load.a.egg_array[0] (
              bool^0 white (instantiated) = ::load.b.egg_array[2].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[2].yolk 
            )
            3 = ::load.a.egg_array[1] (
              bool^0 white (instantiated) = ::load.b.egg_array[3].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[3].yolk 
            )
            4 = ::load.a.egg_array[2] (
              bool^0 white (instantiated) = ::load.b.egg_array[4].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[4].yolk 
            )
            5 = ::load.b.egg_array[5] (
              bool^0 white (instantiated) = ::load.b.egg_array[5].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[5].yolk 
            )
            6 = ::load.b.egg_array[6] (
              bool^0 white (instantiated) = ::load.b.egg_array[6].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[6].yolk 
            )
            7 = ::load.b.egg_array[7] (
              bool^0 white (instantiated) = ::load.b.egg_array[7].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[7].yolk 
            )
            8 = ::load.b.egg_array[8] (
              bool^0 white (instantiated) = ::load.b.egg_array[8].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[8].yolk 
            )
            9 = ::load.b.egg_array[9] (
              bool^0 white (instantiated) = ::load.b.egg_array[9].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[9].yolk 
            )
            10 = ::load.b.egg_array[10] (
              bool^0 white (instantiated) = ::load.b.egg_array[10].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[10].yolk 
            )
            11 = ::load.b.egg_array[11] (
              bool^0 white (instantiated) = ::load.b.egg_array[11].white 
              int<32>^0 yolk (instantiated) = ::load.b.egg_array[11].yolk 
            )
          }
      )
      process basket<>^1 c with indices: {
        [0..5]
      }
        unrolled indices: {
          0 = ::load.c[0] (
            process egg<>^1 egg_array with indices: {
              [0..11]
            }
              unrolled indices: {
                0 = ::load.c[0].egg_array[0] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[0].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[0].yolk 
                )
                1 = ::golden (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[1].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[1].yolk 
                )
                2 = ::load.c[0].egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[2].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[2].yolk 
                )
                3 = ::load.c[0].egg_array[3] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[3].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[3].yolk 
                )
                4 = ::load.c[0].egg_array[4] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[4].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[4].yolk 
                )
                5 = ::load.c[0].egg_array[5] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[5].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[5].yolk 
                )
                6 = ::load.c[0].egg_array[6] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[6].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[6].yolk 
                )
                7 = ::load.c[0].egg_array[7] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[7].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[7].yolk 
                )
                8 = ::load.c[0].egg_array[8] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[8].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[8].yolk 
                )
                9 = ::load.c[0].egg_array[9] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[9].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[9].yolk 
                )
                10 = ::load.c[0].egg_array[10] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[10].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[10].yolk 
                )
                11 = ::load.c[0].egg_array[11] (
                  bool^0 white (instantiated) = ::load.c[0].egg_array[11].white 
                  int<32>^0 yolk (instantiated) = ::load.c[0].egg_array[11].yolk 
                )
              }
          )
          1 = ::load.c[1] (
            process egg<>^1 egg_array with indices: {
              [0..11]
            }
              unrolled indices: {
                0 = ::load.c[1].egg_array[0] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[0].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[0].yolk 
                )
                1 = ::load.c[1].egg_array[1] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[1].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[1].yolk 
                )
                2 = ::load.c[1].egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[2].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[2].yolk 
                )
                3 = ::load.c[1].egg_array[3] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[3].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[3].yolk 
                )
                4 = ::load.c[1].egg_array[4] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[4].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[4].yolk 
                )
                5 = ::load.c[1].egg_array[5] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[5].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[5].yolk 
                )
                6 = ::load.c[1].egg_array[6] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[6].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[6].yolk 
                )
                7 = ::load.c[1].egg_array[7] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[7].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[7].yolk 
                )
                8 = ::load.c[1].egg_array[8] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[8].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[8].yolk 
                )
                9 = ::load.c[1].egg_array[9] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[9].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[9].yolk 
                )
                10 = ::load.c[1].egg_array[10] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[10].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[10].yolk 
                )
                11 = ::load.c[1].egg_array[11] (
                  bool^0 white (instantiated) = ::load.c[1].egg_array[11].white 
                  int<32>^0 yolk (instantiated) = ::load.c[1].egg_array[11].yolk 
                )
              }
          )
          2 = ::a_basket (
            process egg<>^1 egg_array with indices: {
              [0..11]
            }
              unrolled indices: {
                0 = ::load.c[2].egg_array[0] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[0].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[0].yolk 
                )
                1 = ::load.c[2].egg_array[1] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[1].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[1].yolk 
                )
                2 = ::load.c[2].egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[2].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[2].yolk 
                )
                3 = ::load.c[2].egg_array[3] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[3].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[3].yolk 
                )
                4 = ::load.c[2].egg_array[4] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[4].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[4].yolk 
                )
                5 = ::load.c[2].egg_array[5] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[5].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[5].yolk 
                )
                6 = ::load.c[2].egg_array[6] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[6].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[6].yolk 
                )
                7 = ::load.c[2].egg_array[7] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[7].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[7].yolk 
                )
                8 = ::load.c[2].egg_array[8] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[8].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[8].yolk 
                )
                9 = ::load.c[2].egg_array[9] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[9].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[9].yolk 
                )
                10 = ::load.c[2].egg_array[10] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[10].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[10].yolk 
                )
                11 = ::load.c[2].egg_array[11] (
                  bool^0 white (instantiated) = ::load.c[2].egg_array[11].white 
                  int<32>^0 yolk (instantiated) = ::load.c[2].egg_array[11].yolk 
                )
              }
          )
          3 = ::load.c[3] (
            process egg<>^1 egg_array with indices: {
              [0..11]
            }
              unrolled indices: {
                0 = ::load.c[3].egg_array[0] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[0].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[0].yolk 
                )
                1 = ::load.c[3].egg_array[1] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[1].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[1].yolk 
                )
                2 = ::load.c[3].egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[2].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[2].yolk 
                )
                3 = ::load.c[3].egg_array[3] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[3].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[3].yolk 
                )
                4 = ::load.c[3].egg_array[4] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[4].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[4].yolk 
                )
                5 = ::load.c[3].egg_array[5] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[5].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[5].yolk 
                )
                6 = ::load.c[3].egg_array[6] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[6].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[6].yolk 
                )
                7 = ::load.c[3].egg_array[7] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[7].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[7].yolk 
                )
                8 = ::load.c[3].egg_array[8] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[8].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[8].yolk 
                )
                9 = ::load.c[3].egg_array[9] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[9].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[9].yolk 
                )
                10 = ::load.c[3].egg_array[10] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[10].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[10].yolk 
                )
                11 = ::load.c[3].egg_array[11] (
                  bool^0 white (instantiated) = ::load.c[3].egg_array[11].white 
                  int<32>^0 yolk (instantiated) = ::load.c[3].egg_array[11].yolk 
                )
              }
          )
          4 = ::load.c[4] (
            process egg<>^1 egg_array with indices: {
              [0..11]
            }
              unrolled indices: {
                0 = ::load.c[4].egg_array[0] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[0].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[0].yolk 
                )
                1 = ::load.c[4].egg_array[1] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[1].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[1].yolk 
                )
                2 = ::load.c[4].egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[2].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[2].yolk 
                )
                3 = ::load.c[4].egg_array[3] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[3].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[3].yolk 
                )
                4 = ::load.c[4].egg_array[4] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[4].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[4].yolk 
                )
                5 = ::load.c[4].egg_array[5] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[5].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[5].yolk 
                )
                6 = ::load.c[4].egg_array[6] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[6].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[6].yolk 
                )
                7 = ::load.c[4].egg_array[7] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[7].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[7].yolk 
                )
                8 = ::load.c[4].egg_array[8] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[8].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[8].yolk 
                )
                9 = ::load.c[4].egg_array[9] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[9].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[9].yolk 
                )
                10 = ::load.c[4].egg_array[10] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[10].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[10].yolk 
                )
                11 = ::load.b.egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[4].egg_array[11].white 
                  int<32>^0 yolk (instantiated) = ::load.c[4].egg_array[11].yolk 
                )
              }
          )
          5 = ::load.c[5] (
            process egg<>^1 egg_array with indices: {
              [0..11]
            }
              unrolled indices: {
                0 = ::load.c[5].egg_array[0] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[0].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[0].yolk 
                )
                1 = ::load.c[5].egg_array[1] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[1].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[1].yolk 
                )
                2 = ::load.c[5].egg_array[2] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[2].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[2].yolk 
                )
                3 = ::load.c[5].egg_array[3] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[3].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[3].yolk 
                )
                4 = ::load.c[5].egg_array[4] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[4].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[4].yolk 
                )
                5 = ::load.c[5].egg_array[5] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[5].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[5].yolk 
                )
                6 = ::load.c[5].egg_array[6] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[6].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[6].yolk 
                )
                7 = ::load.c[5].egg_array[7] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[7].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[7].yolk 
                )
                8 = ::load.c[5].egg_array[8] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[8].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[8].yolk 
                )
                9 = ::load.c[5].egg_array[9] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[9].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[9].yolk 
                )
                10 = ::load.c[5].egg_array[10] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[10].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[10].yolk 
                )
                11 = ::load.c[5].egg_array[11] (
                  bool^0 white (instantiated) = ::load.c[5].egg_array[11].white 
                  int<32>^0 yolk (instantiated) = ::load.c[5].egg_array[11].yolk 
                )
              }
          )
        }
    )
    uncount = int<32>^0 uncount (instantiated) = ::a_basket.egg_array[3].yolk 
    uncrack = bool^0 uncrack (instantiated) = ::a_basket.egg_array[5].white 
}

