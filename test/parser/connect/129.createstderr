
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	100
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	60
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	347
	5	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	6	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	140
	9	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	10	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	procdefn	0	#HEAD#	#TAIL#	346
	13	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	17	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	36	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	38	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	45	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	48	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	50	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	52	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	59	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	60	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	61	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	63	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	64	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	65	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	66	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	68	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	70	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	71	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	72	##ADDR##	proccoll	0	#HEAD#	#TAIL#	69
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	74	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	75	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	77	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	78	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	79	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	80	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	81	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	82	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	83	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	84	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	86	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	88	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	89	##ADDR##	procdefn	0	#HEAD#	#TAIL#	407
	90	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	91	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	92	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	93	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	94	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	96	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	98	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	99	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	100	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	101	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	102	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	103	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	104	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	105	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	106	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	107	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	109	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	110	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	111	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	112	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	113	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	114	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	115	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	116	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	117	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	118	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	119	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	120	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	121	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	122	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	123	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	124	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	125	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	126	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	127	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	128	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	129	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	130	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	131	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	132	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	133	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	134	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	135	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	136	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	137	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	138	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	139	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	140	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	141	##ADDR##	proccoll	0	#HEAD#	#TAIL#	70
	142	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	143	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	144	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	145	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	146	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	147	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	148	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	149	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	150	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	151	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	152	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	153	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	154	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	155	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	156	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	157	##ADDR##	proccoll	0	#HEAD#	#TAIL#	70
	158	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	159	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	160	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	161	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	162	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	163	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	164	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	165	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	166	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	167	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	168	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	169	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	170	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	171	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	172	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	173	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	174	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	175	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	176	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	177	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	178	##ADDR##	procdefn	0	#HEAD#	#TAIL#	770
	179	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	180	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	181	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	182	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	183	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	184	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	185	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	186	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	187	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	188	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	189	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	190	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	191	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	192	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	193	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	194	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	195	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	196	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	197	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	198	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	199	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	200	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	201	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	202	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	203	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	204	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	205	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	206	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	207	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	208	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	209	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	210	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	211	##ADDR##	proccoll	0	#HEAD#	#TAIL#	69
	212	##ADDR##	procdefn	0	#HEAD#	#TAIL#	771
	213	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	214	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	215	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	216	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	217	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	218	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	219	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	220	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	221	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	222	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	223	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	224	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	225	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	226	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	227	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	228	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	229	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	230	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	231	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	232	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	233	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	234	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	235	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	236	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	237	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	238	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	239	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	240	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	241	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	242	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	243	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	244	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	245	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	246	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	247	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	248	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	249	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	250	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	251	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	252	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	253	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	254	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	255	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	256	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	257	##ADDR##	proccoll	0	#HEAD#	#TAIL#	60
	258	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	259	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	260	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	261	##ADDR##	proccoll	0	#HEAD#	#TAIL#	68
	262	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	263	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	264	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	265	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	266	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	267	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	268	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	269	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	270	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	271	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	272	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	273	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	274	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	275	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	276	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	277	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	278	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	279	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	280	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	281	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	282	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	283	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	284	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	285	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	286	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	287	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	288	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	289	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	290	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	291	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	292	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	293	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	294	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	295	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	296	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	297	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	298	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	299	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	300	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	301	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	302	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	303	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	304	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	305	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	306	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	307	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	308	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	309	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	310	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	311	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	312	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	313	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	314	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	315	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	316	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	317	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	318	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	319	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	320	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	321	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	322	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	323	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	324	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	325	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	326	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  14 instantiation-collections
  0 sub-namespaces
  6 definitions
  0 typedefs
  Definitions:
    e1of2 = process-definition (defined) e1of2(
        bool<> d

        bool<> t
        bool<> f
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> d

        e = bool<> e
        f = bool<> f
        t = bool<> t
      unroll sequence: 
        bool<> d[0..1]
        bool<> t
        bool<> f
        bool<> e
        d[0] = f;
        d[1] = t;
      footprint: {
        bool^1 d
          unrolled indices: {
            0 = ::e1of2::f (1) 
            1 = ::e1of2::t (2) 
          }
        bool^0 e (instantiated) = ::e1of2::e (3) 
        bool^0 f (instantiated) = ::e1of2::d[0] (1) 
        bool^0 t (instantiated) = ::e1of2::d[1] (2) 
        bool instance pool:
        1	::e1of2::d[0]
        2	::e1of2::d[1]
        3	::e1of2::e
        bool port aliases:
        1: ::e1of2::d[0] = ::e1of2::f
        2: ::e1of2::d[1] = ::e1of2::t
      }
      }

    globals = process-definition (defined) globals(
      )
      In definition "globals", we have: {
      unroll sequence: 
      footprint: {
      }
      }

    merge = process-definition (defined) merge(
        globals<> g
        e1of2<> a
        e1of2<> b
        e1of2<> c
        e1of2<> x
      )
      In definition "merge", we have: {
      Instances:
        a = e1of2<> a
        b = e1of2<> b
        c = e1of2<> c
        g = globals<> g
        x = e1of2<> x
      unroll sequence: 
        globals<> g
        e1of2<> a
        e1of2<> b
        e1of2<> c
        e1of2<> x
      footprint: {
        process e1of2<>^0 a (instantiated) = ::merge::a (2) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::a.f (1) 
              1 = ::merge::a.t (2) 
            }
          bool^0 t (instantiated) = ::merge::a.d[1] (2) 
          bool^0 f (instantiated) = ::merge::a.d[0] (1) 
          bool^0 e (instantiated) = ::merge::a.e (3) 
        )
        process e1of2<>^0 b (instantiated) = ::merge::b (3) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::b.f (4) 
              1 = ::merge::b.t (5) 
            }
          bool^0 t (instantiated) = ::merge::b.d[1] (5) 
          bool^0 f (instantiated) = ::merge::b.d[0] (4) 
          bool^0 e (instantiated) = ::merge::b.e (6) 
        )
        process e1of2<>^0 c (instantiated) = ::merge::c (4) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::c.f (7) 
              1 = ::merge::c.t (8) 
            }
          bool^0 t (instantiated) = ::merge::c.d[1] (8) 
          bool^0 f (instantiated) = ::merge::c.d[0] (7) 
          bool^0 e (instantiated) = ::merge::c.e (9) 
        )
        process globals<>^0 g (instantiated) = ::merge::g (1) 
        process e1of2<>^0 x (instantiated) = ::merge::x (5) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::x.f (10) 
              1 = ::merge::x.t (11) 
            }
          bool^0 t (instantiated) = ::merge::x.d[1] (11) 
          bool^0 f (instantiated) = ::merge::x.d[0] (10) 
          bool^0 e (instantiated) = ::merge::x.e (12) 
        )
        process instance pool:
        1	::merge::g
        2	::merge::a
        3	::merge::b
        4	::merge::c
        5	::merge::x
        bool instance pool:
        1	::merge::a.d[0]
        2	::merge::a.d[1]
        3	::merge::a.e
        4	::merge::b.d[0]
        5	::merge::b.d[1]
        6	::merge::b.e
        7	::merge::c.d[0]
        8	::merge::c.d[1]
        9	::merge::c.e
        10	::merge::x.d[0]
        11	::merge::x.d[1]
        12	::merge::x.e
        bool port aliases:
        1: ::merge::a.d[0] = ::merge::a.f
        2: ::merge::a.d[1] = ::merge::a.t
        4: ::merge::b.d[0] = ::merge::b.f
        5: ::merge::b.d[1] = ::merge::b.t
        7: ::merge::c.d[0] = ::merge::c.f
        8: ::merge::c.d[1] = ::merge::c.t
        10: ::merge::x.d[0] = ::merge::x.f
        11: ::merge::x.d[1] = ::merge::x.t
      }
      }

    source_e1of2_1 = process-definition (defined) source_e1of2_1(
        globals<> g
        e1of2<> r
      )
      In definition "source_e1of2_1", we have: {
      Instances:
        g = globals<> g
        r = e1of2<> r
      unroll sequence: 
        globals<> g
        e1of2<> r
      footprint: {
        process globals<>^0 g (instantiated) = ::source_e1of2_1::g (1) 
        process e1of2<>^0 r (instantiated) = ::source_e1of2_1::r (2) (
          bool^1 d
            unrolled indices: {
              0 = ::source_e1of2_1::r.f (1) 
              1 = ::source_e1of2_1::r.t (2) 
            }
          bool^0 t (instantiated) = ::source_e1of2_1::r.d[1] (2) 
          bool^0 f (instantiated) = ::source_e1of2_1::r.d[0] (1) 
          bool^0 e (instantiated) = ::source_e1of2_1::r.e (3) 
        )
        process instance pool:
        1	::source_e1of2_1::g
        2	::source_e1of2_1::r
        bool instance pool:
        1	::source_e1of2_1::r.d[0]
        2	::source_e1of2_1::r.d[1]
        3	::source_e1of2_1::r.e
        bool port aliases:
        1: ::source_e1of2_1::r.d[0] = ::source_e1of2_1::r.f
        2: ::source_e1of2_1::r.d[1] = ::source_e1of2_1::r.t
      }
      }

    split4 = process-definition (defined) split4(
        globals<> g
        e1of2<> l
        e1of2<> c
        e1of2<> a
        e1of2<> b
      )
      In definition "split4", we have: {
      Instances:
        a = e1of2<> a
        b = e1of2<> b
        c = e1of2<> c
        g = globals<> g
        l = e1of2<> l
      unroll sequence: 
        globals<> g
        e1of2<> l
        e1of2<> c
        e1of2<> a
        e1of2<> b
      footprint: {
        process e1of2<>^0 a (instantiated) = ::split4::a (4) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::a.f (7) 
              1 = ::split4::a.t (8) 
            }
          bool^0 t (instantiated) = ::split4::a.d[1] (8) 
          bool^0 f (instantiated) = ::split4::a.d[0] (7) 
          bool^0 e (instantiated) = ::split4::a.e (9) 
        )
        process e1of2<>^0 b (instantiated) = ::split4::b (5) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::b.f (10) 
              1 = ::split4::b.t (11) 
            }
          bool^0 t (instantiated) = ::split4::b.d[1] (11) 
          bool^0 f (instantiated) = ::split4::b.d[0] (10) 
          bool^0 e (instantiated) = ::split4::b.e (12) 
        )
        process e1of2<>^0 c (instantiated) = ::split4::c (3) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::c.f (4) 
              1 = ::split4::c.t (5) 
            }
          bool^0 t (instantiated) = ::split4::c.d[1] (5) 
          bool^0 f (instantiated) = ::split4::c.d[0] (4) 
          bool^0 e (instantiated) = ::split4::c.e (6) 
        )
        process globals<>^0 g (instantiated) = ::split4::g (1) 
        process e1of2<>^0 l (instantiated) = ::split4::l (2) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::l.f (1) 
              1 = ::split4::l.t (2) 
            }
          bool^0 t (instantiated) = ::split4::l.d[1] (2) 
          bool^0 f (instantiated) = ::split4::l.d[0] (1) 
          bool^0 e (instantiated) = ::split4::l.e (3) 
        )
        process instance pool:
        1	::split4::g
        2	::split4::l
        3	::split4::c
        4	::split4::a
        5	::split4::b
        bool instance pool:
        1	::split4::l.d[0]
        2	::split4::l.d[1]
        3	::split4::l.e
        4	::split4::c.d[0]
        5	::split4::c.d[1]
        6	::split4::c.e
        7	::split4::a.d[0]
        8	::split4::a.d[1]
        9	::split4::a.e
        10	::split4::b.d[0]
        11	::split4::b.d[1]
        12	::split4::b.e
        bool port aliases:
        1: ::split4::l.d[0] = ::split4::l.f
        2: ::split4::l.d[1] = ::split4::l.t
        4: ::split4::c.d[0] = ::split4::c.f
        5: ::split4::c.d[1] = ::split4::c.t
        7: ::split4::a.d[0] = ::split4::a.f
        8: ::split4::a.d[1] = ::split4::a.t
        10: ::split4::b.d[0] = ::split4::b.f
        11: ::split4::b.d[1] = ::split4::b.t
      }
      }

    upcopy = process-definition (defined) upcopy(
        e1of2<> l
        e1of2<> r
      )
      In definition "upcopy", we have: {
      Instances:
        l = e1of2<> l
        r = e1of2<> r
      unroll sequence: 
        e1of2<> l
        e1of2<> r
        l.d = r.d;
      footprint: {
        process e1of2<>^0 l (instantiated) = ::upcopy::l (1) (
          bool^1 d
            unrolled indices: {
              0 = ::upcopy::r.f (1) 
              1 = ::upcopy::r.t (2) 
            }
          bool^0 t (instantiated) = ::upcopy::l.d[1] (2) 
          bool^0 f (instantiated) = ::upcopy::l.d[0] (1) 
          bool^0 e (instantiated) = ::upcopy::l.e (3) 
        )
        process e1of2<>^0 r (instantiated) = ::upcopy::r (2) (
          bool^1 d
            unrolled indices: {
              0 = ::upcopy::l.f (1) 
              1 = ::upcopy::l.t (2) 
            }
          bool^0 t (instantiated) = ::upcopy::r.d[1] (2) 
          bool^0 f (instantiated) = ::upcopy::r.d[0] (1) 
          bool^0 e (instantiated) = ::upcopy::r.e (4) 
        )
        process instance pool:
        1	::upcopy::l
        2	::upcopy::r
        bool instance pool:
        1	::upcopy::l.d[0]
        2	::upcopy::l.d[1]
        3	::upcopy::l.e
        4	::upcopy::r.e
        bool port aliases:
        1: ::upcopy::l.d[0] = ::upcopy::l.f = ::upcopy::r.d[0] = ::upcopy::r.f
        2: ::upcopy::l.d[1] = ::upcopy::l.t = ::upcopy::r.d[1] = ::upcopy::r.t
      }
      }

  Instances:
    cpywcon = process upcopy<>^0 cpywcon (instantiated) = ::cpywcon (14) (
      process e1of2<>^0 l (instantiated) = ::wcon (13) (
        bool^1 d
          unrolled indices: {
            0 = ::cpywcon.l.f (4) 
            1 = ::cpywcon.l.t (5) 
          }
        bool^0 t (instantiated) = ::cpywcon.r.d[1] (5) 
        bool^0 f (instantiated) = ::cpywcon.r.d[0] (4) 
        bool^0 e (instantiated) = ::cpywcon.l.e (25) 
      )
      process e1of2<>^0 r (instantiated) = ::splt.c (4) (
        bool^1 d
          unrolled indices: {
            0 = ::cpywcon.r.f (4) 
            1 = ::cpywcon.r.t (5) 
          }
        bool^0 t (instantiated) = ::cpywcon.l.d[1] (5) 
        bool^0 f (instantiated) = ::cpywcon.l.d[0] (4) 
        bool^0 e (instantiated) = ::cpywcon.r.e (6) 
      )
    )
    g = process globals<>^0 g (instantiated) = ::srcwcon.g (2) 
    ja = process e1of2<>^0 ja (instantiated) = ::splt.a (5) (
      bool^1 d
        unrolled indices: {
          0 = ::ja.f (7) 
          1 = ::ja.t (8) 
        }
      bool^0 t (instantiated) = ::ja.d[1] (8) 
      bool^0 f (instantiated) = ::ja.d[0] (7) 
      bool^0 e (instantiated) = ::ja.e (9) 
    )
    jb = process e1of2<>^0 jb (instantiated) = ::splt.b (6) (
      bool^1 d
        unrolled indices: {
          0 = ::jb.f (10) 
          1 = ::jb.t (11) 
        }
      bool^0 t (instantiated) = ::jb.d[1] (11) 
      bool^0 f (instantiated) = ::jb.d[0] (10) 
      bool^0 e (instantiated) = ::jb.e (12) 
    )
    l = process e1of2<>^0 l (instantiated) = ::splt.l (3) (
      bool^1 d
        unrolled indices: {
          0 = ::l.f (1) 
          1 = ::l.t (2) 
        }
      bool^0 t (instantiated) = ::l.d[1] (2) 
      bool^0 f (instantiated) = ::l.d[0] (1) 
      bool^0 e (instantiated) = ::l.e (3) 
    )
    mrg = process merge<>^0 mrg (instantiated) = ::mrg (7) (
      process globals<>^0 g (instantiated) = ::splt.g (2) 
      process e1of2<>^0 a (instantiated) = ::xa (8) (
        bool^1 d
          unrolled indices: {
            0 = ::mrg.a.f (13) 
            1 = ::mrg.a.t (14) 
          }
        bool^0 t (instantiated) = ::mrg.a.d[1] (14) 
        bool^0 f (instantiated) = ::mrg.a.d[0] (13) 
        bool^0 e (instantiated) = ::mrg.a.e (15) 
      )
      process e1of2<>^0 b (instantiated) = ::xb (9) (
        bool^1 d
          unrolled indices: {
            0 = ::mrg.b.f (16) 
            1 = ::mrg.b.t (17) 
          }
        bool^0 t (instantiated) = ::mrg.b.d[1] (17) 
        bool^0 f (instantiated) = ::mrg.b.d[0] (16) 
        bool^0 e (instantiated) = ::mrg.b.e (18) 
      )
      process e1of2<>^0 c (instantiated) = ::wconm (10) (
        bool^1 d
          unrolled indices: {
            0 = ::mrg.c.f (19) 
            1 = ::mrg.c.t (20) 
          }
        bool^0 t (instantiated) = ::mrg.c.d[1] (20) 
        bool^0 f (instantiated) = ::mrg.c.d[0] (19) 
        bool^0 e (instantiated) = ::mrg.c.e (21) 
      )
      process e1of2<>^0 x (instantiated) = ::xw (11) (
        bool^1 d
          unrolled indices: {
            0 = ::mrg.x.f (22) 
            1 = ::mrg.x.t (23) 
          }
        bool^0 t (instantiated) = ::mrg.x.d[1] (23) 
        bool^0 f (instantiated) = ::mrg.x.d[0] (22) 
        bool^0 e (instantiated) = ::mrg.x.e (24) 
      )
    )
    splt = process split4<>^0 splt (instantiated) = ::splt (1) (
      process globals<>^0 g (instantiated) = ::g (2) 
      process e1of2<>^0 l (instantiated) = ::l (3) (
        bool^1 d
          unrolled indices: {
            0 = ::splt.l.f (1) 
            1 = ::splt.l.t (2) 
          }
        bool^0 t (instantiated) = ::splt.l.d[1] (2) 
        bool^0 f (instantiated) = ::splt.l.d[0] (1) 
        bool^0 e (instantiated) = ::splt.l.e (3) 
      )
      process e1of2<>^0 c (instantiated) = ::wcons (4) (
        bool^1 d
          unrolled indices: {
            0 = ::splt.c.f (4) 
            1 = ::splt.c.t (5) 
          }
        bool^0 t (instantiated) = ::splt.c.d[1] (5) 
        bool^0 f (instantiated) = ::splt.c.d[0] (4) 
        bool^0 e (instantiated) = ::splt.c.e (6) 
      )
      process e1of2<>^0 a (instantiated) = ::ja (5) (
        bool^1 d
          unrolled indices: {
            0 = ::splt.a.f (7) 
            1 = ::splt.a.t (8) 
          }
        bool^0 t (instantiated) = ::splt.a.d[1] (8) 
        bool^0 f (instantiated) = ::splt.a.d[0] (7) 
        bool^0 e (instantiated) = ::splt.a.e (9) 
      )
      process e1of2<>^0 b (instantiated) = ::jb (6) (
        bool^1 d
          unrolled indices: {
            0 = ::splt.b.f (10) 
            1 = ::splt.b.t (11) 
          }
        bool^0 t (instantiated) = ::splt.b.d[1] (11) 
        bool^0 f (instantiated) = ::splt.b.d[0] (10) 
        bool^0 e (instantiated) = ::splt.b.e (12) 
      )
    )
    srcwcon = process source_e1of2_1<>^0 srcwcon (instantiated) = ::srcwcon (12) (
      process globals<>^0 g (instantiated) = ::mrg.g (2) 
      process e1of2<>^0 r (instantiated) = ::cpywcon.l (13) (
        bool^1 d
          unrolled indices: {
            0 = ::srcwcon.r.f (4) 
            1 = ::srcwcon.r.t (5) 
          }
        bool^0 t (instantiated) = ::srcwcon.r.d[1] (5) 
        bool^0 f (instantiated) = ::srcwcon.r.d[0] (4) 
        bool^0 e (instantiated) = ::srcwcon.r.e (25) 
      )
    )
    wcon = process e1of2<>^0 wcon (instantiated) = ::srcwcon.r (13) (
      bool^1 d
        unrolled indices: {
          0 = ::wcon.f (4) 
          1 = ::wcon.t (5) 
        }
      bool^0 t (instantiated) = ::wcon.d[1] (5) 
      bool^0 f (instantiated) = ::wcon.d[0] (4) 
      bool^0 e (instantiated) = ::wcon.e (25) 
    )
    wconm = process e1of2<>^0 wconm (instantiated) = ::mrg.c (10) (
      bool^1 d
        unrolled indices: {
          0 = ::wconm.f (19) 
          1 = ::wconm.t (20) 
        }
      bool^0 t (instantiated) = ::wconm.d[1] (20) 
      bool^0 f (instantiated) = ::wconm.d[0] (19) 
      bool^0 e (instantiated) = ::wconm.e (21) 
    )
    wcons = process e1of2<>^0 wcons (instantiated) = ::cpywcon.r (4) (
      bool^1 d
        unrolled indices: {
          0 = ::wcons.f (4) 
          1 = ::wcons.t (5) 
        }
      bool^0 t (instantiated) = ::wcons.d[1] (5) 
      bool^0 f (instantiated) = ::wcons.d[0] (4) 
      bool^0 e (instantiated) = ::wcons.e (6) 
    )
    xa = process e1of2<>^0 xa (instantiated) = ::mrg.a (8) (
      bool^1 d
        unrolled indices: {
          0 = ::xa.f (13) 
          1 = ::xa.t (14) 
        }
      bool^0 t (instantiated) = ::xa.d[1] (14) 
      bool^0 f (instantiated) = ::xa.d[0] (13) 
      bool^0 e (instantiated) = ::xa.e (15) 
    )
    xb = process e1of2<>^0 xb (instantiated) = ::mrg.b (9) (
      bool^1 d
        unrolled indices: {
          0 = ::xb.f (16) 
          1 = ::xb.t (17) 
        }
      bool^0 t (instantiated) = ::xb.d[1] (17) 
      bool^0 f (instantiated) = ::xb.d[0] (16) 
      bool^0 e (instantiated) = ::xb.e (18) 
    )
    xw = process e1of2<>^0 xw (instantiated) = ::mrg.x (11) (
      bool^1 d
        unrolled indices: {
          0 = ::xw.f (22) 
          1 = ::xw.t (23) 
        }
      bool^0 t (instantiated) = ::xw.d[1] (23) 
      bool^0 f (instantiated) = ::xw.d[0] (22) 
      bool^0 e (instantiated) = ::xw.e (24) 
    )
}

Created state:
process instance pool:
1	::splt
2	::g
3	::l
4	::wcons
5	::ja
6	::jb
7	::mrg
8	::xa
9	::xb
10	::wconm
11	::xw
12	::srcwcon
13	::wcon
14	::cpywcon
bool instance pool:
1	::l.d[0]
2	::l.d[1]
3	::l.e
4	::wcons.d[0]
5	::wcons.d[1]
6	::wcons.e
7	::ja.d[0]
8	::ja.d[1]
9	::ja.e
10	::jb.d[0]
11	::jb.d[1]
12	::jb.e
13	::xa.d[0]
14	::xa.d[1]
15	::xa.e
16	::xb.d[0]
17	::xb.d[1]
18	::xb.e
19	::wconm.d[0]
20	::wconm.d[1]
21	::wconm.e
22	::xw.d[0]
23	::xw.d[1]
24	::xw.e
25	::wcon.e

