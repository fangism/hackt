
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	100
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	60
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	347
	5	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	6	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	140
	9	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	10	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	procdefn	0	#HEAD#	#TAIL#	346
	13	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	17	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	36	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	38	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	45	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	48	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	50	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	52	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	58	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	59	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	60	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	61	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	64	##ADDR##	proccoll	0	#HEAD#	#TAIL#	65
	65	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	66	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	67	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	70	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	71	##ADDR##	procdefn	0	#HEAD#	#TAIL#	407
	72	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	73	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	74	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	76	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	77	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	78	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	79	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	81	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	84	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	85	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	86	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	88	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	89	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	90	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	91	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	92	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	93	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	94	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	95	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	96	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	97	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	98	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	99	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	100	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	101	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	102	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	103	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	104	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	105	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	106	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	107	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	108	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	109	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	110	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	111	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	112	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	113	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	114	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	115	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	116	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	117	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	118	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	119	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	120	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	121	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	122	##ADDR##	procdefn	0	#HEAD#	#TAIL#	770
	123	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	124	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	125	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	126	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	127	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	128	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	129	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	130	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	131	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	132	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	133	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	134	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	135	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	136	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	137	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	138	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	139	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	140	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	141	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	142	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	143	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	144	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	145	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	146	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	147	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	148	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	149	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	150	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	151	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	152	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	153	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	154	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	155	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	156	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	157	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	158	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	159	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	160	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	161	##ADDR##	proccoll	0	#HEAD#	#TAIL#	69
	162	##ADDR##	procdefn	0	#HEAD#	#TAIL#	771
	163	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	164	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	165	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	166	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	167	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	168	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	169	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	170	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	171	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	172	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	173	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	174	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	175	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	176	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	177	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	178	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	179	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	180	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	181	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	182	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	183	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	184	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	185	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	186	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	187	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	188	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	189	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	190	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	191	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	192	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	193	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	194	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	195	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	196	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	197	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	198	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	199	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	200	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	201	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	202	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	203	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	204	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	205	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	206	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	207	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	208	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	209	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	210	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	211	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	212	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	213	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	214	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	215	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	216	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	217	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	218	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	219	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	220	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	221	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	222	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	223	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	224	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	225	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	226	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	227	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	228	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	229	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	230	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	231	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	232	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	233	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	234	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	235	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	236	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	237	##ADDR##	proccoll	0	#HEAD#	#TAIL#	60
	238	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	239	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	240	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	241	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	242	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	243	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	244	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	245	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	246	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	247	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	248	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	249	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	250	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	251	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	252	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	253	##ADDR##	proccoll	0	#HEAD#	#TAIL#	68
	254	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	255	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	256	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	257	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	258	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	259	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	260	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	261	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	262	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	263	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	264	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	265	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	266	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	267	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	268	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	269	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	270	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	271	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	272	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	273	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	274	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	275	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	276	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	277	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	278	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	279	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	280	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	281	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	282	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	283	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	284	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	285	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	286	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	287	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	288	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	289	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	290	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	291	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	292	##ADDR##	proccoll	0	#HEAD#	#TAIL#	66
	293	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	294	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	295	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	296	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	297	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	298	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	299	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	300	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	301	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	302	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	303	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	304	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	305	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	306	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	307	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	308	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	309	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	310	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	311	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	312	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	313	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	314	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	315	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	316	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	317	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	318	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	319	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	320	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	321	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	322	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	323	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	324	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	325	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	326	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  14 instantiation-collections
  0 sub-namespaces
  6 definitions
  0 typedefs
  Definitions:
    e1of2 = process-definition (defined) e1of2(
        bool<> d

        bool<> t
        bool<> f
        bool<> e
      )
      In definition "e1of2", we have: {
      Instances:
        d = bool<> d

        e = bool<> e
        f = bool<> f
        t = bool<> t
      unroll sequence: 
        bool<> d[0..1]
        bool<> t
        bool<> f
        bool<> e
        d[0] = f;
        d[1] = t;
      footprint: {
        bool^1 d
          unrolled indices: {
            0 = ::e1of2::d[0] (1) 
            1 = ::e1of2::d[1] (2) 
          }
        bool^0 e (instantiated) = ::e1of2::e (3) 
        bool^0 f (instantiated) = ::e1of2::d[0] (1) 
        bool^0 t (instantiated) = ::e1of2::d[1] (2) 
        bool instance pool:
        1	::e1of2::d[0]
        2	::e1of2::d[1]
        3	::e1of2::e
        bool port aliases:
        1: ::e1of2::d[0] = ::e1of2::f
        2: ::e1of2::d[1] = ::e1of2::t
      }
      }

    globals = process-definition (defined) globals(
      )
      In definition "globals", we have: {
      unroll sequence: 
      footprint: {
      }
      }

    merge = process-definition (defined) merge(
        globals<> g
        e1of2<> a
        e1of2<> b
        e1of2<> c
        e1of2<> x
      )
      In definition "merge", we have: {
      Instances:
        a = e1of2<> a
        b = e1of2<> b
        c = e1of2<> c
        g = globals<> g
        x = e1of2<> x
      unroll sequence: 
        globals<> g
        e1of2<> a
        e1of2<> b
        e1of2<> c
        e1of2<> x
      footprint: {
        process e1of2<>^0 a (instantiated) = ::merge::a (1) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::a.d[0] (1) 
              1 = ::merge::a.d[1] (2) 
            }
          bool^0 t (instantiated) = ::merge::a.d[1] (2) 
          bool^0 f (instantiated) = ::merge::a.d[0] (1) 
          bool^0 e (instantiated) = ::merge::a.e (3) 
        )
        process e1of2<>^0 b (instantiated) = ::merge::b (2) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::b.d[0] (4) 
              1 = ::merge::b.d[1] (5) 
            }
          bool^0 t (instantiated) = ::merge::b.d[1] (5) 
          bool^0 f (instantiated) = ::merge::b.d[0] (4) 
          bool^0 e (instantiated) = ::merge::b.e (6) 
        )
        process e1of2<>^0 c (instantiated) = ::merge::c (3) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::c.d[0] (7) 
              1 = ::merge::c.d[1] (8) 
            }
          bool^0 t (instantiated) = ::merge::c.d[1] (8) 
          bool^0 f (instantiated) = ::merge::c.d[0] (7) 
          bool^0 e (instantiated) = ::merge::c.e (9) 
        )
        process globals<>^0 g (instantiated) = ::merge::g (4) 
        process e1of2<>^0 x (instantiated) = ::merge::x (5) (
          bool^1 d
            unrolled indices: {
              0 = ::merge::x.d[0] (10) 
              1 = ::merge::x.d[1] (11) 
            }
          bool^0 t (instantiated) = ::merge::x.d[1] (11) 
          bool^0 f (instantiated) = ::merge::x.d[0] (10) 
          bool^0 e (instantiated) = ::merge::x.e (12) 
        )
        process instance pool:
        1	::merge::a
        2	::merge::b
        3	::merge::c
        4	::merge::g
        5	::merge::x
        bool instance pool:
        1	::merge::a.d[0]
        2	::merge::a.d[1]
        3	::merge::a.e
        4	::merge::b.d[0]
        5	::merge::b.d[1]
        6	::merge::b.e
        7	::merge::c.d[0]
        8	::merge::c.d[1]
        9	::merge::c.e
        10	::merge::x.d[0]
        11	::merge::x.d[1]
        12	::merge::x.e
        bool port aliases:
        1: ::merge::a.d[0] = ::merge::a.f
        2: ::merge::a.d[1] = ::merge::a.t
        4: ::merge::b.d[0] = ::merge::b.f
        5: ::merge::b.d[1] = ::merge::b.t
        7: ::merge::c.d[0] = ::merge::c.f
        8: ::merge::c.d[1] = ::merge::c.t
        10: ::merge::x.d[0] = ::merge::x.f
        11: ::merge::x.d[1] = ::merge::x.t
      }
      }

    source_e1of2_1 = process-definition (defined) source_e1of2_1(
        globals<> g
        e1of2<> r
      )
      In definition "source_e1of2_1", we have: {
      Instances:
        g = globals<> g
        r = e1of2<> r
      unroll sequence: 
        globals<> g
        e1of2<> r
      footprint: {
        process globals<>^0 g (instantiated) = ::source_e1of2_1::g (1) 
        process e1of2<>^0 r (instantiated) = ::source_e1of2_1::r (2) (
          bool^1 d
            unrolled indices: {
              0 = ::source_e1of2_1::r.d[0] (1) 
              1 = ::source_e1of2_1::r.d[1] (2) 
            }
          bool^0 t (instantiated) = ::source_e1of2_1::r.d[1] (2) 
          bool^0 f (instantiated) = ::source_e1of2_1::r.d[0] (1) 
          bool^0 e (instantiated) = ::source_e1of2_1::r.e (3) 
        )
        process instance pool:
        1	::source_e1of2_1::g
        2	::source_e1of2_1::r
        bool instance pool:
        1	::source_e1of2_1::r.d[0]
        2	::source_e1of2_1::r.d[1]
        3	::source_e1of2_1::r.e
        bool port aliases:
        1: ::source_e1of2_1::r.d[0] = ::source_e1of2_1::r.f
        2: ::source_e1of2_1::r.d[1] = ::source_e1of2_1::r.t
      }
      }

    split4 = process-definition (defined) split4(
        globals<> g
        e1of2<> l
        e1of2<> c
        e1of2<> a
        e1of2<> b
      )
      In definition "split4", we have: {
      Instances:
        a = e1of2<> a
        b = e1of2<> b
        c = e1of2<> c
        g = globals<> g
        l = e1of2<> l
      unroll sequence: 
        globals<> g
        e1of2<> l
        e1of2<> c
        e1of2<> a
        e1of2<> b
      footprint: {
        process e1of2<>^0 a (instantiated) = ::split4::a (1) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::a.d[0] (1) 
              1 = ::split4::a.d[1] (2) 
            }
          bool^0 t (instantiated) = ::split4::a.d[1] (2) 
          bool^0 f (instantiated) = ::split4::a.d[0] (1) 
          bool^0 e (instantiated) = ::split4::a.e (3) 
        )
        process e1of2<>^0 b (instantiated) = ::split4::b (2) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::b.d[0] (4) 
              1 = ::split4::b.d[1] (5) 
            }
          bool^0 t (instantiated) = ::split4::b.d[1] (5) 
          bool^0 f (instantiated) = ::split4::b.d[0] (4) 
          bool^0 e (instantiated) = ::split4::b.e (6) 
        )
        process e1of2<>^0 c (instantiated) = ::split4::c (3) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::c.d[0] (7) 
              1 = ::split4::c.d[1] (8) 
            }
          bool^0 t (instantiated) = ::split4::c.d[1] (8) 
          bool^0 f (instantiated) = ::split4::c.d[0] (7) 
          bool^0 e (instantiated) = ::split4::c.e (9) 
        )
        process globals<>^0 g (instantiated) = ::split4::g (4) 
        process e1of2<>^0 l (instantiated) = ::split4::l (5) (
          bool^1 d
            unrolled indices: {
              0 = ::split4::l.d[0] (10) 
              1 = ::split4::l.d[1] (11) 
            }
          bool^0 t (instantiated) = ::split4::l.d[1] (11) 
          bool^0 f (instantiated) = ::split4::l.d[0] (10) 
          bool^0 e (instantiated) = ::split4::l.e (12) 
        )
        process instance pool:
        1	::split4::a
        2	::split4::b
        3	::split4::c
        4	::split4::g
        5	::split4::l
        bool instance pool:
        1	::split4::a.d[0]
        2	::split4::a.d[1]
        3	::split4::a.e
        4	::split4::b.d[0]
        5	::split4::b.d[1]
        6	::split4::b.e
        7	::split4::c.d[0]
        8	::split4::c.d[1]
        9	::split4::c.e
        10	::split4::l.d[0]
        11	::split4::l.d[1]
        12	::split4::l.e
        bool port aliases:
        1: ::split4::a.d[0] = ::split4::a.f
        2: ::split4::a.d[1] = ::split4::a.t
        4: ::split4::b.d[0] = ::split4::b.f
        5: ::split4::b.d[1] = ::split4::b.t
        7: ::split4::c.d[0] = ::split4::c.f
        8: ::split4::c.d[1] = ::split4::c.t
        10: ::split4::l.d[0] = ::split4::l.f
        11: ::split4::l.d[1] = ::split4::l.t
      }
      }

    upcopy = process-definition (defined) upcopy(
        e1of2<> l
        e1of2<> r
      )
      In definition "upcopy", we have: {
      Instances:
        l = e1of2<> l
        r = e1of2<> r
      unroll sequence: 
        e1of2<> l
        e1of2<> r
        l.d = r.d;
      footprint: {
        process e1of2<>^0 l (instantiated) = ::upcopy::l (1) (
          bool^1 d
            unrolled indices: {
              0 = ::upcopy::l.d[0] (1) 
              1 = ::upcopy::l.d[1] (2) 
            }
          bool^0 t (instantiated) = ::upcopy::l.d[1] (2) 
          bool^0 f (instantiated) = ::upcopy::l.d[0] (1) 
          bool^0 e (instantiated) = ::upcopy::l.e (3) 
        )
        process e1of2<>^0 r (instantiated) = ::upcopy::r (2) (
          bool^1 d
            unrolled indices: {
              0 = ::upcopy::l.d[0] (1) 
              1 = ::upcopy::l.d[1] (2) 
            }
          bool^0 t (instantiated) = ::upcopy::l.d[1] (2) 
          bool^0 f (instantiated) = ::upcopy::l.d[0] (1) 
          bool^0 e (instantiated) = ::upcopy::r.e (4) 
        )
        process instance pool:
        1	::upcopy::l
        2	::upcopy::r
        bool instance pool:
        1	::upcopy::l.d[0]
        2	::upcopy::l.d[1]
        3	::upcopy::l.e
        4	::upcopy::r.e
        bool port aliases:
        1: ::upcopy::l.d[0] = ::upcopy::l.f = ::upcopy::r.d[0] = ::upcopy::r.f
        2: ::upcopy::l.d[1] = ::upcopy::l.t = ::upcopy::r.d[1] = ::upcopy::r.t
      }
      }

  Instances:
    cpywcon = process upcopy<>^0 cpywcon (instantiated) = ::cpywcon (10) (
      process e1of2<>^0 l (instantiated) = ::wcon (3) (
        bool^1 d
          unrolled indices: {
            0 = ::wcons.d[0] (1) 
            1 = ::wcons.d[1] (2) 
          }
        bool^0 t (instantiated) = ::wcons.d[1] (2) 
        bool^0 f (instantiated) = ::wcons.d[0] (1) 
        bool^0 e (instantiated) = ::wcon.e (3) 
      )
      process e1of2<>^0 r (instantiated) = ::wcons (7) (
        bool^1 d
          unrolled indices: {
            0 = ::wcons.d[0] (1) 
            1 = ::wcons.d[1] (2) 
          }
        bool^0 t (instantiated) = ::wcons.d[1] (2) 
        bool^0 f (instantiated) = ::wcons.d[0] (1) 
        bool^0 e (instantiated) = ::wcons.e (13) 
      )
    )
    g = process globals<>^0 g (instantiated) = ::g (2) 
    ja = process e1of2<>^0 ja (instantiated) = ::ja (4) (
      bool^1 d
        unrolled indices: {
          0 = ::ja.d[0] (4) 
          1 = ::ja.d[1] (5) 
        }
      bool^0 t (instantiated) = ::ja.d[1] (5) 
      bool^0 f (instantiated) = ::ja.d[0] (4) 
      bool^0 e (instantiated) = ::ja.e (6) 
    )
    jb = process e1of2<>^0 jb (instantiated) = ::jb (5) (
      bool^1 d
        unrolled indices: {
          0 = ::jb.d[0] (7) 
          1 = ::jb.d[1] (8) 
        }
      bool^0 t (instantiated) = ::jb.d[1] (8) 
      bool^0 f (instantiated) = ::jb.d[0] (7) 
      bool^0 e (instantiated) = ::jb.e (9) 
    )
    l = process e1of2<>^0 l (instantiated) = ::l (9) (
      bool^1 d
        unrolled indices: {
          0 = ::l.d[0] (14) 
          1 = ::l.d[1] (15) 
        }
      bool^0 t (instantiated) = ::l.d[1] (15) 
      bool^0 f (instantiated) = ::l.d[0] (14) 
      bool^0 e (instantiated) = ::l.e (16) 
    )
    mrg = process merge<>^0 mrg (instantiated) = ::mrg (11) (
      process globals<>^0 g (instantiated) = ::g (2) 
      process e1of2<>^0 a (instantiated) = ::xa (12) (
        bool^1 d
          unrolled indices: {
            0 = ::xa.d[0] (17) 
            1 = ::xa.d[1] (18) 
          }
        bool^0 t (instantiated) = ::xa.d[1] (18) 
        bool^0 f (instantiated) = ::xa.d[0] (17) 
        bool^0 e (instantiated) = ::xa.e (19) 
      )
      process e1of2<>^0 b (instantiated) = ::xb (13) (
        bool^1 d
          unrolled indices: {
            0 = ::xb.d[0] (20) 
            1 = ::xb.d[1] (21) 
          }
        bool^0 t (instantiated) = ::xb.d[1] (21) 
        bool^0 f (instantiated) = ::xb.d[0] (20) 
        bool^0 e (instantiated) = ::xb.e (22) 
      )
      process e1of2<>^0 c (instantiated) = ::wconm (6) (
        bool^1 d
          unrolled indices: {
            0 = ::wconm.d[0] (10) 
            1 = ::wconm.d[1] (11) 
          }
        bool^0 t (instantiated) = ::wconm.d[1] (11) 
        bool^0 f (instantiated) = ::wconm.d[0] (10) 
        bool^0 e (instantiated) = ::wconm.e (12) 
      )
      process e1of2<>^0 x (instantiated) = ::xw (14) (
        bool^1 d
          unrolled indices: {
            0 = ::xw.d[0] (23) 
            1 = ::xw.d[1] (24) 
          }
        bool^0 t (instantiated) = ::xw.d[1] (24) 
        bool^0 f (instantiated) = ::xw.d[0] (23) 
        bool^0 e (instantiated) = ::xw.e (25) 
      )
    )
    splt = process split4<>^0 splt (instantiated) = ::splt (8) (
      process globals<>^0 g (instantiated) = ::g (2) 
      process e1of2<>^0 l (instantiated) = ::l (9) (
        bool^1 d
          unrolled indices: {
            0 = ::l.d[0] (14) 
            1 = ::l.d[1] (15) 
          }
        bool^0 t (instantiated) = ::l.d[1] (15) 
        bool^0 f (instantiated) = ::l.d[0] (14) 
        bool^0 e (instantiated) = ::l.e (16) 
      )
      process e1of2<>^0 c (instantiated) = ::wcons (7) (
        bool^1 d
          unrolled indices: {
            0 = ::wcons.d[0] (1) 
            1 = ::wcons.d[1] (2) 
          }
        bool^0 t (instantiated) = ::wcons.d[1] (2) 
        bool^0 f (instantiated) = ::wcons.d[0] (1) 
        bool^0 e (instantiated) = ::wcons.e (13) 
      )
      process e1of2<>^0 a (instantiated) = ::ja (4) (
        bool^1 d
          unrolled indices: {
            0 = ::ja.d[0] (4) 
            1 = ::ja.d[1] (5) 
          }
        bool^0 t (instantiated) = ::ja.d[1] (5) 
        bool^0 f (instantiated) = ::ja.d[0] (4) 
        bool^0 e (instantiated) = ::ja.e (6) 
      )
      process e1of2<>^0 b (instantiated) = ::jb (5) (
        bool^1 d
          unrolled indices: {
            0 = ::jb.d[0] (7) 
            1 = ::jb.d[1] (8) 
          }
        bool^0 t (instantiated) = ::jb.d[1] (8) 
        bool^0 f (instantiated) = ::jb.d[0] (7) 
        bool^0 e (instantiated) = ::jb.e (9) 
      )
    )
    srcwcon = process source_e1of2_1<>^0 srcwcon (instantiated) = ::srcwcon (1) (
      process globals<>^0 g (instantiated) = ::g (2) 
      process e1of2<>^0 r (instantiated) = ::wcon (3) (
        bool^1 d
          unrolled indices: {
            0 = ::wcons.d[0] (1) 
            1 = ::wcons.d[1] (2) 
          }
        bool^0 t (instantiated) = ::wcons.d[1] (2) 
        bool^0 f (instantiated) = ::wcons.d[0] (1) 
        bool^0 e (instantiated) = ::wcon.e (3) 
      )
    )
    wcon = process e1of2<>^0 wcon (instantiated) = ::wcon (3) (
      bool^1 d
        unrolled indices: {
          0 = ::wcons.d[0] (1) 
          1 = ::wcons.d[1] (2) 
        }
      bool^0 t (instantiated) = ::wcons.d[1] (2) 
      bool^0 f (instantiated) = ::wcons.d[0] (1) 
      bool^0 e (instantiated) = ::wcon.e (3) 
    )
    wconm = process e1of2<>^0 wconm (instantiated) = ::wconm (6) (
      bool^1 d
        unrolled indices: {
          0 = ::wconm.d[0] (10) 
          1 = ::wconm.d[1] (11) 
        }
      bool^0 t (instantiated) = ::wconm.d[1] (11) 
      bool^0 f (instantiated) = ::wconm.d[0] (10) 
      bool^0 e (instantiated) = ::wconm.e (12) 
    )
    wcons = process e1of2<>^0 wcons (instantiated) = ::wcons (7) (
      bool^1 d
        unrolled indices: {
          0 = ::wcons.d[0] (1) 
          1 = ::wcons.d[1] (2) 
        }
      bool^0 t (instantiated) = ::wcons.d[1] (2) 
      bool^0 f (instantiated) = ::wcons.d[0] (1) 
      bool^0 e (instantiated) = ::wcons.e (13) 
    )
    xa = process e1of2<>^0 xa (instantiated) = ::xa (12) (
      bool^1 d
        unrolled indices: {
          0 = ::xa.d[0] (17) 
          1 = ::xa.d[1] (18) 
        }
      bool^0 t (instantiated) = ::xa.d[1] (18) 
      bool^0 f (instantiated) = ::xa.d[0] (17) 
      bool^0 e (instantiated) = ::xa.e (19) 
    )
    xb = process e1of2<>^0 xb (instantiated) = ::xb (13) (
      bool^1 d
        unrolled indices: {
          0 = ::xb.d[0] (20) 
          1 = ::xb.d[1] (21) 
        }
      bool^0 t (instantiated) = ::xb.d[1] (21) 
      bool^0 f (instantiated) = ::xb.d[0] (20) 
      bool^0 e (instantiated) = ::xb.e (22) 
    )
    xw = process e1of2<>^0 xw (instantiated) = ::xw (14) (
      bool^1 d
        unrolled indices: {
          0 = ::xw.d[0] (23) 
          1 = ::xw.d[1] (24) 
        }
      bool^0 t (instantiated) = ::xw.d[1] (24) 
      bool^0 f (instantiated) = ::xw.d[0] (23) 
      bool^0 e (instantiated) = ::xw.e (25) 
    )
}

Created state:
process instance pool:
1	::srcwcon
2	::g
3	::wcon
4	::ja
5	::jb
6	::wconm
7	::wcons
8	::splt
9	::l
10	::cpywcon
11	::mrg
12	::xa
13	::xb
14	::xw
bool instance pool:
1	::wcons.d[0]
2	::wcons.d[1]
3	::wcon.e
4	::ja.d[0]
5	::ja.d[1]
6	::ja.e
7	::jb.d[0]
8	::jb.d[1]
9	::jb.e
10	::wconm.d[0]
11	::wconm.d[1]
12	::wconm.e
13	::wcons.e
14	::l.d[0]
15	::l.d[1]
16	::l.e
17	::xa.d[0]
18	::xa.d[1]
19	::xa.e
20	::xb.d[0]
21	::xb.d[1]
22	::xb.e
23	::xw.d[0]
24	::xw.d[1]
25	::xw.e

