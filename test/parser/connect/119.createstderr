
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	64
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	88
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	9	##ADDR##	footprnt	0	#HEAD#	#TAIL#	282
	10	##ADDR##	procdefn	0	#HEAD#	#TAIL#	88
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	13	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	footprnt	0	#HEAD#	#TAIL#	323
	16	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	88
	18	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	19	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	footprnt	0	#HEAD#	#TAIL#	356
	23	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	24	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	25	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	26	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	27	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	28	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	29	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	40	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	43	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	48	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	52	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	58	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	59	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	62	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	63	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	66	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	838
	69	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	70	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	71	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	72	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	74	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  8 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        bool<> a
      )
      In definition "bar", we have: {
      Instances:
        a = bool<> bar::a
      unroll sequence: 
        ports: (
          bool<> a
        )
      footprint: {
        a = bool^0 = bar<>::a (1) 
        Created state:
        bool instance pool:
        1	bar<>::a
      }
      }

    foo = process-definition (defined) foo(
        bar<> b
      )
      In definition "foo", we have: {
      Instances:
        b = bar<> foo::b
      unroll sequence: 
        ports: (
          bar<> b
        )
      footprint: {
        b = process bar<>^0 = foo<>::b (1) (
          a = bool^0 = foo<>::b.a (1) 
        )
        Created state:
        process instance pool:
        1	foo<>::b
        bool instance pool:
        1	foo<>::b.a
      }
      }

    ick = process-definition (defined) ick(
        foo<> x
      )
      In definition "ick", we have: {
      Instances:
        x = foo<> ick::x
      unroll sequence: 
        ports: (
          foo<> x
        )
      footprint: {
        x = process foo<>^0 = ick<>::x (1) (
          b = process bar<>^0 = ick<>::x.b (2) (
            a = bool^0 = ick<>::x.b.a (1) 
          )
        )
        Created state:
        process instance pool:
        1	ick<>::x
        2	ick<>::x.b
        bool instance pool:
        1	ick<>::x.b.a
      }
      }

  Instances:
    j = foo<> j
    k = foo<> k
    m = ick<> m
    n = ick<> n
    p = bar<> p
    q = bar<> q
    x = bool<> x
    y = bool<> y
}

footprint: {
  j = process foo<>^0 = j (2) (
    b = process bar<>^0 = p (1) (
      a = bool^0 = x (1) 
    )
  )
  k = process foo<>^0 = j (2) (
    b = process bar<>^0 = p (1) (
      a = bool^0 = x (1) 
    )
  )
  m = process ick<>^0 = m (3) (
    x = process foo<>^0 = j (2) (
      b = process bar<>^0 = p (1) (
        a = bool^0 = x (1) 
      )
    )
  )
  n = process ick<>^0 = m (3) (
    x = process foo<>^0 = j (2) (
      b = process bar<>^0 = p (1) (
        a = bool^0 = x (1) 
      )
    )
  )
  p = process bar<>^0 = p (1) (
    a = bool^0 = x (1) 
  )
  q = process bar<>^0 = p (1) (
    a = bool^0 = x (1) 
  )
  x = bool^0 = x (1) 
  y = bool^0 = x (1) 
  Created state:
  process instance pool:
  1	p
  2	j
  3	m
  bool instance pool:
  1	x
}
