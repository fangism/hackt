
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	64
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	188
	5	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	6	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	172
	9	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	14	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	15	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	17	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	18	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	21	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	23	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	27	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	29	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	30	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	31	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	32	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	33	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	36	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	37	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	38	##ADDR##	procdefn	0	#HEAD#	#TAIL#	204
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	43	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	44	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	48	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	50	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	52	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	55	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	56	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	57	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	58	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	59	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	60	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	61	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	63	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	65	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	66	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	67	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	68	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	69	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	70	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	71	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	74	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	77	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	80	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	83	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	84	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	87	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	88	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	91	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  8 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        bool<> a
      )
      In definition "bar", we have: {
      Instances:
        a = bool<> a
      unroll sequence: 
        bool<> a
      footprint: {
        bool^0 a (instantiated) = ::bar::a (1) 
        bool instance pool:
        1	::bar::a
      }
      }

    foo = process-definition (defined) foo(
        bar<> b
      )
      In definition "foo", we have: {
      Instances:
        b = bar<> b
      unroll sequence: 
        bar<> b
      footprint: {
        process bar<>^0 b (instantiated) = ::foo::b (1) (
          bool^0 a (instantiated) = ::foo::b.a (1) 
        )
        process instance pool:
        1	::foo::b
        bool instance pool:
        1	::foo::b.a
      }
      }

    ick = process-definition (defined) ick(
        foo<> x
      )
      In definition "ick", we have: {
      Instances:
        x = foo<> x
      unroll sequence: 
        foo<> x
      footprint: {
        process foo<>^0 x (instantiated) = ::ick::x (1) (
          process bar<>^0 b (instantiated) = ::ick::x.b (2) (
            bool^0 a (instantiated) = ::ick::x.b.a (1) 
          )
        )
        process instance pool:
        1	::ick::x
        2	::ick::x.b
        bool instance pool:
        1	::ick::x.b.a
      }
      }

  Instances:
    j = process foo<>^0 j (instantiated) = ::j (1) (
      process bar<>^0 b (instantiated) = ::p (2) (
        bool^0 a (instantiated) = ::x (1) 
      )
    )
    k = process foo<>^0 k (instantiated) = ::j (1) (
      process bar<>^0 b (instantiated) = ::p (2) (
        bool^0 a (instantiated) = ::x (1) 
      )
    )
    m = process ick<>^0 m (instantiated) = ::m (3) (
      process foo<>^0 x (instantiated) = ::j (1) (
        process bar<>^0 b (instantiated) = ::p (2) (
          bool^0 a (instantiated) = ::x (1) 
        )
      )
    )
    n = process ick<>^0 n (instantiated) = ::m (3) (
      process foo<>^0 x (instantiated) = ::j (1) (
        process bar<>^0 b (instantiated) = ::p (2) (
          bool^0 a (instantiated) = ::x (1) 
        )
      )
    )
    p = process bar<>^0 p (instantiated) = ::p (2) (
      bool^0 a (instantiated) = ::x (1) 
    )
    q = process bar<>^0 q (instantiated) = ::p (2) (
      bool^0 a (instantiated) = ::x (1) 
    )
    x = bool^0 x (instantiated) = ::x (1) 
    y = bool^0 y (instantiated) = ::x (1) 
}

Created state:
process instance pool:
1	::j
2	::p
3	::m
bool instance pool:
1	::x

