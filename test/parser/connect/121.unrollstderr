
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	68
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	71
	4	##ADDR##	pboolcol	0	#HEAD#	#TAIL#	31
	5	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	6	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	7	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	164
	10	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	11	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	procdefn	0	#HEAD#	#TAIL#	164
	14	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	15	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	18	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	19	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	20	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	21	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	22	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	23	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	24	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	25	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	26	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	27	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	28	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	32	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	36	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	37	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	39	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	43	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	44	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	52	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	54	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	55	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	56	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	58	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	59	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	61	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	65	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	66	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	67	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	70	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	71	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	72	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	73	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	74	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	75	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	76	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	77	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	78	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	79	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	80	##ADDR##	procdefn	0	#HEAD#	#TAIL#	164
	81	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	82	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	83	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	85	##ADDR##	proccoll	0	#HEAD#	#TAIL#	51
	86	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	87	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	88	##ADDR##	proccoll	0	#HEAD#	#TAIL#	59
	89	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	91	##ADDR##	portconn	0	#HEAD#	#TAIL#	20
	92	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	93	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	94	##ADDR##	portconn	0	#HEAD#	#TAIL#	20
	95	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	96	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	97	##ADDR##	portconn	0	#HEAD#	#TAIL#	20
	98	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	99	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	100	##ADDR##	portconn	0	#HEAD#	#TAIL#	20
	101	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	102	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	103	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	104	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	105	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	106	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	107	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	108	##ADDR##	mprocref	0	#HEAD#	#TAIL#	24
	109	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	110	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	111	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	112	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	113	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  8 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        mybool<> a
      )
      In definition "bar", we have: {
      Instances:
        a = mybool<> a
      footprint: {
        process mybool<>^0 a (instantiated) = ::bar::a 
      }
      }

    foo = process-definition (defined) foo(
        bar<> b
      )
      In definition "foo", we have: {
      Instances:
        b = bar<> b
      footprint: {
        process bar<>^0 b (instantiated) = ::foo::b (
          process mybool<>^0 a (instantiated) = ::foo::b.a 
        )
      }
      }

    ick = process-definition (defined) ick(
        foo<> x
      )
      In definition "ick", we have: {
      Instances:
        x = foo<> x
      footprint: {
        process foo<>^0 x (instantiated) = ::ick::x (
          process bar<>^0 b (instantiated) = ::ick::x.b (
            process mybool<>^0 a (instantiated) = ::ick::x.b.a 
          )
        )
      }
      }

    mybool = process-definition (defined) mybool<>
<
      pbool<> B
      >(
      )
      In definition "mybool", we have: {
      Parameters:
        B = pbool<> B
      }

  Instances:
    j = process foo<>^0 j (instantiated) = ::m.x (
      process bar<>^0 b (instantiated) = ::q (
        process mybool<>^0 a (instantiated) = ::j.b.a 
      )
    )
    k = process foo<>^0 k (instantiated) = ::n.x (
      process bar<>^0 b (instantiated) = ::p (
        process mybool<>^0 a (instantiated) = ::k.b.a 
      )
    )
    m = process ick<>^0 m (instantiated) = ::n (
      process foo<>^0 x (instantiated) = ::j (
        process bar<>^0 b (instantiated) = ::m.x.b (
          process mybool<>^0 a (instantiated) = ::m.x.b.a 
        )
      )
    )
    n = process ick<>^0 n (instantiated) = ::m (
      process foo<>^0 x (instantiated) = ::k (
        process bar<>^0 b (instantiated) = ::n.x.b (
          process mybool<>^0 a (instantiated) = ::n.x.b.a 
        )
      )
    )
    p = process bar<>^0 p (instantiated) = ::k.b (
      process mybool<>^0 a (instantiated)<true> = ::x 
    )
    q = process bar<>^0 q (instantiated) = ::j.b (
      process mybool<>^0 a (instantiated)<false> = ::y 
    )
    x = process mybool<>^0 x (instantiated)<true> = ::p.a 
    y = process mybool<>^0 y (instantiated)<false> = ::q.a 
}

