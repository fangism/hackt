
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	120
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	14	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	24	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	mdintref	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	mdintref	0	#HEAD#	#TAIL#	20
	33	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	footprnt	0	#HEAD#	#TAIL#	426
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> X
      pint<> Y
      >(
        int<bar::X> a
        int<bar::Y> b
      )
      In definition "bar", we have: {
      Parameters:
        X = pint<> bar::X
        Y = pint<> bar::Y
      Instances:
        a = int<bar::X> bar::a
        b = int<bar::Y> bar::b
      unroll sequence: 
        ports: (
          int<bar::X> a
          int<bar::Y> b
        )
      footprint collection: {
        <2, 3> {
          X = pint^0 value: 2
          Y = pint^0 value: 3
          a = int<2>^0 = bar<2, 3>::a (1) 
          b = int<3>^0 = bar<2, 3>::b (2) 
          Created state:
          int instance pool:
          1	bar<2, 3>::a
          2	bar<2, 3>::b
        }
      }
      }

  Instances:
    w = bar<2, 3> w
    z = bar<2, 3> z
}

footprint: {
  w = process bar<2, 3>^0 = w (1) (
    a = int<2>^0 = w.a (1) 
    b = int<3>^0 = w.b (2) 
  )
  z = process bar<2, 3>^0 = z (2) (
    a = int<2>^0 = w.a (1) 
    b = int<3>^0 = z.b (3) 
  )
  Created state:
  process instance pool:
  1	w
  2	z
  int instance pool:
  1	w.a
  2	w.b
  3	z.b
}
