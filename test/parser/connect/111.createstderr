
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	4	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	193
	7	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	11	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	15	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	17	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	19	##ADDR##	proccoll	0	#HEAD#	#TAIL#	63
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	23	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	26	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	27	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	28	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	29	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	30	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    wrap = process-definition (defined) wrap(
        bool<> a
        bool<> b
      )
      In definition "wrap", we have: {
      Instances:
        a = bool<> a
        b = bool<> b
      footprint: {
        bool^0 a (instantiated) = ::wrap::a (1) 
        bool^0 b (instantiated) = ::wrap::b (2) 
        bool instance pool:
        1	::wrap::a
        2	::wrap::b
      }
      }

  Instances:
    j = process wrap<>^0 j (instantiated) = ::k (1) (
      bool^0 a (instantiated) = ::k.b (1) 
      bool^0 b (instantiated) = ::j.b (1) 
    )
    k = process wrap<>^0 k (instantiated) = ::j (1) (
      bool^0 a (instantiated) = ::k.a (1) 
      bool^0 b (instantiated) = ::j.a (1) 
    )
}

Created state:
process instance pool:
1	::j
bool instance pool:
1	::j.a

