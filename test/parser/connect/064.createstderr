
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	382
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	15	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	29
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	21	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	22	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	23	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	24	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	28	##ADDR##	proccoll	1	#HEAD#	#TAIL#	107
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	33	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	109
	34	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	35	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	71
	40	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	41	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	77
	42	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	43	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	55
	44	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	71
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	109
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	51	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	52	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	53	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	54	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	62	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    portaproc = process-definition (defined) portaproc(
        bool<> b
        bool<> c

        int<32> i
        int<32> j

      )
      In definition "portaproc", we have: {
      Instances:
        b = bool<> b
        c = bool<> c

        i = int<32> i
        j = int<32> j

      unroll sequence: 
        bool<> b
        bool<> c[0..3]
        int<32> i
        int<32> j[0..1]
      footprint: {
        bool^0 b (instantiated) = ::portaproc::b (1) 
        bool^1 c
          unrolled indices: {
            0 = ::portaproc::c[0] (2) 
            1 = ::portaproc::c[1] (3) 
            2 = ::portaproc::c[2] (4) 
            3 = ::portaproc::c[3] (5) 
          }
        int<32>^0 i (instantiated) = ::portaproc::i (1) 
        int<32>^1 j
          unrolled indices: {
            0 = ::portaproc::j[0] (2) 
            1 = ::portaproc::j[1] (3) 
          }
        int instance pool:
        1	::portaproc::i
        2	::portaproc::j[0]
        3	::portaproc::j[1]
        bool instance pool:
        1	::portaproc::b
        2	::portaproc::c[0]
        3	::portaproc::c[1]
        4	::portaproc::c[2]
        5	::portaproc::c[3]
      }
      }

  Instances:
    a = bool^0 a (instantiated) = ::p[0].b (1) 
    p = process portaproc<>^1 p
      unrolled indices: {
        0 = ::p[0] (1) (
          bool^0 b (instantiated) = ::a (1) 
          bool^1 c
            unrolled indices: {
              0 = ::x[0] (2) 
              1 = ::x[1] (3) 
              2 = ::x[2] (4) 
              3 = ::x[3] (5) 
            }
          int<32>^0 i (instantiated) = ::q (1) 
          int<32>^1 j
            unrolled indices: {
              0 = ::r[0] (2) 
              1 = ::r[1] (3) 
            }
        )
        1 = ::p[1] (2) (
          bool^0 b (instantiated) = ::p[1].b (6) 
          bool^1 c
            unrolled indices: {
              0 = ::p[1].c[0] (7) 
              1 = ::p[1].c[1] (8) 
              2 = ::p[1].c[2] (9) 
              3 = ::p[1].c[3] (10) 
            }
          int<32>^0 i (instantiated) = ::p[1].i (4) 
          int<32>^1 j
            unrolled indices: {
              0 = ::p[1].j[0] (5) 
              1 = ::p[1].j[1] (6) 
            }
        )
      }
    q = int<32>^0 q (instantiated) = ::p[0].i (1) 
    r = int<32>^1 r
      unrolled indices: {
        0 = ::p[0].j[0] (2) 
        1 = ::p[0].j[1] (3) 
      }
    x = bool^1 x
      unrolled indices: {
        0 = ::p[0].c[0] (2) 
        1 = ::p[0].c[1] (3) 
        2 = ::p[0].c[2] (4) 
        3 = ::p[0].c[3] (5) 
      }
}

Created state:
process instance pool:
1	::p[0]
2	::p[1]
int instance pool:
1	::q
2	::r[0]
3	::r[1]
4	::p[1].i
5	::p[1].j[0]
6	::p[1].j[1]
bool instance pool:
1	::a
2	::x[0]
3	::x[1]
4	::x[2]
5	::x[3]
6	::p[1].b
7	::p[1].c[0]
8	::p[1].c[1]
9	::p[1].c[2]
10	::p[1].c[3]

