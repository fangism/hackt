
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	29	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	44
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	35	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	37	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	42	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	44	##ADDR##	footprnt	0	#HEAD#	#TAIL#	558
	45	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	46	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	47	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	48	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	298
	53	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	54	##ADDR##	procdefn	0	#HEAD#	#TAIL#	180
	55	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	56	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	57	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	58	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	59	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	60	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	62	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	63	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	69	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	70	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	71	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	80	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	82	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	83	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	85	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	88	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	89	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	90	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	92	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	94	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	96	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	97	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	98	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	101	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	footprnt	0	#HEAD#	#TAIL#	955
	103	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	104	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	105	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	106	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	107	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	108	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	109	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	110	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	111	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	112	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	114	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	115	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	116	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	117	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	118	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	119	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	120	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	121	##ADDR##	footprnt	0	#HEAD#	#TAIL#	581
	122	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    buf = process-definition (defined) buf(
        bool<> !GND
        bool<> !Vdd
        bool<> i
        bool<> o
      )
      In definition "buf", we have: {
      Instances:
        !GND = bool<> buf::!GND
        !Vdd = bool<> buf::!Vdd
        _o = bool<> buf::_o
        i = bool<> buf::i
        o = bool<> buf::o
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> i
          bool<> o
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> _o
      prs:
        {
        i -> _o-
        ~i -> _o+
        _o -> o-
        ~_o -> o+
        }
      footprint: {
        !GND = bool^0 = buf<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = buf<>::!Vdd (2) @[ supply_high port-alias ] 
        _o = bool^0 = buf<>::_o (5) @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ] 
        i = bool^0 = buf<>::i (3) @[ port-alias loc-FO- loc-FO+ ] 
        o = bool^0 = buf<>::o (4) @[ port-alias loc-FI- loc-FI+ ] 
        Created state:
        bool instance pool: (4 ports, 1 local, 0 mapped)
        1	buf<>::!GND @[ supply_low port-alias ]	
        2	buf<>::!Vdd @[ supply_high port-alias ]	
        3	buf<>::i @[ port-alias loc-FO- loc-FO+ ]	
        4	buf<>::o @[ port-alias loc-FI- loc-FI+ ]	
        5	buf<>::_o @[ loc-FO- loc-FO+ loc-FI- loc-FI+ ]	
        resolved prs:
        i -> _o-
        ~i -> _o+
        _o -> o-
        ~_o -> o+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..3 none none : 2, 1 | 2, 1
      }
      }

    e1of1 = process-definition (defined) e1of1(
        bool<> d
        bool<> e
      )
      In definition "e1of1", we have: {
      Instances:
        d = bool<> e1of1::d
        e = bool<> e1of1::e
      unroll sequence: 
        ports: (
          bool<> d
          bool<> e
        )
      footprint: {
        d = bool^0 = e1of1<>::d (1) @[ port-alias ] 
        e = bool^0 = e1of1<>::e (2) @[ port-alias ] 
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	e1of1<>::d @[ port-alias ]	
        2	e1of1<>::e @[ port-alias ]	
      }
      }

    wire_copy_e1of1 = process-definition (defined) wire_copy_e1of1(
        bool<> !GND
        bool<> !Vdd
        e1of1<> I
        e1of1<> O
      )
      In definition "wire_copy_e1of1", we have: {
      Instances:
        !GND = bool<> wire_copy_e1of1::!GND
        !Vdd = bool<> wire_copy_e1of1::!Vdd
        I = e1of1<> wire_copy_e1of1::I
        O = e1of1<> wire_copy_e1of1::O
        a = buf<> wire_copy_e1of1::a
        b = buf<> wire_copy_e1of1::b
        c = buf<> wire_copy_e1of1::c
        re = bool<> wire_copy_e1of1::re
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of1<> I
          e1of1<> O
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> re
        buf<> a
        a ( , , O.e, re);
        buf<> b
        b ( , , I.d, O.d);
        buf<> c
        c ( , , re, I.e);
      footprint: {
        !GND = bool^0 = wire_copy_e1of1<>::!GND (5) @[ supply_low port-alias ] 
        !Vdd = bool^0 = wire_copy_e1of1<>::!Vdd (6) @[ supply_high port-alias ] 
        I = process e1of1<>^0 = wire_copy_e1of1<>::I (1) @[ port-alias ] (
          d = bool^0 = wire_copy_e1of1<>::I.d (1) @[ port-alias sub-FO- sub-FO+ ] 
          e = bool^0 = wire_copy_e1of1<>::I.e (2) @[ port-alias sub-FI- sub-FI+ ] 
        )
        O = process e1of1<>^0 = wire_copy_e1of1<>::O (2) @[ port-alias ] (
          d = bool^0 = wire_copy_e1of1<>::O.d (3) @[ port-alias sub-FI- sub-FI+ ] 
          e = bool^0 = wire_copy_e1of1<>::O.e (4) @[ port-alias sub-FO- sub-FO+ ] 
        )
        a = process buf<>^0 = wire_copy_e1of1<>::a (3) (
          !GND = bool^0 = wire_copy_e1of1<>::!GND (5) @[ supply_low port-alias ] 
          !Vdd = bool^0 = wire_copy_e1of1<>::!Vdd (6) @[ supply_high port-alias ] 
          i = bool^0 = wire_copy_e1of1<>::O.e (4) @[ port-alias sub-FO- sub-FO+ ] 
          o = bool^0 = wire_copy_e1of1<>::re (7) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
        )
        b = process buf<>^0 = wire_copy_e1of1<>::b (4) (
          !GND = bool^0 = wire_copy_e1of1<>::!GND (5) @[ supply_low port-alias ] 
          !Vdd = bool^0 = wire_copy_e1of1<>::!Vdd (6) @[ supply_high port-alias ] 
          i = bool^0 = wire_copy_e1of1<>::I.d (1) @[ port-alias sub-FO- sub-FO+ ] 
          o = bool^0 = wire_copy_e1of1<>::O.d (3) @[ port-alias sub-FI- sub-FI+ ] 
        )
        c = process buf<>^0 = wire_copy_e1of1<>::c (5) (
          !GND = bool^0 = wire_copy_e1of1<>::!GND (5) @[ supply_low port-alias ] 
          !Vdd = bool^0 = wire_copy_e1of1<>::!Vdd (6) @[ supply_high port-alias ] 
          i = bool^0 = wire_copy_e1of1<>::re (7) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
          o = bool^0 = wire_copy_e1of1<>::I.e (2) @[ port-alias sub-FI- sub-FI+ ] 
        )
        re = bool^0 = wire_copy_e1of1<>::re (7) @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ] 
        Created state:
        process instance pool: (2 ports, 3 local, 0 mapped)
        1	wire_copy_e1of1<>::I @[ port-alias ]	e1of1<>
          bool: 1,2
        2	wire_copy_e1of1<>::O @[ port-alias ]	e1of1<>
          bool: 3,4
        3	wire_copy_e1of1<>::a	buf<>
          bool: 5,6,4,7
        4	wire_copy_e1of1<>::b	buf<>
          bool: 5,6,1,3
        5	wire_copy_e1of1<>::c	buf<>
          bool: 5,6,7,2
        bool instance pool: (6 ports, 1 local, 3 mapped)
        1	wire_copy_e1of1<>::I.d @[ port-alias sub-FO- sub-FO+ ]	
        2	wire_copy_e1of1<>::I.e @[ port-alias sub-FI- sub-FI+ ]	
        3	wire_copy_e1of1<>::O.d @[ port-alias sub-FI- sub-FI+ ]	
        4	wire_copy_e1of1<>::O.e @[ port-alias sub-FO- sub-FO+ ]	
        5	wire_copy_e1of1<>::!GND @[ supply_low port-alias ]	
        6	wire_copy_e1of1<>::!Vdd @[ supply_high port-alias ]	
        7	wire_copy_e1of1<>::re @[ sub-FO- sub-FO+ sub-FI- sub-FI+ ]	
        private sub-bool index map:
          (3 -> 0)
          (4 -> 1)
          (5 -> 2)
          (6 -> 3)
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    foo = wire_copy_e1of1<> foo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  foo = process wire_copy_e1of1<>^0 = foo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    I = process e1of1<>^0 = foo.I (2) (
      d = bool^0 = foo.I.d (3) @[ sub-FO- sub-FO+ ] 
      e = bool^0 = foo.I.e (4) @[ sub-FI- sub-FI+ ] 
    )
    O = process e1of1<>^0 = foo.O (3) (
      d = bool^0 = foo.O.d (5) @[ sub-FI- sub-FI+ ] 
      e = bool^0 = foo.O.e (6) @[ sub-FO- sub-FO+ ] 
    )
  )
  Created state:
  process instance pool: (0 ports, 3 local, 3 mapped)
  1	foo	wire_copy_e1of1<>
    process: 2,3
    bool: 3,4,5,6,1,2
  2	foo.I	e1of1<>
    bool: 3,4
  3	foo.O	e1of1<>
    bool: 5,6
  private sub-process index map:
    (1 -> 0)
    (4 -> 3)
  bool instance pool: (0 ports, 6 local, 4 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	foo.I.d @[ sub-FO- sub-FO+ ]	
  4	foo.I.e @[ sub-FI- sub-FI+ ]	
  5	foo.O.d @[ sub-FI- sub-FI+ ]	
  6	foo.O.e @[ sub-FO- sub-FO+ ]	
  private sub-bool index map:
    (1 -> 0)
    (4 -> 4)
}
