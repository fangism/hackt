Warning: node empty<>::foo.O[0].e has no pull-up nor pull-dn PRS fanin.
Warning: node empty<>::foo.O[1].e has no pull-up nor pull-dn PRS fanin.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	24	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	44
	30	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	31	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	32	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	33	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	36	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	44	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	45	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	46	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	58	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	62	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	64	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	37
	65	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	37
	71	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	73	##ADDR##	footprnt	0	#HEAD#	#TAIL#	726
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	procdefn	0	#HEAD#	#TAIL#	98
	78	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	80	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	81	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	83	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	footprnt	0	#HEAD#	#TAIL#	302
	85	##ADDR##	procdefn	0	#HEAD#	#TAIL#	106
	86	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	87	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	88	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	89	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	90	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	92	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	94	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	95	##ADDR##	procdefn	0	#HEAD#	#TAIL#	160
	96	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	97	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	98	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	99	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	100	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	101	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	102	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	103	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	104	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	105	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	106	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	107	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	108	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	109	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	110	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	111	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	112	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	114	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	115	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	117	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	118	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	119	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	120	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	121	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	123	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	125	##ADDR##	loopscop	0	#HEAD#	#TAIL#	28
	126	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	127	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	128	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	129	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	130	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	133	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	134	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	135	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	136	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	137	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	138	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	139	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	141	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	142	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	143	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	144	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	146	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	147	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	148	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	149	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	150	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	151	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	152	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	153	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	155	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	156	##ADDR##	footprnt	0	#HEAD#	#TAIL#	788
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	159	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	160	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	161	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	162	##ADDR##	footprnt	0	#HEAD#	#TAIL#	640
	163	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	164	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	165	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	166	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	167	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	168	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	169	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	170	##ADDR##	footprnt	0	#HEAD#	#TAIL#	386
	171	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    celem = process-definition (defined) celem<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> i[0..N-1]
        bool<> o
      )
      In definition "celem", we have: {
      Parameters:
        N = pint<> celem::N
      Instances:
        !GND = bool<> celem::!GND
        !Vdd = bool<> celem::!Vdd
        _o = bool<> celem::_o
        i = bool<> celem::i^1
        o = bool<> celem::o
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> i[0..N-1]
          bool<> o
        )
        bool<> _o
      prs:
        {
        (&:j:[0..N-1]: i[$j]) -> _o-
        (&:j:[0..N-1]: ~i[$j]) -> _o+
        _o -> o-
        ~_o -> o+
        o -> _o- [iskeeper=1]
        ~o -> _o+ [iskeeper=1]
        }
      footprint collection: {
        <2> {
          !GND = bool^0 = celem<2>::!GND (1) 
          !Vdd = bool^0 = celem<2>::!Vdd (2) 
          N = pint^0 value: 2
          _o = bool^0 = celem<2>::_o (4) 
          i = bool^1
            {
              [0] = celem<2>::i[0] (5) 
              [1] = celem<2>::i[1] (6) 
            }
          o = bool^0 = celem<2>::o (3) 
          Created state:
          bool instance pool:
          1	celem<2>::!GND
          2	celem<2>::!Vdd
          3	celem<2>::o
          4	celem<2>::_o
          5	celem<2>::i[0]
          6	celem<2>::i[1]
          resolved prs:
          i[0] & i[1] -> _o-
          ~i[0] & ~i[1] -> _o+
          _o -> o-
          ~_o -> o+
          o -> _o- [iskeeper=1]
          ~o -> _o+ [iskeeper=1]
          rule supply map: [rules, Vdd, GND]
          0..5: 2, 1
        }
      }
      }

    e1of1 = process-definition (defined) e1of1(
        bool<> d
        bool<> e
      )
      In definition "e1of1", we have: {
      Instances:
        d = bool<> e1of1::d
        e = bool<> e1of1::e
      unroll sequence: 
        ports: (
          bool<> d
          bool<> e
        )
      footprint: {
        d = bool^0 = e1of1<>::d (1) 
        e = bool^0 = e1of1<>::e (2) 
        Created state:
        bool instance pool:
        1	e1of1<>::d
        2	e1of1<>::e
      }
      }

    empty = process-definition (defined) empty(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "empty", we have: {
      Instances:
        !GND = bool<> empty::!GND
        !Vdd = bool<> empty::!Vdd
        foo = wire_copy_e1of1<2> empty::foo
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        wire_copy_e1of1<2> foo
      footprint: {
        !GND = bool^0 = empty<>::!GND (1) 
        !Vdd = bool^0 = empty<>::!Vdd (2) 
        foo = process wire_copy_e1of1<2>^0 = empty<>::foo (1) (
          !GND = bool^0 = empty<>::!GND (1) 
          !Vdd = bool^0 = empty<>::!Vdd (2) 
          I = process e1of1<>^0 = empty<>::foo.I (2) (
            d = bool^0 = empty<>::foo.I.d (3) 
            e = bool^0 = empty<>::foo.I.e (4) 
          )
          O = process e1of1<>^1
            {
              [0] = empty<>::foo.O[0] (3) (
                d = bool^0 = empty<>::foo.I.d (3) 
                e = bool^0 = empty<>::foo.O[0].e (5) 
              )
              [1] = empty<>::foo.O[1] (4) (
                d = bool^0 = empty<>::foo.I.d (3) 
                e = bool^0 = empty<>::foo.O[1].e (6) 
              )
            }
        )
        Created state:
        process instance pool:
        1	empty<>::foo
        2	empty<>::foo.I
        3	empty<>::foo.O[0]
        4	empty<>::foo.O[1]
        bool instance pool:
        1	empty<>::!GND
        2	empty<>::!Vdd
        3	empty<>::foo.I.d
        4	empty<>::foo.I.e
        5	empty<>::foo.O[0].e
        6	empty<>::foo.O[1].e
      }
      }

    wire_copy_e1of1 = process-definition (defined) wire_copy_e1of1<
      pint<> C
      >(
        bool<> !GND
        bool<> !Vdd
        e1of1<> I
        e1of1<> O[0..C-1]
      )
      In definition "wire_copy_e1of1", we have: {
      Parameters:
        C = pint<> wire_copy_e1of1::C
      Instances:
        !GND = bool<> wire_copy_e1of1::!GND
        !Vdd = bool<> wire_copy_e1of1::!Vdd
        I = e1of1<> wire_copy_e1of1::I
        O = e1of1<> wire_copy_e1of1::O^1
        c = celem<wire_copy_e1of1::C> wire_copy_e1of1::c
        re = bool<> wire_copy_e1of1::re^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of1<> I
          e1of1<> O[0..C-1]
        )
        bool<> re[0..C-1]
        (;i:[0..C-1]:
          re[$i] = O[$i].e;
          O[$i].d = I.d;
        )
        celem<wire_copy_e1of1::C> c
        c ( , , re, I.e);
      footprint collection: {
        <2> {
          !GND = bool^0 = wire_copy_e1of1<2>::!GND (3) 
          !Vdd = bool^0 = wire_copy_e1of1<2>::!Vdd (4) 
          C = pint^0 value: 2
          I = process e1of1<>^0 = wire_copy_e1of1<2>::I (1) (
            d = bool^0 = wire_copy_e1of1<2>::I.d (1) 
            e = bool^0 = wire_copy_e1of1<2>::I.e (2) 
          )
          O = process e1of1<>^1
            {
              [0] = wire_copy_e1of1<2>::O[0] (3) (
                d = bool^0 = wire_copy_e1of1<2>::I.d (1) 
                e = bool^0 = wire_copy_e1of1<2>::re[0] (5) 
              )
              [1] = wire_copy_e1of1<2>::O[1] (4) (
                d = bool^0 = wire_copy_e1of1<2>::I.d (1) 
                e = bool^0 = wire_copy_e1of1<2>::re[1] (6) 
              )
            }
          c = process celem<2>^0 = wire_copy_e1of1<2>::c (2) (
            !GND = bool^0 = wire_copy_e1of1<2>::!GND (3) 
            !Vdd = bool^0 = wire_copy_e1of1<2>::!Vdd (4) 
            i = bool^1
              {
                [0] = wire_copy_e1of1<2>::re[0] (5) 
                [1] = wire_copy_e1of1<2>::re[1] (6) 
              }
            o = bool^0 = wire_copy_e1of1<2>::I.e (2) 
          )
          re = bool^1
            {
              [0] = wire_copy_e1of1<2>::re[0] (5) 
              [1] = wire_copy_e1of1<2>::re[1] (6) 
            }
          Created state:
          process instance pool:
          1	wire_copy_e1of1<2>::I
          2	wire_copy_e1of1<2>::c
          3	wire_copy_e1of1<2>::O[0]
          4	wire_copy_e1of1<2>::O[1]
          bool instance pool:
          1	wire_copy_e1of1<2>::I.d
          2	wire_copy_e1of1<2>::I.e
          3	wire_copy_e1of1<2>::!GND
          4	wire_copy_e1of1<2>::!Vdd
          5	wire_copy_e1of1<2>::re[0]
          6	wire_copy_e1of1<2>::re[1]
          bool port aliases:
          1: wire_copy_e1of1<2>::I.d = wire_copy_e1of1<2>::O[0].d = wire_copy_e1of1<2>::O[1].d
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    trash = empty<> trash
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  trash = process empty<>^0 = trash (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
  )
  Created state:
  process instance pool:
  1	trash
  bool instance pool:
  1	!GND
  2	!Vdd
}
