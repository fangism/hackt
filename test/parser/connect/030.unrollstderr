
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	77
	4	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	5	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datadefn	0	#HEAD#	#TAIL#	52
	7	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	9	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	procdefn	0	#HEAD#	#TAIL#	80
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	33
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	18	##ADDR##	proccoll	0	#HEAD#	#TAIL#	61
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	22	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	46
	23	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	71
	24	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	25	##ADDR##	mdintref	0	#HEAD#	#TAIL#	24
	26	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	27	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	32	##ADDR##	mdintref	0	#HEAD#	#TAIL#	24
	33	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    bar = process-definition (declared) bar(
        int<32> a
        int<32> b with indices: {
          [0..1]
        }

      )
      In definition "bar", we have: {
        a = int<32> a
        b = int<32> b with indices: {
          [0..1]
        }

      }

  Instances:
    foo = int<32>^1 foo with indices: {
      [0..1]
    }
      unrolled indices: {
        0 = ::none.a 
        1 = ::none.b[1] 
      }
    none = process bar<>^0 none (instantiated) = ::none (
      int<32>^0 a (instantiated) = ::none.b[0] 
      int<32>^1 b with indices: {
        [0..1]
      }
        unrolled indices: {
          0 = ::foo[0] 
          1 = ::foo[1] 
        }
    )
}

