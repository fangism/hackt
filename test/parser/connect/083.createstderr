
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	53
	8	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	29
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	52
	15	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	33
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	24	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	113
	29	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	42
	30	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	42
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	75
	35	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	75
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	37	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	40	##ADDR##	proccoll	2	#HEAD#	#TAIL#	406
	41	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	42	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	43	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	45	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	46	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	47	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	48	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	49	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	50	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	51	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	52	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	53	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	54	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	55	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	56	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	57	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	58	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	59	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	60	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	61	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	62	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	63	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	64	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	65	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	66	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	67	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	69	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	70	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	71	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	72	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	73	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	74	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	75	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	76	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	77	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	78	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	79	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	80	##ADDR##	proccoll	0	#HEAD#	#TAIL#	74
	81	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	82	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	83	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	84	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	81
	85	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	38
	86	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59
	87	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	113
	88	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	89	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	90	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	91	##ADDR##	portconn	0	#HEAD#	#TAIL#	32
	92	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	93	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	94	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	95	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	96	##ADDR##	sdimref_	0	#HEAD#	#TAIL#	20
	97	##ADDR##	portconn	0	#HEAD#	#TAIL#	32
	98	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	99	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	103	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	104	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	105	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    portaproc = process-definition (declared) portaproc(
        bool<> b
        bool<> c with indices: {
          [0..3]
        }

        int<32> i
        int<32> j with indices: {
          [0..1]
        }

      )
      In definition "portaproc", we have: {
        b = bool<> b
        c = bool<> c with indices: {
          [0..3]
        }

        i = int<32> i
        j = int<32> j with indices: {
          [0..1]
        }

      }

  Instances:
    a = bool^0 a (instantiated) = ::p.b (1) 
    p = process portaproc<>^0 p (instantiated) = ::p (1) (
      bool^0 b (instantiated) = ::a (1) 
      bool^1 c with indices: {
        [0..3]
      }
        unrolled indices: {
          0 = ::x[0] (2) 
          1 = ::x[1] (3) 
          2 = ::x[2] (4) 
          3 = ::x[3] (5) 
        }
      int<32>^0 i (instantiated) = ::q (1) 
      int<32>^1 j with indices: {
        [0..1]
      }
        unrolled indices: {
          0 = ::r[0] (2) 
          1 = ::r[1] (3) 
        }
    )
    q = int<32>^0 q (instantiated) = ::p.i (1) 
    r = int<32>^1 r with indices: {
      [0..1]
    }
      unrolled indices: {
        0 = ::p.j[0] (2) 
        1 = ::p.j[1] (3) 
      }
    s = process portaproc<>^2 s with indices: {
      [0..2][0..2]
    }
      unrolled indices: {
        [0][0] = ::s[0][0] (2) (
          bool^0 b (instantiated) = ::s[0][0].b (6) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[0][0].c[0] (7) 
              1 = ::s[0][0].c[1] (8) 
              2 = ::s[0][0].c[2] (9) 
              3 = ::s[0][0].c[3] (10) 
            }
          int<32>^0 i (instantiated) = ::s[0][0].i (4) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[0][0].j[0] (5) 
              1 = ::s[0][0].j[1] (6) 
            }
        )
        [0][1] = ::s[0][1] (3) (
          bool^0 b (instantiated) = ::s[0][1].b (11) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[0][1].c[0] (12) 
              1 = ::s[0][1].c[1] (13) 
              2 = ::s[0][1].c[2] (14) 
              3 = ::s[0][1].c[3] (15) 
            }
          int<32>^0 i (instantiated) = ::s[0][1].i (7) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[0][1].j[0] (8) 
              1 = ::s[0][1].j[1] (9) 
            }
        )
        [0][2] = ::s[0][2] (4) (
          bool^0 b (instantiated) = ::s[0][2].b (16) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[0][2].c[0] (17) 
              1 = ::s[0][2].c[1] (18) 
              2 = ::s[0][2].c[2] (19) 
              3 = ::s[0][2].c[3] (20) 
            }
          int<32>^0 i (instantiated) = ::s[0][2].i (10) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[0][2].j[0] (11) 
              1 = ::s[0][2].j[1] (12) 
            }
        )
        [1][0] = ::s[1][0] (5) (
          bool^0 b (instantiated) = ::s[1][0].b (21) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[1][0].c[0] (22) 
              1 = ::s[1][0].c[1] (23) 
              2 = ::s[1][0].c[2] (24) 
              3 = ::s[1][0].c[3] (25) 
            }
          int<32>^0 i (instantiated) = ::s[1][0].i (13) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[1][0].j[0] (14) 
              1 = ::s[1][0].j[1] (15) 
            }
        )
        [1][1] = ::t (6) (
          bool^0 b (instantiated) = ::s[1][1].b (26) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[1][1].c[0] (27) 
              1 = ::s[1][1].c[1] (28) 
              2 = ::s[1][1].c[2] (29) 
              3 = ::s[1][1].c[3] (30) 
            }
          int<32>^0 i (instantiated) = ::s[1][1].i (16) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[1][1].j[0] (17) 
              1 = ::s[1][1].j[1] (18) 
            }
        )
        [1][2] = ::s[1][2] (7) (
          bool^0 b (instantiated) = ::s[1][2].b (31) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[1][2].c[0] (32) 
              1 = ::s[1][2].c[1] (33) 
              2 = ::s[1][2].c[2] (34) 
              3 = ::s[1][2].c[3] (35) 
            }
          int<32>^0 i (instantiated) = ::s[1][2].i (19) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[1][2].j[0] (20) 
              1 = ::s[1][2].j[1] (21) 
            }
        )
        [2][0] = ::s[2][0] (8) (
          bool^0 b (instantiated) = ::s[2][0].b (36) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[2][0].c[0] (37) 
              1 = ::s[2][0].c[1] (38) 
              2 = ::s[2][0].c[2] (39) 
              3 = ::s[2][0].c[3] (40) 
            }
          int<32>^0 i (instantiated) = ::s[2][0].i (22) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[2][0].j[0] (23) 
              1 = ::s[2][0].j[1] (24) 
            }
        )
        [2][1] = ::s[2][1] (9) (
          bool^0 b (instantiated) = ::s[2][1].b (41) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[2][1].c[0] (42) 
              1 = ::s[2][1].c[1] (43) 
              2 = ::s[2][1].c[2] (44) 
              3 = ::s[2][1].c[3] (45) 
            }
          int<32>^0 i (instantiated) = ::s[2][1].i (25) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[2][1].j[0] (26) 
              1 = ::s[2][1].j[1] (27) 
            }
        )
        [2][2] = ::s[2][2] (10) (
          bool^0 b (instantiated) = ::s[2][2].b (46) 
          bool^1 c with indices: {
            [0..3]
          }
            unrolled indices: {
              0 = ::s[2][2].c[0] (47) 
              1 = ::s[2][2].c[1] (48) 
              2 = ::s[2][2].c[2] (49) 
              3 = ::s[2][2].c[3] (50) 
            }
          int<32>^0 i (instantiated) = ::s[2][2].i (28) 
          int<32>^1 j with indices: {
            [0..1]
          }
            unrolled indices: {
              0 = ::s[2][2].j[0] (29) 
              1 = ::s[2][2].j[1] (30) 
            }
        )
      }
    t = process portaproc<>^0 t (instantiated) = ::s[1][1] (6) (
      bool^0 b (instantiated) = ::t.b (26) 
      bool^1 c with indices: {
        [0..3]
      }
        unrolled indices: {
          0 = ::t.c[0] (27) 
          1 = ::t.c[1] (28) 
          2 = ::t.c[2] (29) 
          3 = ::t.c[3] (30) 
        }
      int<32>^0 i (instantiated) = ::t.i (16) 
      int<32>^1 j with indices: {
        [0..1]
      }
        unrolled indices: {
          0 = ::t.j[0] (17) 
          1 = ::t.j[1] (18) 
        }
    )
    x = bool^1 x with indices: {
      [0..3]
    }
      unrolled indices: {
        0 = ::p.c[0] (2) 
        1 = ::p.c[1] (3) 
        2 = ::p.c[2] (4) 
        3 = ::p.c[3] (5) 
      }
}

Created state:
process instance pool:
1	::p
2	::s[0][0]
3	::s[0][1]
4	::s[0][2]
5	::s[1][0]
6	::s[1][1]
7	::s[1][2]
8	::s[2][0]
9	::s[2][1]
10	::s[2][2]
int instance pool:
1	::q
2	::r[0]
3	::r[1]
4	::s[0][0].i
5	::s[0][0].j[0]
6	::s[0][0].j[1]
7	::s[0][1].i
8	::s[0][1].j[0]
9	::s[0][1].j[1]
10	::s[0][2].i
11	::s[0][2].j[0]
12	::s[0][2].j[1]
13	::s[1][0].i
14	::s[1][0].j[0]
15	::s[1][0].j[1]
16	::s[1][1].i
17	::s[1][1].j[0]
18	::s[1][1].j[1]
19	::s[1][2].i
20	::s[1][2].j[0]
21	::s[1][2].j[1]
22	::s[2][0].i
23	::s[2][0].j[0]
24	::s[2][0].j[1]
25	::s[2][1].i
26	::s[2][1].j[0]
27	::s[2][1].j[1]
28	::s[2][2].i
29	::s[2][2].j[0]
30	::s[2][2].j[1]
bool instance pool:
1	::a
2	::x[0]
3	::x[1]
4	::x[2]
5	::x[3]
6	::s[0][0].b
7	::s[0][0].c[0]
8	::s[0][0].c[1]
9	::s[0][0].c[2]
10	::s[0][0].c[3]
11	::s[0][1].b
12	::s[0][1].c[0]
13	::s[0][1].c[1]
14	::s[0][1].c[2]
15	::s[0][1].c[3]
16	::s[0][2].b
17	::s[0][2].c[0]
18	::s[0][2].c[1]
19	::s[0][2].c[2]
20	::s[0][2].c[3]
21	::s[1][0].b
22	::s[1][0].c[0]
23	::s[1][0].c[1]
24	::s[1][0].c[2]
25	::s[1][0].c[3]
26	::s[1][1].b
27	::s[1][1].c[0]
28	::s[1][1].c[1]
29	::s[1][1].c[2]
30	::s[1][1].c[3]
31	::s[1][2].b
32	::s[1][2].c[0]
33	::s[1][2].c[1]
34	::s[1][2].c[2]
35	::s[1][2].c[3]
36	::s[2][0].b
37	::s[2][0].c[0]
38	::s[2][0].c[1]
39	::s[2][0].c[2]
40	::s[2][0].c[3]
41	::s[2][1].b
42	::s[2][1].c[0]
43	::s[2][1].c[1]
44	::s[2][1].c[2]
45	::s[2][1].c[3]
46	::s[2][2].b
47	::s[2][2].c[0]
48	::s[2][2].c[1]
49	::s[2][2].c[2]
50	::s[2][2].c[3]

