
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	124
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	124
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	22	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	27	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	36	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	37	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	38	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	48	##ADDR##	footprnt	0	#HEAD#	#TAIL#	484
	49	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	52	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	53	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	54	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	55	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	56	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	60	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	62	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	72	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	73	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	75	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	footprnt	0	#HEAD#	#TAIL#	674
	77	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	78	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	79	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	80	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	82	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	88	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	93	##ADDR##	footprnt	0	#HEAD#	#TAIL#	771
	94	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        bool<> !GND
        bool<> !Vdd
        foo<> x
      )
      In definition "bar", we have: {
      Instances:
        !GND = bool<> bar::!GND
        !Vdd = bool<> bar::!Vdd
        x = foo<> bar::x
        y = foo<> bar::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          foo<> x
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        foo<> y
      footprint: {
        !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
        x = process foo<>^0 = bar<>::x (1) @[ port-alias ] (
          !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
        )
        y = process foo<>^0 = bar<>::y (2) (
          !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
        )
        Created state:
        process instance pool: (1 ports, 1 local, 0 mapped)
        1	bar<>::x @[ port-alias ]	foo<>
          bool: 1,2
        2	bar<>::y	foo<>
          bool: 1,2
        bool instance pool: (2 ports, 0 local, 2 mapped)
        1	bar<>::!GND @[ supply_low port-alias ]	
        2	bar<>::!Vdd @[ supply_high port-alias ]	
        private sub-bool index map:
          (2 -> 0)
          (3 -> 2)
        bool port aliases:
        1: bar<>::x.!GND = bar<>::!GND @[ supply_low port-alias ]
        2: bar<>::x.!Vdd = bar<>::!Vdd @[ supply_high port-alias ]
      }
      }

    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        a = bool<> foo::a
        b = bool<> foo::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> a
        bool<> b
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = foo<>::a (3) 
        b = bool^0 = foo<>::b (4) 
        Created state:
        bool instance pool: (2 ports, 2 local, 0 mapped)
        1	foo<>::!GND @[ supply_low port-alias ]	
        2	foo<>::!Vdd @[ supply_high port-alias ]	
        3	foo<>::a	
        4	foo<>::b	
      }
      }

    ick = process-definition (defined) ick(
        bool<> !GND
        bool<> !Vdd
        bar<> p
        bar<> q
      )
      In definition "ick", we have: {
      Instances:
        !GND = bool<> ick::!GND
        !Vdd = bool<> ick::!Vdd
        p = bar<> ick::p
        q = bar<> ick::q
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bar<> p
          bar<> q
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        p.x = q.x;
      footprint: {
        !GND = bool^0 = ick<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = ick<>::!Vdd (2) @[ supply_high port-alias ] 
        p = process bar<>^0 = ick<>::p (1) @[ port-alias ] (
          !GND = bool^0 = ick<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = ick<>::!Vdd (2) @[ supply_high port-alias ] 
          x = process foo<>^0 = ick<>::p.x (2) @[ port-alias ] (
            !GND = bool^0 = ick<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = ick<>::!Vdd (2) @[ supply_high port-alias ] 
          )
        )
        q = process bar<>^0 = ick<>::q (3) @[ port-alias ] (
          !GND = bool^0 = ick<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = ick<>::!Vdd (2) @[ supply_high port-alias ] 
          x = process foo<>^0 = ick<>::p.x (2) @[ port-alias ] (
            !GND = bool^0 = ick<>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = ick<>::!Vdd (2) @[ supply_high port-alias ] 
          )
        )
        Created state:
        process instance pool: (3 ports, 0 local, 0 mapped)
        1	ick<>::p @[ port-alias ]	bar<>
          process: 2
          bool: 1,2
        2	ick<>::p.x @[ port-alias ]	foo<>
          bool: 1,2
        3	ick<>::q @[ port-alias ]	bar<>
          process: 2
          bool: 1,2
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	ick<>::!GND @[ supply_low port-alias ]	
        2	ick<>::!Vdd @[ supply_high port-alias ]	
        process port aliases:
        2: ick<>::p.x = ick<>::q.x @[ port-alias ]
        bool port aliases:
        1: ick<>::p.!GND = ick<>::p.x.!GND = ick<>::q.!GND = ick<>::q.x.!GND = ick<>::!GND @[ supply_low port-alias ]
        2: ick<>::p.!Vdd = ick<>::p.x.!Vdd = ick<>::q.!Vdd = ick<>::q.x.!Vdd = ick<>::!Vdd @[ supply_high port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    poo = ick<> poo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  poo = process ick<>^0 = poo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    p = process bar<>^0 = poo.p (2) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      x = process foo<>^0 = poo.p.x (3) (
        !GND = bool^0 = !GND (1) @[ supply_low ] 
        !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      )
    )
    q = process bar<>^0 = poo.q (4) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      x = process foo<>^0 = poo.p.x (3) (
        !GND = bool^0 = !GND (1) @[ supply_low ] 
        !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      )
    )
  )
  Created state:
  process instance pool: (0 ports, 4 local, 2 mapped)
  1	poo	ick<>
    process: 2,3,4
    bool: 1,2
  2	poo.p	bar<>
    process: 3
    bool: 1,2
  3	poo.p.x	foo<>
    bool: 1,2
  4	poo.q	bar<>
    process: 3
    bool: 1,2
  private sub-process index map:
    (2 -> 0)
    (4 -> 1)
    (5 -> 2)
  bool instance pool: (0 ports, 2 local, 6 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (2 -> 0)
    (3 -> 2)
    (4 -> 4)
    (5 -> 6)
}
