
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	146
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	37
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	37
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	33
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	52
	12	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	13	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	14	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	18	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	23	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	24	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	29
	25	##ADDR##	proccoll	0	#HEAD#	#TAIL#	56
	26	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	32	##ADDR##	dintcoll	1	#HEAD#	#TAIL#	59

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> M
      pint<> N
      >(
        int<pint-inst-ref ::bar::M> x with indices: {
          [0..::bar::N-1]
        }

      )
      In definition "bar", we have: {
        M = pint<> M
        N = pint<> N
        x = int<pint-inst-ref ::bar::M> x with indices: {
          [0..::bar::N-1]
        }

      }

  Instances:
    poo = process bar<3, 2>^0 poo (instantiated) = ::poo (1) (
      int<3>^1 x with indices: {
        [0..::bar::N-1]
      }
        unrolled indices: {
          0 = ::poo.x[0] (1) 
          1 = ::poo.x[1] (2) 
        }
    )
}

Created state:
process instance pool:
1	::poo
int instance pool:
1	::poo.x[0]
2	::poo.x[1]

