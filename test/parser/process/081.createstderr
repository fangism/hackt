
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	88
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	6	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	84
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	13	##ADDR##	footprnt	0	#HEAD#	#TAIL#	318
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	28
	16	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	17	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	23	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	29	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	35	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	footprnt	0	#HEAD#	#TAIL#	533
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	43	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	45	##ADDR##	footprnt	0	#HEAD#	#TAIL#	558
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x[0..2]
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x^1
      unroll sequence: 
        foo<> x[0..2]
        x[0].a[0] = x[2].a[0] = x[0].a[2] = x[2].a[2];
      footprint: {
        x = process foo<>^1
          {
            [0] = bar::x[0] (1) (
              a = bool^1
                {
                  [0] = bar::x[0].a[0] (1) 
                  [1] = bar::x[0].a[1] (2) 
                  [2] = bar::x[0].a[0] (1) 
                }
            )
            [1] = bar::x[1] (2) (
              a = bool^1
                {
                  [0] = bar::x[1].a[0] (3) 
                  [1] = bar::x[1].a[1] (4) 
                  [2] = bar::x[1].a[2] (5) 
                }
            )
            [2] = bar::x[2] (3) (
              a = bool^1
                {
                  [0] = bar::x[0].a[0] (1) 
                  [1] = bar::x[2].a[1] (6) 
                  [2] = bar::x[0].a[0] (1) 
                }
            )
          }
        Created state:
        process instance pool:
        1	bar::x[0]
        2	bar::x[1]
        3	bar::x[2]
        bool instance pool:
        1	bar::x[0].a[0]
        2	bar::x[0].a[1]
        3	bar::x[1].a[0]
        4	bar::x[1].a[1]
        5	bar::x[1].a[2]
        6	bar::x[2].a[1]
        bool port aliases:
        1: bar::x[0].a[0] = bar::x[0].a[2] = bar::x[2].a[0] = bar::x[2].a[2]
      }
      }

    foo = process-definition (defined) foo(
        bool<> a[0..2]
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a^1
      unroll sequence: 
        bool<> a[0..2]
      footprint: {
        a = bool^1
          {
            [0] = foo::a[0] (1) 
            [1] = foo::a[1] (2) 
            [2] = foo::a[2] (3) 
          }
        Created state:
        bool instance pool:
        1	foo::a[0]
        2	foo::a[1]
        3	foo::a[2]
      }
      }

  Instances:
    poo = bar<> poo
}

footprint: {
  poo = process bar<>^0 = poo (1) (
    x = process foo<>^1
      {
        [0] = poo.x[0] (2) (
          a = bool^1
            {
              [0] = poo.x[0].a[0] (1) 
              [1] = poo.x[0].a[1] (2) 
              [2] = poo.x[0].a[0] (1) 
            }
        )
        [1] = poo.x[1] (3) (
          a = bool^1
            {
              [0] = poo.x[1].a[0] (3) 
              [1] = poo.x[1].a[1] (4) 
              [2] = poo.x[1].a[2] (5) 
            }
        )
        [2] = poo.x[2] (4) (
          a = bool^1
            {
              [0] = poo.x[0].a[0] (1) 
              [1] = poo.x[2].a[1] (6) 
              [2] = poo.x[0].a[0] (1) 
            }
        )
      }
  )
  Created state:
  process instance pool:
  1	poo
  2	poo.x[0]
  3	poo.x[1]
  4	poo.x[2]
  bool instance pool:
  1	poo.x[0].a[0]
  2	poo.x[0].a[1]
  3	poo.x[1].a[0]
  4	poo.x[1].a[1]
  5	poo.x[1].a[2]
  6	poo.x[2].a[1]
}
