
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	244
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	30
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	14	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	18	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	64
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	384
	20	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	21	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	22	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	23	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	24	##ADDR##	proccoll	1	#HEAD#	#TAIL#	38
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	29	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	33	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	38	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	39	##ADDR##	proccoll	1	#HEAD#	#TAIL#	83
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69
	42	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69
	43	##ADDR##	proccoll	0	#HEAD#	#TAIL#	57
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	50	##ADDR##	proccoll	1	#HEAD#	#TAIL#	88
	51	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69
	54	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> M
      pint<> N
      >(
        foo<::bar::M> x with indices: {
          [0..::bar::N-1]
        }

      )
      In definition "bar", we have: {
      Parameters:
        M = pint<> M
        N = pint<> N
      Instances:
        x = foo<::bar::M> x with indices: {
          [0..::bar::N-1]
        }

      unroll sequence: 
        pint<> M
        pint<> N
        foo<::bar::M> x[0..N-1]
      footprint collection: {
        <3, 2> {
          pint^0 M value: ?
          pint^0 N value: ?
          process foo<3>^1 x with indices: {
          }
            unrolled indices: {
              0 = ::bar::x[0] (1) (
                bool^1 a with indices: {
                  [0..::foo::D-1]
                }
                  unrolled indices: {
                    0 = ::bar::x[0].a[0] (1) 
                    1 = ::bar::x[0].a[1] (2) 
                    2 = ::bar::x[0].a[2] (3) 
                  }
              )
              1 = ::bar::x[1] (2) (
                bool^1 a with indices: {
                  [0..::foo::D-1]
                }
                  unrolled indices: {
                    0 = ::bar::x[1].a[0] (4) 
                    1 = ::bar::x[1].a[1] (5) 
                    2 = ::bar::x[1].a[2] (6) 
                  }
              )
            }
          process instance pool:
          1	::bar::x[0]
          2	::bar::x[1]
          bool instance pool:
          1	::bar::x[0].a[0]
          2	::bar::x[0].a[1]
          3	::bar::x[0].a[2]
          4	::bar::x[1].a[0]
          5	::bar::x[1].a[1]
          6	::bar::x[1].a[2]
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> D
      >(
        bool<> a with indices: {
          [0..::foo::D-1]
        }

      )
      In definition "foo", we have: {
      Parameters:
        D = pint<> D
      Instances:
        a = bool<> a with indices: {
          [0..::foo::D-1]
        }

      unroll sequence: 
        pint<> D
        bool<> a[0..D-1]
      footprint collection: {
        <3> {
          pint^0 D value: ?
          bool^1 a with indices: {
          }
            unrolled indices: {
              0 = ::foo::a[0] (1) 
              1 = ::foo::a[1] (2) 
              2 = ::foo::a[2] (3) 
            }
          bool instance pool:
          1	::foo::a[0]
          2	::foo::a[1]
          3	::foo::a[2]
        }
      }
      }

  Instances:
    poo = process bar<3, 2>^0 poo (instantiated) = ::poo (1) (
      process foo<3>^1 x with indices: {
        [0..::bar::N-1]
      }
        unrolled indices: {
          0 = ::poo.x[0] (2) (
            bool^1 a with indices: {
              [0..::foo::D-1]
            }
              unrolled indices: {
                0 = ::poo.x[0].a[0] (1) 
                1 = ::poo.x[0].a[1] (2) 
                2 = ::poo.x[0].a[2] (3) 
              }
          )
          1 = ::poo.x[1] (3) (
            bool^1 a with indices: {
              [0..::foo::D-1]
            }
              unrolled indices: {
                0 = ::poo.x[1].a[0] (4) 
                1 = ::poo.x[1].a[1] (5) 
                2 = ::poo.x[1].a[2] (6) 
              }
          )
        }
    )
}

Created state:
process instance pool:
1	::poo
2	::poo.x[0]
3	::poo.x[1]
bool instance pool:
1	::poo.x[0].a[0]
2	::poo.x[0].a[1]
3	::poo.x[0].a[2]
4	::poo.x[1].a[0]
5	::poo.x[1].a[1]
6	::poo.x[1].a[2]

