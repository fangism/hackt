
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	176
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	176
	10	##ADDR##	proccoll	1	#HEAD#	#TAIL#	33
	11	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	14	##ADDR##	proccoll	1	#HEAD#	#TAIL#	83
	15	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	17	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	18	##ADDR##	proccoll	0	#HEAD#	#TAIL#	52
	19	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	proccoll	1	#HEAD#	#TAIL#	83
	23	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	24	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	25	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x[0..1]
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> x

      unroll sequence: 
        foo<> x[0..1]
      footprint: {
        process foo<>^1 x
          unrolled indices: {
            0 = ::bar::x[0] (
              bool^0 a (instantiated) = ::bar::x[0].a 
            )
            1 = ::bar::x[1] (
              bool^0 a (instantiated) = ::bar::x[1].a 
            )
          }
      }
      }

    foo = process-definition (defined) foo(
        bool<> a
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> a
      unroll sequence: 
        bool<> a
      footprint: {
        bool^0 a (instantiated) = ::foo::a 
      }
      }

  Instances:
    poo = process bar<>^0 poo (instantiated) = ::poo (
      process foo<>^1 x
        unrolled indices: {
          0 = ::poo.x[0] (
            bool^0 a (instantiated) = ::poo.x[0].a 
          )
          1 = ::poo.x[1] (
            bool^0 a (instantiated) = ::poo.x[1].a 
          )
        }
    )
}

