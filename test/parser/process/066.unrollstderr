
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	11	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	15	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	18	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	21	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	22	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	23	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	27	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	30	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	32	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	33	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	36	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	37	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	38	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	44	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	45	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	46	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	47	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	48	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	49	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	procpacc	0	#HEAD#	#TAIL#	37
	52	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	53	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	54	##ADDR##	procpacc	0	#HEAD#	#TAIL#	37
	55	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	56	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	57	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	59	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	60	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	61	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	62	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	63	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	64	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	65	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	66	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	67	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	68	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	69	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	70	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	71	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	72	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	73	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	74	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	75	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x
        foo<> y
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x
        y = foo<> bar::y
      unroll sequence: 
        foo<> x
        foo<> y
        x = y;
      footprint: {
        x = process foo<>^0 = bar::y (
          a = bool^0 = bar::x.a 
          b = bool^0 = bar::x.b 
        )
        y = process foo<>^0 = bar::y (
          a = bool^0 = bar::x.a 
          b = bool^0 = bar::x.b 
        )
      }
      }

    foo = process-definition (defined) foo(
        bool<> a
        bool<> b
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a
        b = bool<> foo::b
      unroll sequence: 
        bool<> a
        bool<> b
        a = b;
      footprint: {
        a = bool^0 = foo::b 
        b = bool^0 = foo::b 
      }
      }

    ick = process-definition (defined) ick(
        bar<> p
        bar<> q
      )
      In definition "ick", we have: {
      Instances:
        p = bar<> ick::p
        q = bar<> ick::q
      unroll sequence: 
        bar<> p
        bar<> q
        p = q;
      footprint: {
        p = process bar<>^0 = ick::q (
          x = process foo<>^0 = ick::p.x (
            a = bool^0 = ick::q.x.a 
            b = bool^0 = ick::q.x.b 
          )
          y = process foo<>^0 = ick::p.y (
            a = bool^0 = ick::q.y.a 
            b = bool^0 = ick::q.y.b 
          )
        )
        q = process bar<>^0 = ick::q (
          x = process foo<>^0 = ick::p.x (
            a = bool^0 = ick::q.x.a 
            b = bool^0 = ick::q.x.b 
          )
          y = process foo<>^0 = ick::p.y (
            a = bool^0 = ick::q.y.a 
            b = bool^0 = ick::q.y.b 
          )
        )
      }
      }

  Instances:
    poo = ick<> poo
}

footprint: {
  poo = process ick<>^0 = poo (
    p = process bar<>^0 = poo.p (
      x = process foo<>^0 = poo.p.x (
        a = bool^0 = poo.p.x.a 
        b = bool^0 = poo.p.x.b 
      )
      y = process foo<>^0 = poo.p.y (
        a = bool^0 = poo.p.y.a 
        b = bool^0 = poo.p.y.b 
      )
    )
    q = process bar<>^0 = poo.q (
      x = process foo<>^0 = poo.q.x (
        a = bool^0 = poo.q.x.a 
        b = bool^0 = poo.q.x.b 
      )
      y = process foo<>^0 = poo.q.y (
        a = bool^0 = poo.q.y.a 
        b = bool^0 = poo.q.y.b 
      )
    )
  )
}
