
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	156
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	124
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	50	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	56	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	57	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	62	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	footprnt	0	#HEAD#	#TAIL#	636
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	68	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	69	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	70	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	71	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	72	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	73	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	78	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	79	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	81	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	83	##ADDR##	footprnt	0	#HEAD#	#TAIL#	697
	84	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        bool<> !GND
        bool<> !Vdd
        foo<> x
        foo<> y
      )
      In definition "bar", we have: {
      Instances:
        !GND = bool<> bar::!GND
        !Vdd = bool<> bar::!Vdd
        a = bool<> bar::a
        b = bool<> bar::b
        x = foo<> bar::x
        y = foo<> bar::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          foo<> x
          foo<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        x = y;
        bool<> a
        bool<> b
        x.a = a;
        b = y.b;
        a = b;
      footprint: {
        !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = bar<>::a (3) @[ port-alias ] 
        b = bool^0 = bar<>::a (3) @[ port-alias ] 
        x = process foo<>^0 = bar<>::x (1) @[ port-alias ] (
          !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = bar<>::a (3) @[ port-alias ] 
          b = bool^0 = bar<>::a (3) @[ port-alias ] 
        )
        y = process foo<>^0 = bar<>::x (1) @[ port-alias ] (
          !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
          a = bool^0 = bar<>::a (3) @[ port-alias ] 
          b = bool^0 = bar<>::a (3) @[ port-alias ] 
        )
        Created state:
        process instance pool: (1 ports, 0 local, 0 mapped)
        1	bar<>::x @[ port-alias ]	foo<>
          bool: 1,2,3,3
        bool instance pool: (3 ports, 0 local, 0 mapped)
        1	bar<>::!GND @[ supply_low port-alias ]	
        2	bar<>::!Vdd @[ supply_high port-alias ]	
        3	bar<>::a @[ port-alias ]	
        process port aliases:
        1: bar<>::x = bar<>::y @[ port-alias ]
        bool port aliases:
        1: bar<>::x.!GND = bar<>::y.!GND = bar<>::!GND @[ supply_low port-alias ]
        2: bar<>::x.!Vdd = bar<>::y.!Vdd = bar<>::!Vdd @[ supply_high port-alias ]
        3: bar<>::x.a = bar<>::x.b = bar<>::y.a = bar<>::y.b @[ port-alias ]
      }
      }

    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        a = bool<> foo::a
        b = bool<> foo::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = foo<>::a (3) @[ port-alias ] 
        b = bool^0 = foo<>::b (4) @[ port-alias ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	foo<>::!GND @[ supply_low port-alias ]	
        2	foo<>::!Vdd @[ supply_high port-alias ]	
        3	foo<>::a @[ port-alias ]	
        4	foo<>::b @[ port-alias ]	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    poo = bar<> poo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  poo = process bar<>^0 = poo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = process foo<>^0 = poo.x (2) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      a = bool^0 = poo.x.a (3) 
      b = bool^0 = poo.x.a (3) 
    )
    y = process foo<>^0 = poo.x (2) (
      !GND = bool^0 = !GND (1) @[ supply_low ] 
      !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
      a = bool^0 = poo.x.a (3) 
      b = bool^0 = poo.x.a (3) 
    )
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	poo	bar<>
    process: 2
    bool: 1,2,3
  2	poo.x	foo<>
    bool: 1,2,3,3
  bool instance pool: (0 ports, 3 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	poo.x.a	
}
