
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	80
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	footprnt	0	#HEAD#	#TAIL#	309
	11	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	14	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	28
	15	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	16	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	22	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	28	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	34	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	footprnt	0	#HEAD#	#TAIL#	466
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> a[0..2]
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a^1
      unroll sequence: 
        bool<> a[0..2]
      footprint: {
        a = bool^1
          {
            [0] = foo::a[0] 
            [1] = foo::a[1] 
            [2] = foo::a[2] 
          }
      }
      }

  Instances:
    x = foo<> x^1
}

footprint: {
  x = process foo<>^1
    {
      [0] = x[0] (
        a = bool^1
          {
            [0] = x[0].a[2] 
            [1] = x[0].a[1] 
            [2] = x[2].a[2] 
          }
      )
      [1] = x[1] (
        a = bool^1
          {
            [0] = x[1].a[0] 
            [1] = x[1].a[1] 
            [2] = x[1].a[2] 
          }
      )
      [2] = x[2] (
        a = bool^1
          {
            [0] = x[0].a[2] 
            [1] = x[2].a[1] 
            [2] = x[2].a[2] 
          }
      )
    }
}
