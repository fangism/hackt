
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	152
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	10	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dintplch	0	#HEAD#	#TAIL#	28
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	20	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	21	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	dialias_	0	#HEAD#	#TAIL#	20
	37	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	sdimiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	footprnt	0	#HEAD#	#TAIL#	394
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	footprnt	0	#HEAD#	#TAIL#	394
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	62	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	footprnt	0	#HEAD#	#TAIL#	534
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        int<foo::N> a
      )
      In definition "foo", we have: {
      Parameters:
        N = pint<> foo::N
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        a = int<foo::N> foo::a
        blah = int<foo::N> foo::blah^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          int<foo::N> a
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        int<foo::N> blah[0..2]
        blah[1] = a;
      footprint collection: {
        <8> {
          !GND = bool^0 = foo<8>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<8>::!Vdd (2) @[ supply_high port-alias ] 
          N = pint^0 value: 8
          a = int<8>^0 = foo<8>::a (1) 
          blah = int<8>^1
            {
              [0] = foo<8>::blah[0] (2) 
              [1] = foo<8>::a (1) 
              [2] = foo<8>::blah[2] (3) 
            }
          Created state:
          int instance pool: (1 ports, 2 local, 0 mapped)
          1	foo<8>::a	
          2	foo<8>::blah[0]	
          3	foo<8>::blah[2]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	foo<8>::!GND @[ supply_low port-alias ]	
          2	foo<8>::!Vdd @[ supply_high port-alias ]	
        }
        <11> {
          !GND = bool^0 = foo<11>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<11>::!Vdd (2) @[ supply_high port-alias ] 
          N = pint^0 value: 11
          a = int<11>^0 = foo<11>::a (1) 
          blah = int<11>^1
            {
              [0] = foo<11>::blah[0] (2) 
              [1] = foo<11>::a (1) 
              [2] = foo<11>::blah[2] (3) 
            }
          Created state:
          int instance pool: (1 ports, 2 local, 0 mapped)
          1	foo<11>::a	
          2	foo<11>::blah[0]	
          3	foo<11>::blah[2]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	foo<11>::!GND @[ supply_low port-alias ]	
          2	foo<11>::!Vdd @[ supply_high port-alias ]	
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    achoo = foo<11> achoo
    poo = foo<8> poo
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  achoo = process foo<11>^0 = achoo (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    a = int<11>^0 = achoo.a (2) 
  )
  poo = process foo<8>^0 = poo (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    a = int<8>^0 = poo.a (1) 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	poo	foo<8>
    int: 1
    bool: 1,2
  2	achoo	foo<11>
    int: 2
    bool: 1,2
  int instance pool: (0 ports, 2 local, 4 mapped)
  1	poo.a	
  2	achoo.a	
  private sub-int index map:
    (1 -> 0)
    (2 -> 2)
    (3 -> 4)
  bool instance pool: (0 ports, 2 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
}
