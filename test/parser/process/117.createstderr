
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	procdefn	0	#HEAD#	#TAIL#	96
	12	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	19	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	23	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	footprnt	0	#HEAD#	#TAIL#	338
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	33	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	28
	36	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	37	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	43	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	48	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	51	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	59	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	66	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	577
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	73	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	76	##ADDR##	footprnt	0	#HEAD#	#TAIL#	292
	77	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> M
      pint<> N
      >(
      )
      In definition "bar", we have: {
      Parameters:
        M = pint<> bar::M
        N = pint<> bar::N
      Instances:
        x = foo<bar::M> bar::x^1
      unroll sequence: 
        foo<bar::M> x[0..N-1]
        x[0].a[0] = x[N-1].a[0] = x[0].a[M-1] = x[N-1].a[M-1];
      footprint collection: {
        <3, 3> {
          M = pint^0 value: 3
          N = pint^0 value: 3
          x = process foo<3>^1
            {
              [0] = bar<3, 3>::x[0] (1) (
                a = bool^1
                  {
                    [0] = bar<3, 3>::x[0].a[0] (1) 
                    [1] = bar<3, 3>::x[0].a[1] (2) 
                    [2] = bar<3, 3>::x[0].a[0] (1) 
                  }
              )
              [1] = bar<3, 3>::x[1] (2) (
                a = bool^1
                  {
                    [0] = bar<3, 3>::x[1].a[0] (3) 
                    [1] = bar<3, 3>::x[1].a[1] (4) 
                    [2] = bar<3, 3>::x[1].a[2] (5) 
                  }
              )
              [2] = bar<3, 3>::x[2] (3) (
                a = bool^1
                  {
                    [0] = bar<3, 3>::x[0].a[0] (1) 
                    [1] = bar<3, 3>::x[2].a[1] (6) 
                    [2] = bar<3, 3>::x[0].a[0] (1) 
                  }
              )
            }
          Created state:
          process instance pool:
          1	bar<3, 3>::x[0]
          2	bar<3, 3>::x[1]
          3	bar<3, 3>::x[2]
          bool instance pool:
          1	bar<3, 3>::x[0].a[0]
          2	bar<3, 3>::x[0].a[1]
          3	bar<3, 3>::x[1].a[0]
          4	bar<3, 3>::x[1].a[1]
          5	bar<3, 3>::x[1].a[2]
          6	bar<3, 3>::x[2].a[1]
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> D
      >(
        bool<> a[0..D-1]
      )
      In definition "foo", we have: {
      Parameters:
        D = pint<> foo::D
      Instances:
        a = bool<> foo::a^1
      unroll sequence: 
        ports: (
          bool<> a[0..D-1]
        )
      footprint collection: {
        <3> {
          D = pint^0 value: 3
          a = bool^1
            {
              [0] = foo<3>::a[0] (1) 
              [1] = foo<3>::a[1] (2) 
              [2] = foo<3>::a[2] (3) 
            }
          Created state:
          bool instance pool:
          1	foo<3>::a[0]
          2	foo<3>::a[1]
          3	foo<3>::a[2]
        }
      }
      }

  Instances:
    poo = bar<3, 3> poo
}

footprint: {
  poo = process bar<3, 3>^0 = poo (1) 
  Created state:
  process instance pool:
  1	poo
}
