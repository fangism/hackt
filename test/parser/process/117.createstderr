
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	224
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	37
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	29
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	53
	10	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	14	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	18	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	64
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	412
	20	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	37
	21	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	22	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	37
	23	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	24	##ADDR##	proccoll	1	#HEAD#	#TAIL#	37
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	29	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	33	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	28
	36	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	37	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	40	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	43	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	46	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	48	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	51	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	53	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	56	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	59	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	61	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	64	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	66	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	67	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	71	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	72	##ADDR##	proccoll	1	#HEAD#	#TAIL#	108
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	84
	75	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	76	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	84
	77	##ADDR##	proccoll	0	#HEAD#	#TAIL#	52
	78	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	79	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	80	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> M
      pint<> N
      >(
      )
      In definition "bar", we have: {
        M = pint<> M
        N = pint<> N
        x = foo<pint-inst-ref ::bar::M> x with indices: {
          [0..::bar::N-1]
        }

        footprint collection: {
          <3, 3> {
            pint^0 M value: ?
            pint^0 N value: ?
            process foo<3>^1 x with indices: {
            }
              unrolled indices: {
                0 = ::bar::x[0] (1) (
                  bool^1 a with indices: {
                    [0..::foo::D-1]
                  }
                    unrolled indices: {
                      0 = ::bar::x[2].a[0] (1) 
                      1 = ::bar::x[0].a[1] (2) 
                      2 = ::bar::x[0].a[0] (1) 
                    }
                )
                1 = ::bar::x[1] (2) (
                  bool^1 a with indices: {
                    [0..::foo::D-1]
                  }
                    unrolled indices: {
                      0 = ::bar::x[1].a[0] (3) 
                      1 = ::bar::x[1].a[1] (4) 
                      2 = ::bar::x[1].a[2] (5) 
                    }
                )
                2 = ::bar::x[2] (3) (
                  bool^1 a with indices: {
                    [0..::foo::D-1]
                  }
                    unrolled indices: {
                      0 = ::bar::x[2].a[2] (1) 
                      1 = ::bar::x[2].a[1] (6) 
                      2 = ::bar::x[0].a[2] (1) 
                    }
                )
              }
            process instance pool:
            1	::bar::x[0]
            2	::bar::x[1]
            3	::bar::x[2]
            bool instance pool:
            1	::bar::x[0].a[0]
            2	::bar::x[0].a[1]
            3	::bar::x[1].a[0]
            4	::bar::x[1].a[1]
            5	::bar::x[1].a[2]
            6	::bar::x[2].a[1]
          }
        }
      }

    foo = process-definition (defined) foo<
      pint<> D
      >(
        bool<> a with indices: {
          [0..::foo::D-1]
        }

      )
      In definition "foo", we have: {
        D = pint<> D
        a = bool<> a with indices: {
          [0..::foo::D-1]
        }

        footprint collection: {
          <3> {
            pint^0 D value: ?
            bool^1 a with indices: {
            }
              unrolled indices: {
                0 = ::foo::a[0] (1) 
                1 = ::foo::a[1] (2) 
                2 = ::foo::a[2] (3) 
              }
            bool instance pool:
            1	::foo::a[0]
            2	::foo::a[1]
            3	::foo::a[2]
          }
        }
      }

  Instances:
    poo = process bar<3, 3>^0 poo (instantiated) = ::poo (1) 
}

Created state:
process instance pool:
1	::poo

