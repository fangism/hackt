
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	11	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	12	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	15	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	18	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	22	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	24	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	25	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	26	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	27	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	28	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	30	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	31	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	32	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	33	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	34	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	35	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	37	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	38	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	39	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	40	##ADDR##	procpacc	0	#HEAD#	#TAIL#	33
	41	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	42	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x
        foo<> y
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x
        y = foo<> bar::y
      unroll sequence: 
        foo<> x
        foo<> y
        x = y;
      footprint: {
        x = process foo<>^0 = bar::y (
          a = bool^0 = bar::x.a 
          b = bool^0 = bar::x.b 
        )
        y = process foo<>^0 = bar::y (
          a = bool^0 = bar::x.a 
          b = bool^0 = bar::x.b 
        )
      }
      }

    foo = process-definition (defined) foo(
        bool<> a
        bool<> b
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a
        b = bool<> foo::b
      unroll sequence: 
        bool<> a
        bool<> b
        a = b;
      footprint: {
        a = bool^0 = foo::b 
        b = bool^0 = foo::b 
      }
      }

  Instances:
    poo = bar<> poo
}

footprint: {
  poo = process bar<>^0 = poo (
    x = process foo<>^0 = poo.x (
      a = bool^0 = poo.x.a 
      b = bool^0 = poo.x.b 
    )
    y = process foo<>^0 = poo.y (
      a = bool^0 = poo.y.a 
      b = bool^0 = poo.y.b 
    )
  )
}
