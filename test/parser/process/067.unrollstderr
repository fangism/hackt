
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	180
	4	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	9	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	11	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	59
	17	##ADDR##	procdefn	0	#HEAD#	#TAIL#	196
	18	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	proccoll	0	#HEAD#	#TAIL#	54
	27	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	28	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	29	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	30	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	67
	32	##ADDR##	proccoll	0	#HEAD#	#TAIL#	56
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	34	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	35	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	36	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	37	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	41	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	51

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x
        foo<> y
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> x
        y = foo<> y
      unroll sequence: 
        foo<> x
        foo<> y
        x = y;
      footprint: {
        process foo<>^0 x (instantiated) = ::bar::y (
          bool^1 a
            unrolled indices: {
              0 = ::bar::x.a[0] 
              1 = ::bar::x.a[1] 
            }
        )
        process foo<>^0 y (instantiated) = ::bar::y (
          bool^1 a
            unrolled indices: {
              0 = ::bar::x.a[0] 
              1 = ::bar::x.a[1] 
            }
        )
      }
      }

    foo = process-definition (defined) foo(
        bool<> a[0..1]
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> a

      unroll sequence: 
        bool<> a[0..1]
        a[0] = a[1];
      footprint: {
        bool^1 a
          unrolled indices: {
            0 = ::foo::a[1] 
            1 = ::foo::a[1] 
          }
      }
      }

  Instances:
    poo = process bar<>^0 poo (instantiated) = ::poo (
      process foo<>^0 x (instantiated) = ::poo.x (
        bool^1 a
          unrolled indices: {
            0 = ::poo.x.a[0] 
            1 = ::poo.x.a[1] 
          }
      )
      process foo<>^0 y (instantiated) = ::poo.y (
        bool^1 a
          unrolled indices: {
            0 = ::poo.y.a[0] 
            1 = ::poo.y.a[1] 
          }
      )
    )
}

