
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	196
	4	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	14	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	18	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	47
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	212
	20	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	21	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	22	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	23	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	24	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	33	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	38	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	39	##ADDR##	procpfar	0	#HEAD#	#TAIL#	70
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	39
	42	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	39
	43	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	44	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	45	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	46	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	47	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	procpacc	0	#HEAD#	#TAIL#	54
	50	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	39
	51	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	39

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> M
      pint<> N
      >(
        foo<bar::M> x[0..N-1]
      )
      In definition "bar", we have: {
      Parameters:
        M = pint<> bar::M
        N = pint<> bar::N
      Instances:
        x = foo<bar::M> bar::x^1
      unroll sequence: 
        foo<bar::M> x[0..N-1]
      footprint collection: {
        <3, 2> {
          M = pint^0 value: 3
          N = pint^0 value: 2
          x = process foo<3>^1
            {
              [0] = bar::x[0] (
                a = bool^1
                  {
                    [0] = bar::x[0].a[0] 
                    [1] = bar::x[0].a[1] 
                    [2] = bar::x[0].a[2] 
                  }
              )
              [1] = bar::x[1] (
                a = bool^1
                  {
                    [0] = bar::x[1].a[0] 
                    [1] = bar::x[1].a[1] 
                    [2] = bar::x[1].a[2] 
                  }
              )
            }
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> D
      >(
        bool<> a[0..D-1]
      )
      In definition "foo", we have: {
      Parameters:
        D = pint<> foo::D
      Instances:
        a = bool<> foo::a^1
      unroll sequence: 
        bool<> a[0..D-1]
      footprint collection: {
        <3> {
          D = pint^0 value: 3
          a = bool^1
            {
              [0] = foo::a[0] 
              [1] = foo::a[1] 
              [2] = foo::a[2] 
            }
        }
      }
      }

  Instances:
    poo = bar<3, 2> poo
}

footprint: {
  poo = process bar<3, 2>^0 = poo (
    x = process foo<3>^1
      {
        [0] = poo.x[0] (
          a = bool^1
            {
              [0] = poo.x[0].a[0] 
              [1] = poo.x[0].a[1] 
              [2] = poo.x[0].a[2] 
            }
        )
        [1] = poo.x[1] (
          a = bool^1
            {
              [0] = poo.x[1].a[0] 
              [1] = poo.x[1].a[1] 
              [2] = poo.x[1].a[2] 
            }
        )
      }
  )
}
