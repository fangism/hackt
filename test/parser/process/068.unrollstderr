
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	184
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	11	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	68
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	184
	20	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	24	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	procpfar	0	#HEAD#	#TAIL#	124
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60
	36	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60
	37	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	92
	38	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60
	39	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	proccoll	0	#HEAD#	#TAIL#	41
	43	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	44	##ADDR##	procpfar	0	#HEAD#	#TAIL#	116
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	46	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60
	47	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60
	48	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60
	49	##ADDR##	dboolpfa	0	#HEAD#	#TAIL#	60

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x[0..1][0..1]
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x^2
      unroll sequence: 
        foo<> x[0..1][0..1]
        x[0][1] = x[1][0];
      footprint: {
        x = process foo<>^2
          {
            [0][0] = bar::x[0][0] (
              a = bool^2
                {
                  [0][0] = bar::x[0][0].a[0][0] 
                  [0][1] = bar::x[0][0].a[0][1] 
                  [1][0] = bar::x[0][0].a[1][0] 
                  [1][1] = bar::x[0][0].a[1][1] 
                }
            )
            [0][1] = bar::x[1][0] (
              a = bool^2
                {
                  [0][0] = bar::x[0][1].a[0][0] 
                  [0][1] = bar::x[0][1].a[0][1] 
                  [1][0] = bar::x[0][1].a[1][0] 
                  [1][1] = bar::x[0][1].a[1][1] 
                }
            )
            [1][0] = bar::x[1][0] (
              a = bool^2
                {
                  [0][0] = bar::x[0][1].a[0][0] 
                  [0][1] = bar::x[0][1].a[0][1] 
                  [1][0] = bar::x[0][1].a[1][0] 
                  [1][1] = bar::x[0][1].a[1][1] 
                }
            )
            [1][1] = bar::x[1][1] (
              a = bool^2
                {
                  [0][0] = bar::x[1][1].a[0][0] 
                  [0][1] = bar::x[1][1].a[0][1] 
                  [1][0] = bar::x[1][1].a[1][0] 
                  [1][1] = bar::x[1][1].a[1][1] 
                }
            )
          }
      }
      }

    foo = process-definition (defined) foo(
        bool<> a[0..1][0..1]
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a^2
      unroll sequence: 
        bool<> a[0..1][0..1]
        a[0][0] = a[1][1];
      footprint: {
        a = bool^2
          {
            [0][0] = foo::a[1][1] 
            [0][1] = foo::a[0][1] 
            [1][0] = foo::a[1][0] 
            [1][1] = foo::a[1][1] 
          }
      }
      }

  Instances:
    poo = bar<> poo
}

footprint: {
  poo = process bar<>^0 = poo (
    x = process foo<>^2
      {
        [0][0] = poo.x[0][0] (
          a = bool^2
            {
              [0][0] = poo.x[0][0].a[0][0] 
              [0][1] = poo.x[0][0].a[0][1] 
              [1][0] = poo.x[0][0].a[1][0] 
              [1][1] = poo.x[0][0].a[1][1] 
            }
        )
        [0][1] = poo.x[0][1] (
          a = bool^2
            {
              [0][0] = poo.x[0][1].a[0][0] 
              [0][1] = poo.x[0][1].a[0][1] 
              [1][0] = poo.x[0][1].a[1][0] 
              [1][1] = poo.x[0][1].a[1][1] 
            }
        )
        [1][0] = poo.x[1][0] (
          a = bool^2
            {
              [0][0] = poo.x[1][0].a[0][0] 
              [0][1] = poo.x[1][0].a[0][1] 
              [1][0] = poo.x[1][0].a[1][0] 
              [1][1] = poo.x[1][0].a[1][1] 
            }
        )
        [1][1] = poo.x[1][1] (
          a = bool^2
            {
              [0][0] = poo.x[1][1].a[0][0] 
              [0][1] = poo.x[1][1].a[0][1] 
              [1][0] = poo.x[1][1].a[1][0] 
              [1][1] = poo.x[1][1].a[1][1] 
            }
        )
      }
  )
}
