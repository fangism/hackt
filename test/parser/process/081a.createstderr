
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	proccoll	1	#HEAD#	#TAIL#	108
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	224
	5	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	64
	11	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	12	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	80
	16	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	64
	17	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	80
	18	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	28
	19	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	20	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	26	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	32	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	38	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> a with indices: {
        }

      )
      In definition "foo", we have: {
      Instances:
        a = bool<> a with indices: {
        }

      unroll sequence: 
        bool<> a[0..2]
      footprint: {
        bool^1 a with indices: {
        }
          unrolled indices: {
            0 = ::foo::a[0] (1) 
            1 = ::foo::a[1] (2) 
            2 = ::foo::a[2] (3) 
          }
        bool instance pool:
        1	::foo::a[0]
        2	::foo::a[1]
        3	::foo::a[2]
      }
      }

  Instances:
    x = process foo<>^1 x with indices: {
    }
      unrolled indices: {
        0 = ::x[0] (1) (
          bool^1 a with indices: {
          }
            unrolled indices: {
              0 = ::x[2].a[0] (1) 
              1 = ::x[0].a[1] (2) 
              2 = ::x[0].a[0] (1) 
            }
        )
        1 = ::x[1] (2) (
          bool^1 a with indices: {
          }
            unrolled indices: {
              0 = ::x[1].a[0] (3) 
              1 = ::x[1].a[1] (4) 
              2 = ::x[1].a[2] (5) 
            }
        )
        2 = ::x[2] (3) (
          bool^1 a with indices: {
          }
            unrolled indices: {
              0 = ::x[2].a[2] (1) 
              1 = ::x[2].a[1] (6) 
              2 = ::x[0].a[2] (1) 
            }
        )
      }
}

Created state:
process instance pool:
1	::x[0]
2	::x[1]
3	::x[2]
bool instance pool:
1	::x[0].a[0]
2	::x[0].a[1]
3	::x[1].a[0]
4	::x[1].a[1]
5	::x[1].a[2]
6	::x[2].a[1]

