
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	320
	4	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	30
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	8	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	20
	11	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	20
	15	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	117
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	876
	20	##ADDR##	proccoll	2	#HEAD#	#TAIL#	38
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	24	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	26	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	30	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	proccoll	2	#HEAD#	#TAIL#	173
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	122
	36	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	122
	37	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	122
	38	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	122
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	57
	40	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	proccoll	2	#HEAD#	#TAIL#	178
	44	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	45	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	122
	46	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	146
	47	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	146
	48	##ADDR##	dboolcol	2	#HEAD#	#TAIL#	122

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x with indices: {
          [0..1][0..1]
        }

      )
      In definition "bar", we have: {
      Instances:
        x = foo<> x with indices: {
          [0..1][0..1]
        }

      unroll sequence: 
        foo<> x[0..1][0..1]
        x[0][1] = x[1][0];
      footprint: {
        process foo<>^2 x with indices: {
        }
          unrolled indices: {
            [0][0] = ::bar::x[0][0] (1) (
              bool^2 a with indices: {
                [0..1][0..1]
              }
                unrolled indices: {
                  [0][0] = ::bar::x[0][0].a[1][1] (1) 
                  [0][1] = ::bar::x[0][0].a[0][1] (2) 
                  [1][0] = ::bar::x[0][0].a[1][0] (3) 
                  [1][1] = ::bar::x[0][0].a[0][0] (1) 
                }
            )
            [0][1] = ::bar::x[1][0] (2) (
              bool^2 a with indices: {
                [0..1][0..1]
              }
                unrolled indices: {
                  [0][0] = ::bar::x[0][1].a[1][1] (4) 
                  [0][1] = ::bar::x[0][1].a[0][1] (5) 
                  [1][0] = ::bar::x[0][1].a[1][0] (6) 
                  [1][1] = ::bar::x[0][1].a[0][0] (4) 
                }
            )
            [1][0] = ::bar::x[0][1] (2) (
              bool^2 a with indices: {
                [0..1][0..1]
              }
                unrolled indices: {
                  [0][0] = ::bar::x[1][0].a[1][1] (4) 
                  [0][1] = ::bar::x[1][0].a[0][1] (5) 
                  [1][0] = ::bar::x[1][0].a[1][0] (6) 
                  [1][1] = ::bar::x[1][0].a[0][0] (4) 
                }
            )
            [1][1] = ::bar::x[1][1] (3) (
              bool^2 a with indices: {
                [0..1][0..1]
              }
                unrolled indices: {
                  [0][0] = ::bar::x[1][1].a[1][1] (7) 
                  [0][1] = ::bar::x[1][1].a[0][1] (8) 
                  [1][0] = ::bar::x[1][1].a[1][0] (9) 
                  [1][1] = ::bar::x[1][1].a[0][0] (7) 
                }
            )
          }
        process instance pool:
        1	::bar::x[0][0]
        2	::bar::x[0][1]
        3	::bar::x[1][1]
        bool instance pool:
        1	::bar::x[0][0].a[0][0]
        2	::bar::x[0][0].a[0][1]
        3	::bar::x[0][0].a[1][0]
        4	::bar::x[0][1].a[0][0]
        5	::bar::x[0][1].a[0][1]
        6	::bar::x[0][1].a[1][0]
        7	::bar::x[1][1].a[0][0]
        8	::bar::x[1][1].a[0][1]
        9	::bar::x[1][1].a[1][0]
        process port aliases:
        2: ::bar::x[0][1] = ::bar::x[1][0]
        bool port aliases:
        1: ::bar::x[0][0].a[0][0] = ::bar::x[0][0].a[1][1]
        4: ::bar::x[0][1].a[0][0] = ::bar::x[0][1].a[1][1] = ::bar::x[1][0].a[0][0] = ::bar::x[1][0].a[1][1]
        5: ::bar::x[0][1].a[0][1] = ::bar::x[1][0].a[0][1]
        6: ::bar::x[0][1].a[1][0] = ::bar::x[1][0].a[1][0]
        7: ::bar::x[1][1].a[0][0] = ::bar::x[1][1].a[1][1]
      }
      }

    foo = process-definition (defined) foo(
        bool<> a with indices: {
          [0..1][0..1]
        }

      )
      In definition "foo", we have: {
      Instances:
        a = bool<> a with indices: {
          [0..1][0..1]
        }

      unroll sequence: 
        bool<> a[0..1][0..1]
        a[0][0] = a[1][1];
      footprint: {
        bool^2 a with indices: {
        }
          unrolled indices: {
            [0][0] = ::foo::a[1][1] (1) 
            [0][1] = ::foo::a[0][1] (2) 
            [1][0] = ::foo::a[1][0] (3) 
            [1][1] = ::foo::a[0][0] (1) 
          }
        bool instance pool:
        1	::foo::a[0][0]
        2	::foo::a[0][1]
        3	::foo::a[1][0]
        bool port aliases:
        1: ::foo::a[0][0] = ::foo::a[1][1]
      }
      }

  Instances:
    poo = process bar<>^0 poo (instantiated) = ::poo (1) (
      process foo<>^2 x with indices: {
        [0..1][0..1]
      }
        unrolled indices: {
          [0][0] = ::poo.x[0][0] (2) (
            bool^2 a with indices: {
              [0..1][0..1]
            }
              unrolled indices: {
                [0][0] = ::poo.x[0][0].a[1][1] (1) 
                [0][1] = ::poo.x[0][0].a[0][1] (2) 
                [1][0] = ::poo.x[0][0].a[1][0] (3) 
                [1][1] = ::poo.x[0][0].a[0][0] (1) 
              }
          )
          [0][1] = ::poo.x[1][0] (3) (
            bool^2 a with indices: {
              [0..1][0..1]
            }
              unrolled indices: {
                [0][0] = ::poo.x[0][1].a[1][1] (4) 
                [0][1] = ::poo.x[1][0].a[0][1] (5) 
                [1][0] = ::poo.x[1][0].a[1][0] (6) 
                [1][1] = ::poo.x[1][0].a[0][0] (4) 
              }
          )
          [1][0] = ::poo.x[0][1] (3) (
            bool^2 a with indices: {
              [0..1][0..1]
            }
              unrolled indices: {
                [0][0] = ::poo.x[1][0].a[1][1] (4) 
                [0][1] = ::poo.x[0][1].a[0][1] (5) 
                [1][0] = ::poo.x[0][1].a[1][0] (6) 
                [1][1] = ::poo.x[0][1].a[0][0] (4) 
              }
          )
          [1][1] = ::poo.x[1][1] (4) (
            bool^2 a with indices: {
              [0..1][0..1]
            }
              unrolled indices: {
                [0][0] = ::poo.x[1][1].a[1][1] (7) 
                [0][1] = ::poo.x[1][1].a[0][1] (8) 
                [1][0] = ::poo.x[1][1].a[1][0] (9) 
                [1][1] = ::poo.x[1][1].a[0][0] (7) 
              }
          )
        }
    )
}

Created state:
process instance pool:
1	::poo
2	::poo.x[0][0]
3	::poo.x[0][1]
4	::poo.x[1][1]
bool instance pool:
1	::poo.x[0][0].a[0][0]
2	::poo.x[0][0].a[0][1]
3	::poo.x[0][0].a[1][0]
4	::poo.x[0][1].a[0][0]
5	::poo.x[0][1].a[0][1]
6	::poo.x[0][1].a[1][0]
7	::poo.x[1][1].a[0][0]
8	::poo.x[1][1].a[0][1]
9	::poo.x[1][1].a[1][0]

