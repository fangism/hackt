
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	4	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	53
	8	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	15	##ADDR##	procdefn	0	#HEAD#	#TAIL#	142
	16	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	17	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	20	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	28
	24	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	26	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	27	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	28	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	29	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	30	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	24
	31	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	32	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	33	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	34	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	35	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	36	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	38
	38	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	39	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	41	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	42	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	43	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	44	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	47	##ADDR##	proccoll	0	#HEAD#	#TAIL#	64
	48	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	52	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	55	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	56	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	58	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	59	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	60	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	61	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	64	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	65	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x
        foo<> y
        foo<> z
      )
      In definition "bar", we have: {
        x = foo<> x
        y = foo<> y
        z = foo<> z
        footprint: {
          process foo<>^0 x (instantiated) = ::bar::x (
            bool^0 a (instantiated) = ::bar::z.a 
            bool^0 b (instantiated) = ::bar::x.b 
            bool^0 c (instantiated) = ::bar::z.c 
          )
          process foo<>^0 y (instantiated) = ::bar::y (
            bool^0 a (instantiated) = ::bar::y.a 
            bool^0 b (instantiated) = ::bar::y.b 
            bool^0 c (instantiated) = ::bar::y.c 
          )
          process foo<>^0 z (instantiated) = ::bar::z (
            bool^0 a (instantiated) = ::bar::x.c 
            bool^0 b (instantiated) = ::bar::z.b 
            bool^0 c (instantiated) = ::bar::x.a 
          )
        }
      }

    foo = process-definition (defined) foo(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "foo", we have: {
        a = bool<> a
        b = bool<> b
        c = bool<> c
        footprint: {
          bool^0 a (instantiated) = ::foo::a 
          bool^0 b (instantiated) = ::foo::b 
          bool^0 c (instantiated) = ::foo::c 
        }
      }

  Instances:
    poo = process bar<>^0 poo (instantiated) = ::poo (
      process foo<>^0 x (instantiated) = ::poo.x (
        bool^0 a (instantiated) = ::poo.x.a 
        bool^0 b (instantiated) = ::poo.x.b 
        bool^0 c (instantiated) = ::poo.x.c 
      )
      process foo<>^0 y (instantiated) = ::poo.y (
        bool^0 a (instantiated) = ::poo.y.a 
        bool^0 b (instantiated) = ::poo.y.b 
        bool^0 c (instantiated) = ::poo.y.c 
      )
      process foo<>^0 z (instantiated) = ::poo.z (
        bool^0 a (instantiated) = ::poo.z.a 
        bool^0 b (instantiated) = ::poo.z.b 
        bool^0 c (instantiated) = ::poo.z.c 
      )
    )
}

