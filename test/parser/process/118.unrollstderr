
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	212
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	17
	15	##ADDR##	procdefn	0	#HEAD#	#TAIL#	212
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	18	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	25	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	27	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	29	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	31	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	33	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	35	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	37	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	39	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	40	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	41	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	42	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	43	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	44	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	45	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	46	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	48	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	49	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	50	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	51	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	52	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	53	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	54	##ADDR##	proccoll	0	#HEAD#	#TAIL#	37
	55	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	56	##ADDR##	procpacc	0	#HEAD#	#TAIL#	37
	57	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	58	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17
	59	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	17

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> y
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x
        y = foo<> bar::y
        z = foo<> bar::z
      unroll sequence: 
        foo<> y
        foo<> x
        foo<> z
        x (z.a, , z.c);
        z (x.c, , z.a);
      footprint: {
        x = process foo<>^0 = bar::x (
          a = bool^0 = bar::x.a 
          b = bool^0 = bar::x.b 
          c = bool^0 = bar::x.a 
        )
        y = process foo<>^0 = bar::y (
          a = bool^0 = bar::y.a 
          b = bool^0 = bar::y.b 
          c = bool^0 = bar::y.c 
        )
        z = process foo<>^0 = bar::z (
          a = bool^0 = bar::x.a 
          b = bool^0 = bar::z.b 
          c = bool^0 = bar::x.a 
        )
      }
      }

    foo = process-definition (defined) foo(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a
        b = bool<> foo::b
        c = bool<> foo::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      footprint: {
        a = bool^0 = foo::a 
        b = bool^0 = foo::b 
        c = bool^0 = foo::c 
      }
      }

  Instances:
    poo = bar<> poo
}

footprint: {
  poo = process bar<>^0 = poo (
    y = process foo<>^0 = poo.y (
      a = bool^0 = poo.y.a 
      b = bool^0 = poo.y.b 
      c = bool^0 = poo.y.c 
    )
  )
}
