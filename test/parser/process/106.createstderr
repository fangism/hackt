
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	30
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	132
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	13	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	17	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	25	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	26	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	24
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	39	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	footprnt	0	#HEAD#	#TAIL#	362
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	footprnt	0	#HEAD#	#TAIL#	398
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	footprnt	0	#HEAD#	#TAIL#	414
	47	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	48	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	49	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	50	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	51	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	footprnt	0	#HEAD#	#TAIL#	585
	58	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo<
      pint<> N
      >(
        bool<> a[0..N-1]
      )
      In definition "foo", we have: {
      Parameters:
        N = pint<> foo::N
      Instances:
        a = bool<> foo::a^1
        q = bool<> foo::q^1
      unroll sequence: 
        bool<> a[0..N-1]
        bool<> q[0..N/2-1]
        q[0] = a[0] = a[N/2];
      footprint collection: {
        <3> {
          N = pint^0 value: 3
          a = bool^1
            {
              [0] = foo::q[0] (1) 
              [1] = foo::q[0] (1) 
              [2] = foo::a[2] (2) 
            }
          q = bool^1
            {
              [0] = foo::q[0] (1) 
            }
          Created state:
          bool instance pool:
          1	foo::q[0]
          2	foo::a[2]
          bool port aliases:
          1: foo::a[0] = foo::a[1]
        }
        <4> {
          N = pint^0 value: 4
          a = bool^1
            {
              [0] = foo::q[0] (1) 
              [1] = foo::a[1] (3) 
              [2] = foo::q[0] (1) 
              [3] = foo::a[3] (4) 
            }
          q = bool^1
            {
              [0] = foo::q[0] (1) 
              [1] = foo::q[1] (2) 
            }
          Created state:
          bool instance pool:
          1	foo::q[0]
          2	foo::q[1]
          3	foo::a[1]
          4	foo::a[3]
          bool port aliases:
          1: foo::a[0] = foo::a[2]
        }
        <5> {
          N = pint^0 value: 5
          a = bool^1
            {
              [0] = foo::q[0] (1) 
              [1] = foo::a[1] (3) 
              [2] = foo::q[0] (1) 
              [3] = foo::a[3] (4) 
              [4] = foo::a[4] (5) 
            }
          q = bool^1
            {
              [0] = foo::q[0] (1) 
              [1] = foo::q[1] (2) 
            }
          Created state:
          bool instance pool:
          1	foo::q[0]
          2	foo::q[1]
          3	foo::a[1]
          4	foo::a[3]
          5	foo::a[4]
          bool port aliases:
          1: foo::a[0] = foo::a[2]
        }
      }
      }

  Instances:
    blinky = foo<3> blinky
    clyde = foo<5> clyde
    inky = foo<4> inky
}

footprint: {
  blinky = process foo<3>^0 = blinky (1) (
    a = bool^1
      {
        [0] = blinky.a[0] (1) 
        [1] = blinky.a[0] (1) 
        [2] = blinky.a[2] (2) 
      }
  )
  clyde = process foo<5>^0 = clyde (3) (
    a = bool^1
      {
        [0] = clyde.a[0] (6) 
        [1] = clyde.a[1] (7) 
        [2] = clyde.a[0] (6) 
        [3] = clyde.a[3] (8) 
        [4] = clyde.a[4] (9) 
      }
  )
  inky = process foo<4>^0 = inky (2) (
    a = bool^1
      {
        [0] = inky.a[0] (3) 
        [1] = inky.a[1] (4) 
        [2] = inky.a[0] (3) 
        [3] = inky.a[3] (5) 
      }
  )
  Created state:
  process instance pool:
  1	blinky
  2	inky
  3	clyde
  bool instance pool:
  1	blinky.a[0]
  2	blinky.a[2]
  3	inky.a[0]
  4	inky.a[1]
  5	inky.a[3]
  6	clyde.a[0]
  7	clyde.a[1]
  8	clyde.a[3]
  9	clyde.a[4]
}
