
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	236
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	12	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	13	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	15	##ADDR##	procdefn	0	#HEAD#	#TAIL#	400
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	18	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	24	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	28	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	30	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	37	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	38	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	40	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	43	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	45	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	48	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	49	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	50	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	51	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	52	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	54	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	55	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	56	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	58	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	59	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	60	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	61	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	62	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	64	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	65	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x
        foo<> y
        foo<> z
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x
        y = foo<> bar::y
        z = foo<> bar::z
      unroll sequence: 
        foo<> x
        foo<> y
        foo<> z
        x (z.a, , z.c);
        z (x.c, , z.a);
      footprint: {
        x = process foo<>^0 = bar::x (1) (
          a = bool^0 = bar::x.a (1) 
          b = bool^0 = bar::x.b (2) 
          c = bool^0 = bar::x.a (1) 
        )
        y = process foo<>^0 = bar::y (2) (
          a = bool^0 = bar::y.a (3) 
          b = bool^0 = bar::y.b (4) 
          c = bool^0 = bar::y.c (5) 
        )
        z = process foo<>^0 = bar::z (3) (
          a = bool^0 = bar::x.a (1) 
          b = bool^0 = bar::z.b (6) 
          c = bool^0 = bar::x.a (1) 
        )
        Created state:
        process instance pool:
        1	bar::x
        2	bar::y
        3	bar::z
        bool instance pool:
        1	bar::x.a
        2	bar::x.b
        3	bar::y.a
        4	bar::y.b
        5	bar::y.c
        6	bar::z.b
        bool port aliases:
        1: bar::x.a = bar::x.c = bar::z.a = bar::z.c
      }
      }

    foo = process-definition (defined) foo(
        bool<> a
        bool<> b
        bool<> c
      )
      In definition "foo", we have: {
      Instances:
        a = bool<> foo::a
        b = bool<> foo::b
        c = bool<> foo::c
      unroll sequence: 
        bool<> a
        bool<> b
        bool<> c
      footprint: {
        a = bool^0 = foo::a (1) 
        b = bool^0 = foo::b (2) 
        c = bool^0 = foo::c (3) 
        Created state:
        bool instance pool:
        1	foo::a
        2	foo::b
        3	foo::c
      }
      }

  Instances:
    poo = bar<> poo
}

footprint: {
  poo = process bar<>^0 = poo (1) (
    x = process foo<>^0 = poo.x (2) (
      a = bool^0 = poo.x.a (1) 
      b = bool^0 = poo.x.b (2) 
      c = bool^0 = poo.x.a (1) 
    )
    y = process foo<>^0 = poo.y (3) (
      a = bool^0 = poo.y.a (3) 
      b = bool^0 = poo.y.b (4) 
      c = bool^0 = poo.y.c (5) 
    )
    z = process foo<>^0 = poo.z (4) (
      a = bool^0 = poo.x.a (1) 
      b = bool^0 = poo.z.b (6) 
      c = bool^0 = poo.x.a (1) 
    )
  )
  Created state:
  process instance pool:
  1	poo
  2	poo.x
  3	poo.y
  4	poo.z
  bool instance pool:
  1	poo.x.a
  2	poo.x.b
  3	poo.y.a
  4	poo.y.b
  5	poo.y.c
  6	poo.z.b
}
