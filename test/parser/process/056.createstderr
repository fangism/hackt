
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	84
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	6	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	7	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	72
	9	##ADDR##	footprnt	0	#HEAD#	#TAIL#	262
	10	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	11	##ADDR##	footprnt	0	#HEAD#	#TAIL#	326
	12	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	14	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	footprnt	0	#HEAD#	#TAIL#	351
	17	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        foo<> x[0..1]
      )
      In definition "bar", we have: {
      Instances:
        x = foo<> bar::x^1
      unroll sequence: 
        ports: (
          foo<> x[0..1]
        )
      footprint: {
        x = process foo<>^1
          {
            [0] = bar<>::x[0] (1) 
            [1] = bar<>::x[1] (2) 
          }
        Created state:
        process instance pool:
        1	bar<>::x[0]
        2	bar<>::x[1]
      }
      }

    foo = process-definition (defined) foo(
      )
      In definition "foo", we have: {
      unroll sequence: 
      footprint: {
      }
      }

  Instances:
    poo = bar<> poo
}

footprint: {
  poo = process bar<>^0 = poo (1) (
    x = process foo<>^1
      {
        [0] = poo.x[0] (2) 
        [1] = poo.x[1] (3) 
      }
  )
  Created state:
  process instance pool:
  1	poo
  2	poo.x[0]
  3	poo.x[1]
}
