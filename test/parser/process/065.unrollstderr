
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	216
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	9	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	10	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	11	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	30
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	15	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	16	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	19	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	20	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	24	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	25	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	64
	26	##ADDR##	procdefn	0	#HEAD#	#TAIL#	216
	27	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	28	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	29	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	30	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	31	##ADDR##	proccoll	1	#HEAD#	#TAIL#	38
	32	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	33	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	35	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	arithexp	0	#HEAD#	#TAIL#	17
	40	##ADDR##	spimref_	0	#HEAD#	#TAIL#	20
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	45	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	46	##ADDR##	proccoll	1	#HEAD#	#TAIL#	83
	47	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	48	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69
	49	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69
	50	##ADDR##	proccoll	0	#HEAD#	#TAIL#	57
	51	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	52	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	57	##ADDR##	proccoll	1	#HEAD#	#TAIL#	88
	58	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69
	62	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	69

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar<
      pint<> M
      pint<> N
      >(
        foo<::bar::M, ::foo::D+1> x with indices: {
          [0..::bar::N-1]
        }

      )
      In definition "bar", we have: {
      Parameters:
        M = pint<> M
        N = pint<> N
      Instances:
        x = foo<::bar::M, ::foo::D+1> x with indices: {
          [0..::bar::N-1]
        }

      unroll sequence: 
        pint<> M
        pint<> N
        foo<::bar::M, ::foo::D+1> x[0..N-1]
      footprint collection: {
        <3, 2> {
          pint^0 M value: ?
          pint^0 N value: ?
          process foo<3, 4>^1 x with indices: {
          }
            unrolled indices: {
              0 = ::bar::x[0] (
                bool^1 a with indices: {
                  [0..::foo::D-1]
                }
                  unrolled indices: {
                    0 = ::bar::x[0].a[0] 
                    1 = ::bar::x[0].a[1] 
                    2 = ::bar::x[0].a[2] 
                  }
              )
              1 = ::bar::x[1] (
                bool^1 a with indices: {
                  [0..::foo::D-1]
                }
                  unrolled indices: {
                    0 = ::bar::x[1].a[0] 
                    1 = ::bar::x[1].a[1] 
                    2 = ::bar::x[1].a[2] 
                  }
              )
            }
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> D
      pint<> E (default = D+1)
      >(
        bool<> a with indices: {
          [0..::foo::D-1]
        }

      )
      In definition "foo", we have: {
      Parameters:
        D = pint<> D
        E = pint<> E (default = D+1)
      Instances:
        a = bool<> a with indices: {
          [0..::foo::D-1]
        }

      unroll sequence: 
        pint<> D
        pint<> E
        bool<> a[0..D-1]
      footprint collection: {
        <3, 4> {
          pint^0 D value: ?
          pint^0 E value: ?
          bool^1 a with indices: {
          }
            unrolled indices: {
              0 = ::foo::a[0] 
              1 = ::foo::a[1] 
              2 = ::foo::a[2] 
            }
        }
      }
      }

  Instances:
    poo = process bar<3, 2>^0 poo (instantiated) = ::poo (
      process foo<3, 4>^1 x with indices: {
        [0..::bar::N-1]
      }
        unrolled indices: {
          0 = ::poo.x[0] (
            bool^1 a with indices: {
              [0..::foo::D-1]
            }
              unrolled indices: {
                0 = ::poo.x[0].a[0] 
                1 = ::poo.x[0].a[1] 
                2 = ::poo.x[0].a[2] 
              }
          )
          1 = ::poo.x[1] (
            bool^1 a with indices: {
              [0..::foo::D-1]
            }
              unrolled indices: {
                0 = ::poo.x[1].a[0] 
                1 = ::poo.x[1].a[1] 
                2 = ::poo.x[1].a[2] 
              }
          )
        }
    )
}

