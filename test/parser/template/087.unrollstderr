
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	217
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	10	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	14	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	18	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	42
	19	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	22	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	26	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	27	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	31	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	38
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	33	##ADDR##	proccoll	0	#HEAD#	#TAIL#	56
	34	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	36	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	38
	40	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    e1of = process-definition (defined) e1of<
      pint<> N
      >(
        bool<> d[0..N-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        N = pint<> N
      Instances:
        d = bool<> d

        e = bool<> e
      unroll sequence: 
        pint<> N
        bool<> d[0..N-1]
        bool<> e
      spec:
        exclhi(d[0],d[1..N-1])
      footprint collection: {
        <1> {
          pint^0 N value: ?
          bool^1 d
            unrolled indices: {
              0 = ::e1of::d[0] 
            }
          bool^0 e (instantiated) = ::e1of::e 
        }
      }
      }

  Instances:
    foo = process e1of<1>^0 foo (instantiated) = ::foo (
      bool^1 d
        unrolled indices: {
          0 = ::foo.d[0] 
        }
      bool^0 e (instantiated) = ::foo.e 
    )
}

