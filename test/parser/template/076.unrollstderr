
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	264
	4	##ADDR##	proccoll	0	#HEAD#	#TAIL#	55
	5	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	252
	8	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	34
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	16	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	17	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	18	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	24	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	44
	29	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	30	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	31	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	65
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	34	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	35	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	36	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	37	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	40	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	34
	41	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	42	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	46	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	50	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	51	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	53	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	55	##ADDR##	portconn	0	#HEAD#	#TAIL#	24
	56	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	57	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	58	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	44
	61	##ADDR##	proccoll	0	#HEAD#	#TAIL#	58
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	63	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	64	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	65	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	66	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	67	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	68	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	65
	69	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	70	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	71	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	72	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	73	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	76	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	70
	77	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	78	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	79	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	80	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	81	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	82	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	83	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	84	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	85	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	86	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	87	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	88	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	89	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	90	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	91	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	92	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	93	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	98	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	103	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	portconn	0	#HEAD#	#TAIL#	28
	106	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	107	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	108	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	109	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  1 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Parameters:
    p = pint^1 p with indices: {
      [0..2]
    }
      unrolled index-value pairs: {
        0 = 1
        1 = 0
        2 = 1
      }
  Definitions:
    ass = process-definition (defined) ass<
      pint<> N
      pint<> d with indices: {
        [0..::ass::N-1]
      }

      >(
        bool<> x
        bool<> y
        bool<> z
      )
      In definition "ass", we have: {
      Parameters:
        N = pint<> N
        d = pint<> d with indices: {
          [0..::ass::N-1]
        }

      Instances:
        myfoo = foo<::ass::N, 3, ::ass::d> myfoo
        x = bool<> x
        y = bool<> y
        z = bool<> z
      unroll sequence: 
        pint<> N
        pint<> d[0..N-1]
        bool<> x
        bool<> y
        bool<> z
        foo<::ass::N, 3, ::ass::d> myfoo
        myfoo (x, y);
      footprint collection: {
        <3, {1,0,1}> {
          process foo<3, 3, {1,0,1}>^0 myfoo (instantiated) = ::ass::myfoo (
            bool^0 r (instantiated) = ::ass::x 
            bool^0 s (instantiated) = ::ass::y 
          )
          pint^0 N value: ?
          pint^1 d with indices: {
          }
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          bool^0 x (instantiated) = ::ass::myfoo.r 
          bool^0 y (instantiated) = ::ass::myfoo.s 
          bool^0 z (instantiated) = ::ass::z 
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> N
      pint<> M
      pint<> d with indices: {
        [0..::foo::N-1]
      }

      >(
        bool<> r
        bool<> s
      )
      In definition "foo", we have: {
      Parameters:
        M = pint<> M
        N = pint<> N
        d = pint<> d with indices: {
          [0..::foo::N-1]
        }

      Instances:
        r = bool<> r
        s = bool<> s
      unroll sequence: 
        pint<> N
        pint<> M
        pint<> d[0..N-1]
        bool<> r
        bool<> s
      footprint collection: {
        <3, 3, {1,0,1}> {
          pint^0 M value: ?
          pint^0 N value: ?
          pint^1 d with indices: {
          }
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          bool^0 r (instantiated) = ::foo::r 
          bool^0 s (instantiated) = ::foo::s 
        }
      }
      }

  Instances:
    a = bool^0 a (instantiated) = ::myass.x 
    b = bool^0 b (instantiated) = ::myass.y 
    c = bool^0 c (instantiated) = ::myass.z 
    myass = process ass<3, {1,0,1}>^0 myass (instantiated) = ::myass (
      bool^0 x (instantiated) = ::a 
      bool^0 y (instantiated) = ::b 
      bool^0 z (instantiated) = ::c 
    )
}

