
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	48
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	260
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	6	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	7	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	8	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	9	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	10	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	11	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	12	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	13	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	16	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	17	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	procdefn	0	#HEAD#	#TAIL#	244
	26	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	27	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	28	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	29	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	30	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	31	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	32	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	36	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	41	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	36
	46	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	47	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	48	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	56
	49	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	50	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	51	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	52	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	58	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	61	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	36
	66	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	67	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	68	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	69	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	70	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	71	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	56
	72	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	73	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	74	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	75	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	76	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	77	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	78	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	79	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	80	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	81	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	82	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	83	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	84	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	85	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	86	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	96	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	102	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	103	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	104	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	106	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	108	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	109	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	111	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	112	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	113	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	114	##ADDR##	dboolpac	0	#HEAD#	#TAIL#	21
	115	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	116	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	117	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	118	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	56

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  1 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Parameters:
    p = pint<> p^1
  Definitions:
    ass = process-definition (defined) ass<
      pint<> N
      pint<> d[0..N-1]
      >(
        bool<> x
        bool<> y
        bool<> z
      )
      In definition "ass", we have: {
      Parameters:
        N = pint<> ass::N
        d = pint<> ass::d^1
      Instances:
        myfoo = foo<ass::N, 3, ass::d[0..ass::N-1]> ass::myfoo
        x = bool<> ass::x
        y = bool<> ass::y
        z = bool<> ass::z
      unroll sequence: 
        bool<> x
        bool<> y
        bool<> z
        foo<ass::N, 3, ass::d[0..ass::N-1]> myfoo
        myfoo (x, y);
      footprint collection: {
        <3, {1,0,1}> {
          N = pint^0 value: 3
          d = pint^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
              2 = 1
            }
          myfoo = process foo<3, 3, {1,0,1}>^0 = ass::myfoo (
            r = bool^0 = ass::myfoo.r 
            s = bool^0 = ass::myfoo.s 
          )
          x = bool^0 = ass::myfoo.r 
          y = bool^0 = ass::myfoo.s 
          z = bool^0 = ass::z 
        }
      }
      }

    foo = process-definition (defined) foo<
      pint<> N
      pint<> M
      pint<> d[0..N-1]
      >(
        bool<> r
        bool<> s
      )
      In definition "foo", we have: {
      Parameters:
        M = pint<> foo::M
        N = pint<> foo::N
        d = pint<> foo::d^1
      Instances:
        r = bool<> foo::r
        s = bool<> foo::s
      unroll sequence: 
        bool<> r
        bool<> s
      footprint collection: {
        <3, 3, {1,0,1}> {
          M = pint^0 value: 3
          N = pint^0 value: 3
          d = pint^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
              2 = 1
            }
          r = bool^0 = foo::r 
          s = bool^0 = foo::s 
        }
      }
      }

  Instances:
    a = bool<> a
    b = bool<> b
    c = bool<> c
    myass = ass<3, p> myass
}

footprint: {
  a = bool^0 = myass.x 
  b = bool^0 = myass.y 
  c = bool^0 = myass.z 
  myass = process ass<3, {1,0,1}>^0 = myass (
    x = bool^0 = myass.x 
    y = bool^0 = myass.y 
    z = bool^0 = myass.z 
  )
  p = pint^1
    unrolled index-value pairs: {
      0 = 1
      1 = 0
      2 = 1
    }
}
