
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	146
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	10	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	11	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	12	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	15	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	16	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	17	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	20	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	21	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	24	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	34	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	35	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	38	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	48	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	footprnt	0	#HEAD#	#TAIL#	378
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	procdefn	0	#HEAD#	#TAIL#	153
	59	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	61	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	62	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	63	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	64	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	65	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	66	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	67	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	68	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	72	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	75	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	81	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	footprnt	0	#HEAD#	#TAIL#	544
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	32
	89	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	92	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	94	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	95	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	97	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	99	##ADDR##	apimvref	0	#HEAD#	#TAIL#	21
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	footprnt	0	#HEAD#	#TAIL#	574
	103	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	104	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    cmos_source_e = process-definition (defined) cmos_source_e<
      pint<> M
      ><
      pint<> N
      pint<> D[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        e1of<cmos_source_e::M> R
        bool<> _Reset
        bool<> Reset
      )
      In definition "cmos_source_e", we have: {
      Parameters:
        D = pint<> cmos_source_e::D^1
        M = pint<> cmos_source_e::M
        N = pint<> cmos_source_e::N
      Instances:
        !GND = bool<> cmos_source_e::!GND
        !Vdd = bool<> cmos_source_e::!Vdd
        R = e1of<cmos_source_e::M> cmos_source_e::R
        Reset = bool<> cmos_source_e::Reset
        _Reset = bool<> cmos_source_e::_Reset
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<cmos_source_e::M> R
          bool<> _Reset
          bool<> Reset
        )
      }

    e1of = process-definition (defined) e1of<
      pint<> R
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> d[0..R-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        R = pint<> e1of::R
      Instances:
        !GND = bool<> e1of::!GND
        !Vdd = bool<> e1of::!Vdd
        d = bool<> e1of::d^1
        e = bool<> e1of::e
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> d[0..R-1]
          bool<> e
        )
      footprint collection: {
        <2> {
          !GND = bool^0 = e1of<2>::!GND (1) 
          !Vdd = bool^0 = e1of<2>::!Vdd (2) 
          R = pint^0 value: 2
          d = bool^1
            {
              [0] = e1of<2>::d[0] (4) 
              [1] = e1of<2>::d[1] (5) 
            }
          e = bool^0 = e1of<2>::e (3) 
          Created state:
          bool instance pool: (5 ports, 0 local, 0 mapped)
          1	e1of<2>::!GND	
          2	e1of<2>::!Vdd	
          3	e1of<2>::e	
          4	e1of<2>::d[0]	
          5	e1of<2>::d[1]	
        }
      }
      }

    source_e = process-definition (defined) source_e<
      pint<> M
      ><
      pint<> N
      pint<> d[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        e1of<source_e::M> rr
        bool<> _Reset
      )
      In definition "source_e", we have: {
      Parameters:
        M = pint<> source_e::M
        N = pint<> source_e::N
        d = pint<> source_e::d^1
      Instances:
        !GND = bool<> source_e::!GND
        !Vdd = bool<> source_e::!Vdd
        _Reset = bool<> source_e::_Reset
        rr = e1of<source_e::M> source_e::rr
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<source_e::M> rr
          bool<> _Reset
        )
      footprint collection: {
        <2, 2, {0,1}> {
          !GND = bool^0 = source_e<2, 2, {0,1}>::!GND (1) 
          !Vdd = bool^0 = source_e<2, 2, {0,1}>::!Vdd (2) 
          M = pint^0 value: 2
          N = pint^0 value: 2
          _Reset = bool^0 = source_e<2, 2, {0,1}>::_Reset (6) 
          d = pint^1
            unrolled index-value pairs: {
              0 = 0
              1 = 1
            }
          rr = process e1of<2>^0 = source_e<2, 2, {0,1}>::rr (1) (
            !GND = bool^0 = source_e<2, 2, {0,1}>::!GND (1) 
            !Vdd = bool^0 = source_e<2, 2, {0,1}>::!Vdd (2) 
            d = bool^1
              {
                [0] = source_e<2, 2, {0,1}>::rr.d[0] (3) 
                [1] = source_e<2, 2, {0,1}>::rr.d[1] (4) 
              }
            e = bool^0 = source_e<2, 2, {0,1}>::rr.e (5) 
          )
          Created state:
          process instance pool: (1 ports, 0 local, 0 mapped)
          1	source_e<2, 2, {0,1}>::rr	e1of<2>
            bool: 1,2,5,3,4
          bool instance pool: (6 ports, 0 local, 0 mapped)
          1	source_e<2, 2, {0,1}>::!GND	
          2	source_e<2, 2, {0,1}>::!Vdd	
          3	source_e<2, 2, {0,1}>::rr.d[0]	
          4	source_e<2, 2, {0,1}>::rr.d[1]	
          5	source_e<2, 2, {0,1}>::rr.e	
          6	source_e<2, 2, {0,1}>::_Reset	
          bool port aliases:
          1: source_e<2, 2, {0,1}>::rr.!GND = source_e<2, 2, {0,1}>::!GND
          2: source_e<2, 2, {0,1}>::rr.!Vdd = source_e<2, 2, {0,1}>::!Vdd
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    X = source_e<2> X
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  X = process source_e<2>^0<2, {0,1}> = X (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    rr = process e1of<2>^0 = X.rr (2) (
      !GND = bool^0 = !GND (1) 
      !Vdd = bool^0 = !Vdd (2) 
      d = bool^1
        {
          [0] = X.rr.d[0] (3) 
          [1] = X.rr.d[1] (4) 
        }
      e = bool^0 = X.rr.e (5) 
    )
    _Reset = bool^0 = X._Reset (6) 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	X<2, {0,1}>	source_e<2, 2, {0,1}>
    process: 2
    bool: 1,2,3,4,5,6
  2	X.rr	e1of<2>
    bool: 1,2,5,3,4
  bool instance pool: (0 ports, 6 local, 0 mapped)
  1	!GND	
  2	!Vdd	
  3	X.rr.d[0]	
  4	X.rr.d[1]	
  5	X.rr.e	
  6	X._Reset	
}
