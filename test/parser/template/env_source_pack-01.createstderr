
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	158
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	11	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	13	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	14	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	16	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	19	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	20	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	21	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	23	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	26	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	30	##ADDR##	procdefn	0	#HEAD#	#TAIL#	137
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	32	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	33	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	34	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	37	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	43	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	47	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	54	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	footprnt	0	#HEAD#	#TAIL#	380
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	64	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	65	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	procdefn	0	#HEAD#	#TAIL#	185
	74	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	75	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	76	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	77	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	78	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	79	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	80	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	81	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	82	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	83	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	87	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	90	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	93	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	94	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	96	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	97	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	99	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	100	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	101	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	103	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	104	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	105	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	106	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	footprnt	0	#HEAD#	#TAIL#	545
	109	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	110	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	111	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	112	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	114	##ADDR##	footprnt	0	#HEAD#	#TAIL#	545
	115	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	116	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	117	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	118	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	119	##ADDR##	procdefn	0	#HEAD#	#TAIL#	161
	120	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	121	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	122	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	123	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	124	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	125	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	126	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	127	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	128	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	129	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	130	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	131	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	132	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	133	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	134	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	135	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	136	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	137	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	140	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	141	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	142	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	143	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	144	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	145	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	146	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	147	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	148	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	150	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	151	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	152	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	153	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	154	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	155	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	156	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	159	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	160	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	161	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	162	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	163	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	164	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	165	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	166	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	167	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	168	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	169	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	170	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	171	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	172	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	173	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	174	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	175	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	176	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	177	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1274
	178	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	179	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	180	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	181	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	182	##ADDR##	procplch	0	#HEAD#	#TAIL#	31
	183	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	184	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	185	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	186	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	187	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	188	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	189	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	190	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	191	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	192	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	193	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	194	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	195	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	196	##ADDR##	footprnt	0	#HEAD#	#TAIL#	763
	197	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    cmos_source_e = process-definition (defined) cmos_source_e<
      pint<> M
      ><
      pint<> N
      pint<> D[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        e1of<cmos_source_e::M> R
        bool<> _Reset
        bool<> Reset
      )
      In definition "cmos_source_e", we have: {
      Parameters:
        D = pint<> cmos_source_e::D^1
        M = pint<> cmos_source_e::M
        N = pint<> cmos_source_e::N
      Instances:
        !GND = bool<> cmos_source_e::!GND
        !Vdd = bool<> cmos_source_e::!Vdd
        R = e1of<cmos_source_e::M> cmos_source_e::R
        Reset = bool<> cmos_source_e::Reset
        _Reset = bool<> cmos_source_e::_Reset
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<cmos_source_e::M> R
          bool<> _Reset
          bool<> Reset
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      }

    e1of = process-definition (defined) e1of<
      pint<> R
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> d[0..R-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        R = pint<> e1of::R
      Instances:
        !GND = bool<> e1of::!GND
        !Vdd = bool<> e1of::!Vdd
        d = bool<> e1of::d^1
        e = bool<> e1of::e
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> d[0..R-1]
          bool<> e
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint collection: {
        <2> {
          !GND = bool^0 = e1of<2>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = e1of<2>::!Vdd (2) @[ supply_high port-alias ] 
          R = pint^0 value: 2
          d = bool^1
            {
              [0] = e1of<2>::d[0] (4) @[ port-alias ] 
              [1] = e1of<2>::d[1] (5) @[ port-alias ] 
            }
          e = bool^0 = e1of<2>::e (3) @[ port-alias ] 
          Created state:
          bool instance pool: (5 ports, 0 local, 0 mapped)
          1	e1of<2>::!GND @[ supply_low port-alias ]	
          2	e1of<2>::!Vdd @[ supply_high port-alias ]	
          3	e1of<2>::e @[ port-alias ]	
          4	e1of<2>::d[0] @[ port-alias ]	
          5	e1of<2>::d[1] @[ port-alias ]	
        }
      }
      }

    source_e = process-definition (defined) source_e<
      pint<> M
      ><
      pint<> N
      pint<> d[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        e1of<source_e::M> rr
        bool<> _Reset
      )
      In definition "source_e", we have: {
      Parameters:
        M = pint<> source_e::M
        N = pint<> source_e::N
        d = pint<> source_e::d^1
      Instances:
        !GND = bool<> source_e::!GND
        !Vdd = bool<> source_e::!Vdd
        _Reset = bool<> source_e::_Reset
        rr = e1of<source_e::M> source_e::rr
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<source_e::M> rr
          bool<> _Reset
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      footprint collection: {
        <2, 1, {0}> {
          !GND = bool^0 = source_e<2, 1, {0}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = source_e<2, 1, {0}>::!Vdd (2) @[ supply_high port-alias ] 
          M = pint^0 value: 2
          N = pint^0 value: 1
          _Reset = bool^0 = source_e<2, 1, {0}>::_Reset (6) @[ port-alias ] 
          d = pint^1
            unrolled index-value pairs: {
              0 = 0
            }
          rr = process e1of<2>^0 = source_e<2, 1, {0}>::rr (1) @[ port-alias ] (
            !GND = bool^0 = source_e<2, 1, {0}>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = source_e<2, 1, {0}>::!Vdd (2) @[ supply_high port-alias ] 
            d = bool^1
              {
                [0] = source_e<2, 1, {0}>::rr.d[0] (3) @[ port-alias ] 
                [1] = source_e<2, 1, {0}>::rr.d[1] (4) @[ port-alias ] 
              }
            e = bool^0 = source_e<2, 1, {0}>::rr.e (5) @[ port-alias ] 
          )
          Created state:
          process instance pool: (1 ports, 0 local, 0 mapped)
          1	source_e<2, 1, {0}>::rr @[ port-alias ]	e1of<2>
            bool: 1,2,5,3,4
          bool instance pool: (6 ports, 0 local, 0 mapped)
          1	source_e<2, 1, {0}>::!GND @[ supply_low port-alias ]	
          2	source_e<2, 1, {0}>::!Vdd @[ supply_high port-alias ]	
          3	source_e<2, 1, {0}>::rr.d[0] @[ port-alias ]	
          4	source_e<2, 1, {0}>::rr.d[1] @[ port-alias ]	
          5	source_e<2, 1, {0}>::rr.e @[ port-alias ]	
          6	source_e<2, 1, {0}>::_Reset @[ port-alias ]	
          bool port aliases:
          1: source_e<2, 1, {0}>::rr.!GND = source_e<2, 1, {0}>::!GND @[ supply_low port-alias ]
          2: source_e<2, 1, {0}>::rr.!Vdd = source_e<2, 1, {0}>::!Vdd @[ supply_high port-alias ]
        }
        <2, 1, {1}> {
          !GND = bool^0 = source_e<2, 1, {1}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = source_e<2, 1, {1}>::!Vdd (2) @[ supply_high port-alias ] 
          M = pint^0 value: 2
          N = pint^0 value: 1
          _Reset = bool^0 = source_e<2, 1, {1}>::_Reset (6) @[ port-alias ] 
          d = pint^1
            unrolled index-value pairs: {
              0 = 1
            }
          rr = process e1of<2>^0 = source_e<2, 1, {1}>::rr (1) @[ port-alias ] (
            !GND = bool^0 = source_e<2, 1, {1}>::!GND (1) @[ supply_low port-alias ] 
            !Vdd = bool^0 = source_e<2, 1, {1}>::!Vdd (2) @[ supply_high port-alias ] 
            d = bool^1
              {
                [0] = source_e<2, 1, {1}>::rr.d[0] (3) @[ port-alias ] 
                [1] = source_e<2, 1, {1}>::rr.d[1] (4) @[ port-alias ] 
              }
            e = bool^0 = source_e<2, 1, {1}>::rr.e (5) @[ port-alias ] 
          )
          Created state:
          process instance pool: (1 ports, 0 local, 0 mapped)
          1	source_e<2, 1, {1}>::rr @[ port-alias ]	e1of<2>
            bool: 1,2,5,3,4
          bool instance pool: (6 ports, 0 local, 0 mapped)
          1	source_e<2, 1, {1}>::!GND @[ supply_low port-alias ]	
          2	source_e<2, 1, {1}>::!Vdd @[ supply_high port-alias ]	
          3	source_e<2, 1, {1}>::rr.d[0] @[ port-alias ]	
          4	source_e<2, 1, {1}>::rr.d[1] @[ port-alias ]	
          5	source_e<2, 1, {1}>::rr.e @[ port-alias ]	
          6	source_e<2, 1, {1}>::_Reset @[ port-alias ]	
          bool port aliases:
          1: source_e<2, 1, {1}>::rr.!GND = source_e<2, 1, {1}>::!GND @[ supply_low port-alias ]
          2: source_e<2, 1, {1}>::rr.!Vdd = source_e<2, 1, {1}>::!Vdd @[ supply_high port-alias ]
        }
      }
      }

    source_pack_test = process-definition (defined) source_pack_test(
        bool<> !GND
        bool<> !Vdd
        e1of<2> s[0..1]
        bool<> _Reset
      )
      In definition "source_pack_test", we have: {
      Instances:
        !GND = bool<> source_pack_test::!GND
        !Vdd = bool<> source_pack_test::!Vdd
        Src = source_e<2> source_pack_test::Src^1
        _Reset = bool<> source_pack_test::_Reset
        s = e1of<2> source_pack_test::s^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<2> s[0..1]
          bool<> _Reset
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        source_e<2> Src[0..1]
        Src[0]<1, { 0 }>
        Src[0] ( , , s[0], _Reset);
        Src[1]<1, { 1 }>
        Src[1] ( , , s[1], _Reset);
      footprint: {
        !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
        Src = process source_e<2>^1
          {
            [0]<1, {0}> = source_pack_test<>::Src[0] (3) (
              !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
              rr = process e1of<2>^0 = source_pack_test<>::s[0] (1) @[ port-alias ] (
                !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
                d = bool^1
                  {
                    [0] = source_pack_test<>::s[0].d[0] (3) @[ port-alias ] 
                    [1] = source_pack_test<>::s[0].d[1] (4) @[ port-alias ] 
                  }
                e = bool^0 = source_pack_test<>::s[0].e (5) @[ port-alias ] 
              )
              _Reset = bool^0 = source_pack_test<>::_Reset (6) @[ port-alias ] 
            )
            [1]<1, {1}> = source_pack_test<>::Src[1] (4) (
              !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
              rr = process e1of<2>^0 = source_pack_test<>::s[1] (2) @[ port-alias ] (
                !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
                d = bool^1
                  {
                    [0] = source_pack_test<>::s[1].d[0] (7) @[ port-alias ] 
                    [1] = source_pack_test<>::s[1].d[1] (8) @[ port-alias ] 
                  }
                e = bool^0 = source_pack_test<>::s[1].e (9) @[ port-alias ] 
              )
              _Reset = bool^0 = source_pack_test<>::_Reset (6) @[ port-alias ] 
            )
          }
        _Reset = bool^0 = source_pack_test<>::_Reset (6) @[ port-alias ] 
        s = process e1of<2>^1
          {
            [0] = source_pack_test<>::s[0] (1) @[ port-alias ] (
              !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
              d = bool^1
                {
                  [0] = source_pack_test<>::s[0].d[0] (3) @[ port-alias ] 
                  [1] = source_pack_test<>::s[0].d[1] (4) @[ port-alias ] 
                }
              e = bool^0 = source_pack_test<>::s[0].e (5) @[ port-alias ] 
            )
            [1] = source_pack_test<>::s[1] (2) @[ port-alias ] (
              !GND = bool^0 = source_pack_test<>::!GND (1) @[ supply_low port-alias ] 
              !Vdd = bool^0 = source_pack_test<>::!Vdd (2) @[ supply_high port-alias ] 
              d = bool^1
                {
                  [0] = source_pack_test<>::s[1].d[0] (7) @[ port-alias ] 
                  [1] = source_pack_test<>::s[1].d[1] (8) @[ port-alias ] 
                }
              e = bool^0 = source_pack_test<>::s[1].e (9) @[ port-alias ] 
            )
          }
        Created state:
        process instance pool: (2 ports, 2 local, 0 mapped)
        1	source_pack_test<>::s[0] @[ port-alias ]	e1of<2>
          bool: 1,2,5,3,4
        2	source_pack_test<>::s[1] @[ port-alias ]	e1of<2>
          bool: 1,2,9,7,8
        3	source_pack_test<>::Src[0]<1, {0}>	source_e<2, 1, {0}>
          process: 1
          bool: 1,2,3,4,5,6
        4	source_pack_test<>::Src[1]<1, {1}>	source_e<2, 1, {1}>
          process: 2
          bool: 1,2,7,8,9,6
        bool instance pool: (9 ports, 0 local, 0 mapped)
        1	source_pack_test<>::!GND @[ supply_low port-alias ]	
        2	source_pack_test<>::!Vdd @[ supply_high port-alias ]	
        3	source_pack_test<>::s[0].d[0] @[ port-alias ]	
        4	source_pack_test<>::s[0].d[1] @[ port-alias ]	
        5	source_pack_test<>::s[0].e @[ port-alias ]	
        6	source_pack_test<>::_Reset @[ port-alias ]	
        7	source_pack_test<>::s[1].d[0] @[ port-alias ]	
        8	source_pack_test<>::s[1].d[1] @[ port-alias ]	
        9	source_pack_test<>::s[1].e @[ port-alias ]	
        bool port aliases:
        1: source_pack_test<>::s[0].!GND = source_pack_test<>::s[1].!GND = source_pack_test<>::!GND @[ supply_low port-alias ]
        2: source_pack_test<>::s[0].!Vdd = source_pack_test<>::s[1].!Vdd = source_pack_test<>::!Vdd @[ supply_high port-alias ]
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    test_me = source_pack_test<> test_me
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  test_me = process source_pack_test<>^0 = test_me (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    s = process e1of<2>^1
      {
        [0] = test_me.s[0] (2) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          d = bool^1
            {
              [0] = test_me.s[0].d[0] (3) 
              [1] = test_me.s[0].d[1] (4) 
            }
          e = bool^0 = test_me.s[0].e (5) 
        )
        [1] = test_me.s[1] (3) (
          !GND = bool^0 = !GND (1) @[ supply_low ] 
          !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
          d = bool^1
            {
              [0] = test_me.s[1].d[0] (6) 
              [1] = test_me.s[1].d[1] (7) 
            }
          e = bool^0 = test_me.s[1].e (8) 
        )
      }
    _Reset = bool^0 = test_me._Reset (9) 
  )
  Created state:
  process instance pool: (0 ports, 3 local, 2 mapped)
  1	test_me	source_pack_test<>
    process: 2,3
    bool: 1,2,3,4,5,9,6,7,8
  2	test_me.s[0]	e1of<2>
    bool: 1,2,5,3,4
  3	test_me.s[1]	e1of<2>
    bool: 1,2,8,6,7
  private sub-process index map:
    (1 -> 0)
    (4 -> 2)
  bool instance pool: (0 ports, 9 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	test_me.s[0].d[0]	
  4	test_me.s[0].d[1]	
  5	test_me.s[0].e	
  6	test_me.s[1].d[0]	
  7	test_me.s[1].d[1]	
  8	test_me.s[1].e	
  9	test_me._Reset	
}
