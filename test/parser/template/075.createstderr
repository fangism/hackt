
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	276
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintcoll	2	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	20
	9	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	10	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	11	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	12	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	17	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	23	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	cnstpic_	2	#HEAD#	#TAIL#	64
	29	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	30	##ADDR##	pintcoll	2	#HEAD#	#TAIL#	173
	31	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	32	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	34	##ADDR##	proccoll	0	#HEAD#	#TAIL#	62
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	37	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	38	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	39	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	pintcoll	2	#HEAD#	#TAIL#	173
	41	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	42	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	43	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	48	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	50	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	34
	51	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	53	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	90	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	28
	91	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	95	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	98	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	99	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	103	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	106	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	20
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	110	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  1 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    p = pint^2 p
      unrolled index-value pairs: {
        [0][0] = 1
        [0][1] = 0
        [0][2] = 1
        [1][0] = 0
        [1][1] = 1
        [1][2] = 0
        [2][0] = 1
        [2][1] = 0
        [2][2] = 1
      }
  Definitions:
    ass = process-definition (defined) ass<
      pint<> N
      pint<> d[0..N-1][0..N-1]
      >(
        bool<> x
        bool<> y
        bool<> z
      )
      In definition "ass", we have: {
      Parameters:
        N = pint<> N
        d = pint<> d

      Instances:
        x = bool<> x
        y = bool<> y
        z = bool<> z
      unroll sequence: 
        pint<> N
        pint<> d[0..N-1][0..N-1]
        bool<> x
        bool<> y
        bool<> z
      footprint collection: {
        <3, {{1,0,1},{0,1,0},{1,0,1}}> {
          pint^0 N value: ?
          pint^2 d
            unrolled index-value pairs: {
              [0][0] = ?
              [0][1] = ?
              [0][2] = ?
              [1][0] = ?
              [1][1] = ?
              [1][2] = ?
              [2][0] = ?
              [2][1] = ?
              [2][2] = ?
            }
          bool^0 x (instantiated) = ::ass::x (1) 
          bool^0 y (instantiated) = ::ass::y (2) 
          bool^0 z (instantiated) = ::ass::z (3) 
          bool instance pool:
          1	::ass::x
          2	::ass::y
          3	::ass::z
        }
      }
      }

  Instances:
    a = bool^0 a (instantiated) = ::a (1) 
    b = bool^0 b (instantiated) = ::b (2) 
    c = bool^0 c (instantiated) = ::c (3) 
    myass = process ass<3, {{1,0,1},{0,1,0},{1,0,1}}>^0 myass (instantiated) = ::myass (1) (
      bool^0 x (instantiated) = ::a (1) 
      bool^0 y (instantiated) = ::b (2) 
      bool^0 z (instantiated) = ::c (3) 
    )
}

Created state:
process instance pool:
1	::myass
bool instance pool:
1	::a
2	::b
3	::c

