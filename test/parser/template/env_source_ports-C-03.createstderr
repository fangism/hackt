
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	56
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	146
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	13	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	16	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	18	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	21	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	22	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	24	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	25	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	35	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	36	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	39	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	45	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	49	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	378
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	54	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	58	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	59	##ADDR##	procdefn	0	#HEAD#	#TAIL#	173
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	61	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	62	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	63	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	64	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	65	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	66	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	67	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	68	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	69	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	73	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	76	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	77	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	78	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	79	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	82	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	85	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	86	##ADDR##	footprnt	0	#HEAD#	#TAIL#	532
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	91	##ADDR##	footprnt	0	#HEAD#	#TAIL#	532
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	94	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	96	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	97	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	98	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	99	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	100	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	101	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	102	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	103	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	104	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	106	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	107	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	108	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	109	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	111	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	112	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	113	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	114	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	115	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	116	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	117	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	118	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	119	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	120	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	121	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	footprnt	0	#HEAD#	#TAIL#	850
	123	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	124	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	125	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	126	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	127	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	128	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	129	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	130	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	131	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	132	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	133	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	134	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	135	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	136	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	137	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	138	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	139	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	140	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	141	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	142	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	143	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	144	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	145	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	146	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	147	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	148	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	150	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	151	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	152	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	153	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	154	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	155	##ADDR##	footprnt	0	#HEAD#	#TAIL#	850
	156	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	157	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	158	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	159	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	160	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	161	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	162	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	163	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	164	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	165	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	166	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	167	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	168	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	169	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	170	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	171	##ADDR##	aprcmref	0	#HEAD#	#TAIL#	21
	172	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	173	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	174	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	175	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	176	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	177	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	178	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	179	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	180	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1556
	181	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	182	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  5 definitions
  0 typedefs
  Definitions:
    cmos_source_e = process-definition (defined) cmos_source_e<
      pint<> M
      ><
      pint<> N
      pint<> D[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        e1of<cmos_source_e::M> R
        bool<> _Reset
        bool<> Reset
      )
      In definition "cmos_source_e", we have: {
      Parameters:
        D = pint<> cmos_source_e::D^1
        M = pint<> cmos_source_e::M
        N = pint<> cmos_source_e::N
      Instances:
        !GND = bool<> cmos_source_e::!GND
        !Vdd = bool<> cmos_source_e::!Vdd
        R = e1of<cmos_source_e::M> cmos_source_e::R
        Reset = bool<> cmos_source_e::Reset
        _Reset = bool<> cmos_source_e::_Reset
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<cmos_source_e::M> R
          bool<> _Reset
          bool<> Reset
        )
      }

    e1of = process-definition (defined) e1of<
      pint<> R
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> d[0..R-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        R = pint<> e1of::R
      Instances:
        !GND = bool<> e1of::!GND
        !Vdd = bool<> e1of::!Vdd
        d = bool<> e1of::d^1
        e = bool<> e1of::e
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> d[0..R-1]
          bool<> e
        )
      footprint collection: {
        <2> {
          !GND = bool^0 = e1of<2>::!GND (1) 
          !Vdd = bool^0 = e1of<2>::!Vdd (2) 
          R = pint^0 value: 2
          d = bool^1
            {
              [0] = e1of<2>::d[0] (4) 
              [1] = e1of<2>::d[1] (5) 
            }
          e = bool^0 = e1of<2>::e (3) 
          Created state:
          bool instance pool:
          1	e1of<2>::!GND
          2	e1of<2>::!Vdd
          3	e1of<2>::e
          4	e1of<2>::d[0]
          5	e1of<2>::d[1]
        }
      }
      }

    source_e = process-definition (defined) source_e<
      pint<> M
      ><
      pint<> N
      pint<> d[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        e1of<source_e::M> rr
        bool<> _Reset
      )
      In definition "source_e", we have: {
      Parameters:
        M = pint<> source_e::M
        N = pint<> source_e::N
        d = pint<> source_e::d^1
      Instances:
        !GND = bool<> source_e::!GND
        !Vdd = bool<> source_e::!Vdd
        _Reset = bool<> source_e::_Reset
        rr = e1of<source_e::M> source_e::rr
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of<source_e::M> rr
          bool<> _Reset
        )
      footprint collection: {
        <2, 1, {0}> {
          !GND = bool^0 = source_e<2, 1, {0}>::!GND (1) 
          !Vdd = bool^0 = source_e<2, 1, {0}>::!Vdd (2) 
          M = pint^0 value: 2
          N = pint^0 value: 1
          _Reset = bool^0 = source_e<2, 1, {0}>::_Reset (6) 
          d = pint^1
            unrolled index-value pairs: {
              0 = 0
            }
          rr = process e1of<2>^0 = source_e<2, 1, {0}>::rr (1) (
            !GND = bool^0 = source_e<2, 1, {0}>::!GND (1) 
            !Vdd = bool^0 = source_e<2, 1, {0}>::!Vdd (2) 
            d = bool^1
              {
                [0] = source_e<2, 1, {0}>::rr.d[0] (3) 
                [1] = source_e<2, 1, {0}>::rr.d[1] (4) 
              }
            e = bool^0 = source_e<2, 1, {0}>::rr.e (5) 
          )
          Created state:
          process instance pool:
          1	source_e<2, 1, {0}>::rr
          bool instance pool:
          1	source_e<2, 1, {0}>::!GND
          2	source_e<2, 1, {0}>::!Vdd
          3	source_e<2, 1, {0}>::rr.d[0]
          4	source_e<2, 1, {0}>::rr.d[1]
          5	source_e<2, 1, {0}>::rr.e
          6	source_e<2, 1, {0}>::_Reset
          bool port aliases:
          1: source_e<2, 1, {0}>::rr.!GND = source_e<2, 1, {0}>::!GND
          2: source_e<2, 1, {0}>::rr.!Vdd = source_e<2, 1, {0}>::!Vdd
        }
        <2, 1, {1}> {
          !GND = bool^0 = source_e<2, 1, {1}>::!GND (1) 
          !Vdd = bool^0 = source_e<2, 1, {1}>::!Vdd (2) 
          M = pint^0 value: 2
          N = pint^0 value: 1
          _Reset = bool^0 = source_e<2, 1, {1}>::_Reset (6) 
          d = pint^1
            unrolled index-value pairs: {
              0 = 1
            }
          rr = process e1of<2>^0 = source_e<2, 1, {1}>::rr (1) (
            !GND = bool^0 = source_e<2, 1, {1}>::!GND (1) 
            !Vdd = bool^0 = source_e<2, 1, {1}>::!Vdd (2) 
            d = bool^1
              {
                [0] = source_e<2, 1, {1}>::rr.d[0] (3) 
                [1] = source_e<2, 1, {1}>::rr.d[1] (4) 
              }
            e = bool^0 = source_e<2, 1, {1}>::rr.e (5) 
          )
          Created state:
          process instance pool:
          1	source_e<2, 1, {1}>::rr
          bool instance pool:
          1	source_e<2, 1, {1}>::!GND
          2	source_e<2, 1, {1}>::!Vdd
          3	source_e<2, 1, {1}>::rr.d[0]
          4	source_e<2, 1, {1}>::rr.d[1]
          5	source_e<2, 1, {1}>::rr.e
          6	source_e<2, 1, {1}>::_Reset
          bool port aliases:
          1: source_e<2, 1, {1}>::rr.!GND = source_e<2, 1, {1}>::!GND
          2: source_e<2, 1, {1}>::rr.!Vdd = source_e<2, 1, {1}>::!Vdd
        }
      }
      }

    source_pack_port_test = process-definition (defined) source_pack_port_test(
        bool<> !GND
        bool<> !Vdd
        source_e<2> Src[0..1]
      )
      In definition "source_pack_port_test", we have: {
      Instances:
        !GND = bool<> source_pack_port_test::!GND
        !Vdd = bool<> source_pack_port_test::!Vdd
        Src = source_e<2> source_pack_port_test::Src^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          source_e<2> Src[0..1]
        )
        Src[0]<1, { 0 }>
        Src[1]<1, { 1 }>
      footprint: {
        !GND = bool^0 = source_pack_port_test<>::!GND (1) 
        !Vdd = bool^0 = source_pack_port_test<>::!Vdd (2) 
        Src = process source_e<2>^1
          {
            [0]<1, {0}> = source_pack_port_test<>::Src[0] (1) (
              !GND = bool^0 = source_pack_port_test<>::!GND (1) 
              !Vdd = bool^0 = source_pack_port_test<>::!Vdd (2) 
              rr = process e1of<2>^0 = source_pack_port_test<>::Src[0].rr (2) (
                !GND = bool^0 = source_pack_port_test<>::!GND (1) 
                !Vdd = bool^0 = source_pack_port_test<>::!Vdd (2) 
                d = bool^1
                  {
                    [0] = source_pack_port_test<>::Src[0].rr.d[0] (3) 
                    [1] = source_pack_port_test<>::Src[0].rr.d[1] (4) 
                  }
                e = bool^0 = source_pack_port_test<>::Src[0].rr.e (5) 
              )
              _Reset = bool^0 = source_pack_port_test<>::Src[0]._Reset (6) 
            )
            [1]<1, {1}> = source_pack_port_test<>::Src[1] (3) (
              !GND = bool^0 = source_pack_port_test<>::!GND (1) 
              !Vdd = bool^0 = source_pack_port_test<>::!Vdd (2) 
              rr = process e1of<2>^0 = source_pack_port_test<>::Src[1].rr (4) (
                !GND = bool^0 = source_pack_port_test<>::!GND (1) 
                !Vdd = bool^0 = source_pack_port_test<>::!Vdd (2) 
                d = bool^1
                  {
                    [0] = source_pack_port_test<>::Src[1].rr.d[0] (7) 
                    [1] = source_pack_port_test<>::Src[1].rr.d[1] (8) 
                  }
                e = bool^0 = source_pack_port_test<>::Src[1].rr.e (9) 
              )
              _Reset = bool^0 = source_pack_port_test<>::Src[1]._Reset (10) 
            )
          }
        Created state:
        process instance pool:
        1	source_pack_port_test<>::Src[0]<1, {0}>
        2	source_pack_port_test<>::Src[0].rr
        3	source_pack_port_test<>::Src[1]<1, {1}>
        4	source_pack_port_test<>::Src[1].rr
        bool instance pool:
        1	source_pack_port_test<>::!GND
        2	source_pack_port_test<>::!Vdd
        3	source_pack_port_test<>::Src[0].rr.d[0]
        4	source_pack_port_test<>::Src[0].rr.d[1]
        5	source_pack_port_test<>::Src[0].rr.e
        6	source_pack_port_test<>::Src[0]._Reset
        7	source_pack_port_test<>::Src[1].rr.d[0]
        8	source_pack_port_test<>::Src[1].rr.d[1]
        9	source_pack_port_test<>::Src[1].rr.e
        10	source_pack_port_test<>::Src[1]._Reset
        bool port aliases:
        1: source_pack_port_test<>::Src[0].!GND = source_pack_port_test<>::Src[0].rr.!GND = source_pack_port_test<>::Src[1].!GND = source_pack_port_test<>::Src[1].rr.!GND = source_pack_port_test<>::!GND
        2: source_pack_port_test<>::Src[0].!Vdd = source_pack_port_test<>::Src[0].rr.!Vdd = source_pack_port_test<>::Src[1].!Vdd = source_pack_port_test<>::Src[1].rr.!Vdd = source_pack_port_test<>::!Vdd
      }
      }

    source_pack_port_test_alt = process-definition (defined) source_pack_port_test_alt(
        bool<> !GND
        bool<> !Vdd
        source_e<2> Src[0..1]
      )
      In definition "source_pack_port_test_alt", we have: {
      Instances:
        !GND = bool<> source_pack_port_test_alt::!GND
        !Vdd = bool<> source_pack_port_test_alt::!Vdd
        Src = source_e<2> source_pack_port_test_alt::Src^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          source_e<2> Src[0..1]
        )
        Src[0]<1, { 1 }>
        Src[1]<1, { 0 }>
      footprint: {
        !GND = bool^0 = source_pack_port_test_alt<>::!GND (1) 
        !Vdd = bool^0 = source_pack_port_test_alt<>::!Vdd (2) 
        Src = process source_e<2>^1
          {
            [0]<1, {1}> = source_pack_port_test_alt<>::Src[0] (1) (
              !GND = bool^0 = source_pack_port_test_alt<>::!GND (1) 
              !Vdd = bool^0 = source_pack_port_test_alt<>::!Vdd (2) 
              rr = process e1of<2>^0 = source_pack_port_test_alt<>::Src[0].rr (2) (
                !GND = bool^0 = source_pack_port_test_alt<>::!GND (1) 
                !Vdd = bool^0 = source_pack_port_test_alt<>::!Vdd (2) 
                d = bool^1
                  {
                    [0] = source_pack_port_test_alt<>::Src[0].rr.d[0] (3) 
                    [1] = source_pack_port_test_alt<>::Src[0].rr.d[1] (4) 
                  }
                e = bool^0 = source_pack_port_test_alt<>::Src[0].rr.e (5) 
              )
              _Reset = bool^0 = source_pack_port_test_alt<>::Src[0]._Reset (6) 
            )
            [1]<1, {0}> = source_pack_port_test_alt<>::Src[1] (3) (
              !GND = bool^0 = source_pack_port_test_alt<>::!GND (1) 
              !Vdd = bool^0 = source_pack_port_test_alt<>::!Vdd (2) 
              rr = process e1of<2>^0 = source_pack_port_test_alt<>::Src[1].rr (4) (
                !GND = bool^0 = source_pack_port_test_alt<>::!GND (1) 
                !Vdd = bool^0 = source_pack_port_test_alt<>::!Vdd (2) 
                d = bool^1
                  {
                    [0] = source_pack_port_test_alt<>::Src[1].rr.d[0] (7) 
                    [1] = source_pack_port_test_alt<>::Src[1].rr.d[1] (8) 
                  }
                e = bool^0 = source_pack_port_test_alt<>::Src[1].rr.e (9) 
              )
              _Reset = bool^0 = source_pack_port_test_alt<>::Src[1]._Reset (10) 
            )
          }
        Created state:
        process instance pool:
        1	source_pack_port_test_alt<>::Src[0]<1, {1}>
        2	source_pack_port_test_alt<>::Src[0].rr
        3	source_pack_port_test_alt<>::Src[1]<1, {0}>
        4	source_pack_port_test_alt<>::Src[1].rr
        bool instance pool:
        1	source_pack_port_test_alt<>::!GND
        2	source_pack_port_test_alt<>::!Vdd
        3	source_pack_port_test_alt<>::Src[0].rr.d[0]
        4	source_pack_port_test_alt<>::Src[0].rr.d[1]
        5	source_pack_port_test_alt<>::Src[0].rr.e
        6	source_pack_port_test_alt<>::Src[0]._Reset
        7	source_pack_port_test_alt<>::Src[1].rr.d[0]
        8	source_pack_port_test_alt<>::Src[1].rr.d[1]
        9	source_pack_port_test_alt<>::Src[1].rr.e
        10	source_pack_port_test_alt<>::Src[1]._Reset
        bool port aliases:
        1: source_pack_port_test_alt<>::Src[0].!GND = source_pack_port_test_alt<>::Src[0].rr.!GND = source_pack_port_test_alt<>::Src[1].!GND = source_pack_port_test_alt<>::Src[1].rr.!GND = source_pack_port_test_alt<>::!GND
        2: source_pack_port_test_alt<>::Src[0].!Vdd = source_pack_port_test_alt<>::Src[0].rr.!Vdd = source_pack_port_test_alt<>::Src[1].!Vdd = source_pack_port_test_alt<>::Src[1].rr.!Vdd = source_pack_port_test_alt<>::!Vdd
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    Y = source_pack_port_test_alt<> Y
    Z = source_pack_port_test<> Z
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  Y = process source_pack_port_test_alt<>^0 = Y (6) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    Src = process source_e<2>^1
      {
        [0]<1, {1}> = Z.Src[1] (4) (
          !GND = bool^0 = !GND (1) 
          !Vdd = bool^0 = !Vdd (2) 
          rr = process e1of<2>^0 = Z.Src[1].rr (5) (
            !GND = bool^0 = !GND (1) 
            !Vdd = bool^0 = !Vdd (2) 
            d = bool^1
              {
                [0] = Z.Src[1].rr.d[0] (7) 
                [1] = Z.Src[1].rr.d[1] (8) 
              }
            e = bool^0 = Z.Src[1].rr.e (9) 
          )
          _Reset = bool^0 = Z.Src[1]._Reset (10) 
        )
        [1]<1, {0}> = Z.Src[0] (2) (
          !GND = bool^0 = !GND (1) 
          !Vdd = bool^0 = !Vdd (2) 
          rr = process e1of<2>^0 = Z.Src[0].rr (3) (
            !GND = bool^0 = !GND (1) 
            !Vdd = bool^0 = !Vdd (2) 
            d = bool^1
              {
                [0] = Z.Src[0].rr.d[0] (3) 
                [1] = Z.Src[0].rr.d[1] (4) 
              }
            e = bool^0 = Z.Src[0].rr.e (5) 
          )
          _Reset = bool^0 = Z.Src[0]._Reset (6) 
        )
      }
  )
  Z = process source_pack_port_test<>^0 = Z (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    Src = process source_e<2>^1
      {
        [0]<1, {0}> = Z.Src[0] (2) (
          !GND = bool^0 = !GND (1) 
          !Vdd = bool^0 = !Vdd (2) 
          rr = process e1of<2>^0 = Z.Src[0].rr (3) (
            !GND = bool^0 = !GND (1) 
            !Vdd = bool^0 = !Vdd (2) 
            d = bool^1
              {
                [0] = Z.Src[0].rr.d[0] (3) 
                [1] = Z.Src[0].rr.d[1] (4) 
              }
            e = bool^0 = Z.Src[0].rr.e (5) 
          )
          _Reset = bool^0 = Z.Src[0]._Reset (6) 
        )
        [1]<1, {1}> = Z.Src[1] (4) (
          !GND = bool^0 = !GND (1) 
          !Vdd = bool^0 = !Vdd (2) 
          rr = process e1of<2>^0 = Z.Src[1].rr (5) (
            !GND = bool^0 = !GND (1) 
            !Vdd = bool^0 = !Vdd (2) 
            d = bool^1
              {
                [0] = Z.Src[1].rr.d[0] (7) 
                [1] = Z.Src[1].rr.d[1] (8) 
              }
            e = bool^0 = Z.Src[1].rr.e (9) 
          )
          _Reset = bool^0 = Z.Src[1]._Reset (10) 
        )
      }
  )
  Created state:
  process instance pool:
  1	Z
  2	Z.Src[0]<1, {0}>
  3	Z.Src[0].rr
  4	Z.Src[1]<1, {1}>
  5	Z.Src[1].rr
  6	Y
  bool instance pool:
  1	!GND
  2	!Vdd
  3	Z.Src[0].rr.d[0]
  4	Z.Src[0].rr.d[1]
  5	Z.Src[0].rr.e
  6	Z.Src[0]._Reset
  7	Z.Src[1].rr.d[0]
  8	Z.Src[1].rr.d[1]
  9	Z.Src[1].rr.e
  10	Z.Src[1]._Reset
}
