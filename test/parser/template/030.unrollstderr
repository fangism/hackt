
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	316
	6	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	10	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	11	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	12	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	16	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	19	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	20	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	25	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	26	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	proccoll	0	#HEAD#	#TAIL#	37
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	30	##ADDR##	proccoll	0	#HEAD#	#TAIL#	37
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo<
      pint<> X
      pint<> Y (default = X+1)
      >(
      )
      In definition "foo", we have: {
      Parameters:
        X = pint<> foo::X
        Y = pint<> foo::Y (default = X+1)
      unroll sequence: 
      footprint collection: {
        <12, 13> {
          X = pint^0 value: 12
          Y = pint^0 value: 13
        }
        <12, 34> {
          X = pint^0 value: 12
          Y = pint^0 value: 34
        }
      }
      }

  Instances:
    p = foo<12, 34> p
    q = foo<12, 12+1> q
}

footprint: {
  p = process foo<12, 34>^0 = ::p 
  q = process foo<12, 13>^0 = ::q 
}
