
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	123
	4	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	condscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	15	##ADDR##	dbalias_	0	#HEAD#	#TAIL#	20
	16	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	footprnt	0	#HEAD#	#TAIL#	307
	19	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	20	##ADDR##	footprnt	0	#HEAD#	#TAIL#	307
	21	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	22	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	23	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	24	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	25	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	26	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	28	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	35	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	39	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	41	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	43	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	44	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	47	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	49	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	51	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	52	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	53	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	54	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	59	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	62	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	63	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	66	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	68	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	69	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	footprnt	0	#HEAD#	#TAIL#	602
	72	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	76	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    fa = process-definition (defined) fa<>
<
      pbool<> C
      >(
        bool<> x
        bool<> y
      )
      In definition "fa", we have: {
      Parameters:
        C = pbool<> fa::C
      Instances:
        x = bool<> fa::x
        y = bool<> fa::y
      unroll sequence: 
        ports: (
          bool<> x
          bool<> y
        )
        [ C ->
          x = y;
        ]
      footprint collection: {
        <false> {
          C = pbool^0 value: 0
          x = bool^0 = fa<false>::x (1) 
          y = bool^0 = fa<false>::y (2) 
          Created state:
          bool instance pool:
          1	fa<false>::x
          2	fa<false>::y
        }
        <true> {
          C = pbool^0 value: 1
          x = bool^0 = fa<true>::x (1) 
          y = bool^0 = fa<true>::x (1) 
          Created state:
          bool instance pool:
          1	fa<true>::x
          bool port aliases:
          1: fa<true>::x = fa<true>::y
        }
      }
      }

    foo = process-definition (defined) foo<>
<
      pbool<> C
      >(
        bool<> x
        bool<> y
      )
      In definition "foo", we have: {
      Parameters:
        C = pbool<> foo::C
      Instances:
        fa0 = fa<> foo::fa0
        x = bool<> foo::x
        y = bool<> foo::y
      unroll sequence: 
        ports: (
          bool<> x
          bool<> y
        )
        fa<> fa0
        fa0<C>
        fa0 (x, y);
      footprint collection: {
        <false> {
          C = pbool^0 value: 0
          fa0 = process fa<>^0<false> = foo<false>::fa0 (1) (
            x = bool^0 = foo<false>::x (1) 
            y = bool^0 = foo<false>::y (2) 
          )
          x = bool^0 = foo<false>::x (1) 
          y = bool^0 = foo<false>::y (2) 
          Created state:
          process instance pool:
          1	foo<false>::fa0<false>
          bool instance pool:
          1	foo<false>::x
          2	foo<false>::y
        }
        <true> {
          C = pbool^0 value: 1
          fa0 = process fa<>^0<true> = foo<true>::fa0 (1) (
            x = bool^0 = foo<true>::x (1) 
            y = bool^0 = foo<true>::x (1) 
          )
          x = bool^0 = foo<true>::x (1) 
          y = bool^0 = foo<true>::x (1) 
          Created state:
          process instance pool:
          1	foo<true>::fa0<true>
          bool instance pool:
          1	foo<true>::x
          bool port aliases:
          1: foo<true>::x = foo<true>::y
        }
      }
      }

  Instances:
    q = foo<> q
    r = foo<> r
    s = foo<> s
    t = foo<> t
}

footprint: {
  q = process foo<>^0<false> = r (2) (
    x = bool^0 = r.x (2) 
    y = bool^0 = r.y (3) 
  )
  r = process foo<>^0<false> = r (2) (
    x = bool^0 = r.x (2) 
    y = bool^0 = r.y (3) 
  )
  s = process foo<>^0<true> = t (1) (
    x = bool^0 = t.x (1) 
    y = bool^0 = t.x (1) 
  )
  t = process foo<>^0<true> = t (1) (
    x = bool^0 = t.x (1) 
    y = bool^0 = t.x (1) 
  )
  Created state:
  process instance pool:
  1	t<true>
  2	r<false>
  bool instance pool:
  1	t.x
  2	r.x
  3	r.y
}
