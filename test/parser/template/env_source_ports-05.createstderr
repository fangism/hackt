
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	5	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	6	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	7	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	9	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	10	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	11	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	12	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	16	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	20	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	21	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	procdefn	0	#HEAD#	#TAIL#	105
	24	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	25	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	28	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	32	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	36	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	footprnt	0	#HEAD#	#TAIL#	342
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	47	##ADDR##	procdefn	0	#HEAD#	#TAIL#	153
	48	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	49	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	50	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	51	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	52	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	30
	53	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	54	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	55	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	62	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	63	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	65	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	66	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	68	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	footprnt	0	#HEAD#	#TAIL#	442
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	footprnt	0	#HEAD#	#TAIL#	442
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	28
	77	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	procdefn	0	#HEAD#	#TAIL#	110
	80	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	81	##ADDR##	portscop	0	#HEAD#	#TAIL#	16
	82	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	84	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	86	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	87	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	89	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	90	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	91	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	94	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	98	##ADDR##	apimvref	0	#HEAD#	#TAIL#	17
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	footprnt	0	#HEAD#	#TAIL#	598
	101	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	102	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	103	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	104	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	106	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	109	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	110	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	111	##ADDR##	mprocref	0	#HEAD#	#TAIL#	20
	112	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	114	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	115	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	footprnt	0	#HEAD#	#TAIL#	783
	117	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	118	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  4 definitions
  0 typedefs
  Definitions:
    cmos_source_e = process-definition (defined) cmos_source_e<
      pint<> M
      ><
      pint<> N
      pint<> D[0..N-1]
      >(
        e1of<cmos_source_e::M> R
        bool<> _Reset
        bool<> Reset
      )
      In definition "cmos_source_e", we have: {
      Parameters:
        D = pint<> cmos_source_e::D^1
        M = pint<> cmos_source_e::M
        N = pint<> cmos_source_e::N
      Instances:
        R = e1of<cmos_source_e::M> cmos_source_e::R
        Reset = bool<> cmos_source_e::Reset
        _Reset = bool<> cmos_source_e::_Reset
      unroll sequence: 
        ports: (
          e1of<cmos_source_e::M> R
          bool<> _Reset
          bool<> Reset
        )
      }

    e1of = process-definition (defined) e1of<
      pint<> R
      >(
        bool<> d[0..R-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        R = pint<> e1of::R
      Instances:
        d = bool<> e1of::d^1
        e = bool<> e1of::e
      unroll sequence: 
        ports: (
          bool<> d[0..R-1]
          bool<> e
        )
      footprint collection: {
        <2> {
          R = pint^0 value: 2
          d = bool^1
            {
              [0] = e1of<2>::d[0] (2) 
              [1] = e1of<2>::d[1] (3) 
            }
          e = bool^0 = e1of<2>::e (1) 
          Created state:
          bool instance pool:
          1	e1of<2>::e
          2	e1of<2>::d[0]
          3	e1of<2>::d[1]
        }
      }
      }

    source_e = process-definition (defined) source_e<
      pint<> M
      ><
      pint<> N
      pint<> d[0..N-1]
      >(
        e1of<source_e::M> rr
        bool<> _Reset
      )
      In definition "source_e", we have: {
      Parameters:
        M = pint<> source_e::M
        N = pint<> source_e::N
        d = pint<> source_e::d^1
      Instances:
        _Reset = bool<> source_e::_Reset
        rr = e1of<source_e::M> source_e::rr
      unroll sequence: 
        ports: (
          e1of<source_e::M> rr
          bool<> _Reset
        )
      footprint collection: {
        <2, 1, {0}> {
          M = pint^0 value: 2
          N = pint^0 value: 1
          _Reset = bool^0 = source_e<2, 1, {0}>::_Reset (4) 
          d = pint^1
            unrolled index-value pairs: {
              0 = 0
            }
          rr = process e1of<2>^0 = source_e<2, 1, {0}>::rr (1) (
            d = bool^1
              {
                [0] = source_e<2, 1, {0}>::rr.d[0] (1) 
                [1] = source_e<2, 1, {0}>::rr.d[1] (2) 
              }
            e = bool^0 = source_e<2, 1, {0}>::rr.e (3) 
          )
          Created state:
          process instance pool:
          1	source_e<2, 1, {0}>::rr
          bool instance pool:
          1	source_e<2, 1, {0}>::rr.d[0]
          2	source_e<2, 1, {0}>::rr.d[1]
          3	source_e<2, 1, {0}>::rr.e
          4	source_e<2, 1, {0}>::_Reset
        }
        <2, 1, {1}> {
          M = pint^0 value: 2
          N = pint^0 value: 1
          _Reset = bool^0 = source_e<2, 1, {1}>::_Reset (4) 
          d = pint^1
            unrolled index-value pairs: {
              0 = 1
            }
          rr = process e1of<2>^0 = source_e<2, 1, {1}>::rr (1) (
            d = bool^1
              {
                [0] = source_e<2, 1, {1}>::rr.d[0] (1) 
                [1] = source_e<2, 1, {1}>::rr.d[1] (2) 
              }
            e = bool^0 = source_e<2, 1, {1}>::rr.e (3) 
          )
          Created state:
          process instance pool:
          1	source_e<2, 1, {1}>::rr
          bool instance pool:
          1	source_e<2, 1, {1}>::rr.d[0]
          2	source_e<2, 1, {1}>::rr.d[1]
          3	source_e<2, 1, {1}>::rr.e
          4	source_e<2, 1, {1}>::_Reset
        }
      }
      }

    source_pack_port_test = process-definition (defined) source_pack_port_test(
        source_e<2> Src[0..1]
      )
      In definition "source_pack_port_test", we have: {
      Instances:
        Src = source_e<2> source_pack_port_test::Src^1
      unroll sequence: 
        ports: (
          source_e<2> Src[0..1]
        )
        Src[0]<1, { 0 }>
        Src[1]<1, { 1 }>
      footprint: {
        Src = process source_e<2>^1
          {
            [0]<1, {0}> = source_pack_port_test<>::Src[0] (1) (
              rr = process e1of<2>^0 = source_pack_port_test<>::Src[0].rr (2) (
                d = bool^1
                  {
                    [0] = source_pack_port_test<>::Src[0].rr.d[0] (1) 
                    [1] = source_pack_port_test<>::Src[0].rr.d[1] (2) 
                  }
                e = bool^0 = source_pack_port_test<>::Src[0].rr.e (3) 
              )
              _Reset = bool^0 = source_pack_port_test<>::Src[0]._Reset (4) 
            )
            [1]<1, {1}> = source_pack_port_test<>::Src[1] (3) (
              rr = process e1of<2>^0 = source_pack_port_test<>::Src[1].rr (4) (
                d = bool^1
                  {
                    [0] = source_pack_port_test<>::Src[1].rr.d[0] (5) 
                    [1] = source_pack_port_test<>::Src[1].rr.d[1] (6) 
                  }
                e = bool^0 = source_pack_port_test<>::Src[1].rr.e (7) 
              )
              _Reset = bool^0 = source_pack_port_test<>::Src[1]._Reset (8) 
            )
          }
        Created state:
        process instance pool:
        1	source_pack_port_test<>::Src[0]<1, {0}>
        2	source_pack_port_test<>::Src[0].rr
        3	source_pack_port_test<>::Src[1]<1, {1}>
        4	source_pack_port_test<>::Src[1].rr
        bool instance pool:
        1	source_pack_port_test<>::Src[0].rr.d[0]
        2	source_pack_port_test<>::Src[0].rr.d[1]
        3	source_pack_port_test<>::Src[0].rr.e
        4	source_pack_port_test<>::Src[0]._Reset
        5	source_pack_port_test<>::Src[1].rr.d[0]
        6	source_pack_port_test<>::Src[1].rr.d[1]
        7	source_pack_port_test<>::Src[1].rr.e
        8	source_pack_port_test<>::Src[1]._Reset
      }
      }

  Instances:
    Z = source_pack_port_test<> Z
    s = source_e<2> s
}

footprint: {
  Z = process source_pack_port_test<>^0 = Z (3) (
    Src = process source_e<2>^1
      {
        [0]<1, {0}> = s (1) (
          rr = process e1of<2>^0 = s.rr (2) (
            d = bool^1
              {
                [0] = s.rr.d[0] (1) 
                [1] = s.rr.d[1] (2) 
              }
            e = bool^0 = s.rr.e (3) 
          )
          _Reset = bool^0 = s._Reset (4) 
        )
        [1]<1, {1}> = Z.Src[1] (4) (
          rr = process e1of<2>^0 = Z.Src[1].rr (5) (
            d = bool^1
              {
                [0] = Z.Src[1].rr.d[0] (5) 
                [1] = Z.Src[1].rr.d[1] (6) 
              }
            e = bool^0 = Z.Src[1].rr.e (7) 
          )
          _Reset = bool^0 = Z.Src[1]._Reset (8) 
        )
      }
  )
  s = process source_e<2>^0<1, {0}> = s (1) (
    rr = process e1of<2>^0 = s.rr (2) (
      d = bool^1
        {
          [0] = s.rr.d[0] (1) 
          [1] = s.rr.d[1] (2) 
        }
      e = bool^0 = s.rr.e (3) 
    )
    _Reset = bool^0 = s._Reset (4) 
  )
  Created state:
  process instance pool:
  1	s<1, {0}>
  2	s.rr
  3	Z
  4	Z.Src[1]<1, {1}>
  5	Z.Src[1].rr
  bool instance pool:
  1	s.rr.d[0]
  2	s.rr.d[1]
  3	s.rr.e
  4	s._Reset
  5	Z.Src[1].rr.d[0]
  6	Z.Src[1].rr.d[1]
  7	Z.Src[1].rr.e
  8	Z.Src[1]._Reset
}
