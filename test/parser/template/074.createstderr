
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	272
	4	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	38
	5	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	6	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	34
	7	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	8	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	9	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	10	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	11	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	12	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	18	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	44
	24	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	25	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	65
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	27	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	28	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	29	##ADDR##	proccoll	0	#HEAD#	#TAIL#	67
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	35	##ADDR##	pintcoll	1	#HEAD#	#TAIL#	70
	36	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	37	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	38	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	39	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	40	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	44	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	46	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	39
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	49	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	52	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	54	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	57	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	59	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	20
	62	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	portconn	0	#HEAD#	#TAIL#	28
	65	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	20
	66	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	67	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20
	68	##ADDR##	sdbmref_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  1 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    p = pint^1 p with indices: {
      [0..2]
    }
      unrolled index-value pairs: {
        0 = 1
        1 = 0
        2 = 1
      }
  Definitions:
    ass = process-definition (defined) ass<
      pint<> N
      pint<> d with indices: {
        [0..::ass::N-1]
      }

      >(
        bool<> x
        bool<> y
        bool<> z
      )
      In definition "ass", we have: {
      Parameters:
        N = pint<> N
        d = pint<> d with indices: {
          [0..::ass::N-1]
        }

      Instances:
        x = bool<> x
        y = bool<> y
        z = bool<> z
      unroll sequence: 
        pint<> N
        pint<> d[0..N-1]
        bool<> x
        bool<> y
        bool<> z
      footprint collection: {
        <3, {1,0,1}> {
          pint^0 N value: ?
          pint^1 d with indices: {
          }
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          bool^0 x (instantiated) = ::ass::x (1) 
          bool^0 y (instantiated) = ::ass::y (2) 
          bool^0 z (instantiated) = ::ass::z (3) 
          bool instance pool:
          1	::ass::x
          2	::ass::y
          3	::ass::z
        }
      }
      }

  Instances:
    a = bool^0 a (instantiated) = ::myass.x (1) 
    b = bool^0 b (instantiated) = ::myass.y (2) 
    c = bool^0 c (instantiated) = ::myass.z (3) 
    myass = process ass<3, {1,0,1}>^0 myass (instantiated) = ::myass (1) (
      bool^0 x (instantiated) = ::a (1) 
      bool^0 y (instantiated) = ::b (2) 
      bool^0 z (instantiated) = ::c (3) 
    )
}

Created state:
process instance pool:
1	::myass
bool instance pool:
1	::a
2	::b
3	::c

