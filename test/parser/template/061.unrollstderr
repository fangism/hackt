
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3d04ca0	module__	0	0	41
	2	 0x3d00144	namespc_	0	41	77
	3	 0x3d04cf4	proccoll	1	77	163
	4	 0x3d04cc0	procinst	0	163	187
	5	 0x3d04d40	proctprf	0	187	207
	6	 0x3d04d60	procdefn	0	207	279
	7	 0x3d04c44	pintcoll	0	279	316
	8	 0x3d04ce0	pintinst	0	316	332
	9	 0x3d04df4	pintcoll	0	332	369
	10	 0x3d04e50	pintinst	0	369	385
	11	 0x3d04e60	dprmlst_	0	385	401
	12	 0x3aa5028	cnstpi__	0	401	413
	13	 0x3d04e70	crnglst_	0	413	433
	14	 0x3d04e80	proctprf	0	433	453
	15	 0x3d04ea0	cprmlst_	0	453	469
	16	 0x3aa5038	cnstpi__	0	469	481
	17	 0x3d04eb4	proccoll	1	481	567
	18	 0x3d04f00	procinst	0	567	591
	19	 0x3d04f20	proctprf	0	591	611
	20	 0x3d04f40	dprmlst_	0	611	627
	21	 0x3aa5048	cnstpi__	0	627	639
	22	 0x3d04f50	dprmlst_	0	639	655
	23	 0x3aa5058	cnstpi__	0	655	667
	24	 0x3d04f60	crnglst_	0	667	687
	25	 0x3d04f70	proctprf	0	687	707
	26	 0x3d04f90	cprmlst_	0	707	723
	27	 0x3aa5068	cnstpi__	0	723	735
	28	 0x3d04fa4	proccoll	1	735	821
	29	 0x3d04ff0	procinst	0	821	845
	30	 0x3d05010	proctprf	0	845	865
	31	 0x3d05030	dprmlst_	0	865	881
	32	 0x3aa5078	cnstpi__	0	881	893
	33	 0x3d05040	dprmlst_	0	893	909
	34	 0x3aa5088	cnstpi__	0	909	921
	35	 0x3d05050	crnglst_	0	921	941
	36	 0x3d05060	proctprf	0	941	961
	37	 0x3d05080	cprmlst_	0	961	977
	38	 0x3aa5098	cnstpi__	0	977	989
	39	 0x3d05090	cprmlst_	0	989	1005
	40	 0x3aa50a8	cnstpi__	0	1005	1017

In module created from: ./061.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (declared) foo<
      pint<> Q
      ><
      pint<> R
      >(
      )
      In definition "foo", we have: {
        Q = pint<> Q
        R = pint<> R
      }

  Instances:
    bar = process foo<5>^1 bar with indices: {
      [0..2]
    }
      unrolled indices: {
        0 = ::bar[0]
        1 = ::bar[1]
        2 = ::bar[2]
      }
    car = process foo<5><4>^1 car with indices: {
      [0..2]
    }
      unrolled indices: {
        0 = ::car[0]
        1 = ::car[1]
        2 = ::car[2]
      }
    dar = process foo<5>^1 dar with indices: {
      [0..2]
    }
      unrolled indices: {
        0 = ::dar[0]
        1 = ::dar[1]
        2 = ::dar[2]
      }
}

