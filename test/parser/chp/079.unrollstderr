
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	112
	4	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	5	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	8	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	11	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	12	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	13	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	16	##ADDR##	footprnt	0	#HEAD#	#TAIL#	375
	17	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	18	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	19	##ADDR##	footprnt	0	#HEAD#	#TAIL#	375
	20	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	21	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	22	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	23	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	27	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	footprnt	0	#HEAD#	#TAIL#	430
	30	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    send_me = process-definition (defined) send_me<
      pbool<> B
      >(
        chan!(bool<>) b
      )
      In definition "send_me", we have: {
      Parameters:
        B = pbool<> send_me::B
      Instances:
        b = chan!(bool<>) send_me::b
      unroll sequence: 
        chan!(bool<>) b
      chp:
        concurrent: {
          *[
            b!(B)
          ]
        }
      footprint collection: {
        <false> {
          B = pbool^0 value: 0
          b = channel chan!(bool<>)^0 = send_me::b 
        }
        <true> {
          B = pbool^0 value: 1
          b = channel chan!(bool<>)^0 = send_me::b 
        }
      }
      }

  Instances:
    X = send_me<true> X
    Y = send_me<false> Y
}

footprint: {
  X = process send_me<true>^0 = X (
    b = channel chan!(bool<>)^0 = X.b 
  )
  Y = process send_me<false>^0 = Y (
    b = channel chan!(bool<>)^0 = Y.b 
  )
}
