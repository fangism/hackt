
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x43051b0	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x43051d0	procdefn	0	53	162
	4	 0x4305264	chancoll	0	162	201
	5	 0x43052c0	chaninst	0	201	221
	6	 0x43052e0	bchntprf	0	221	242
	7	 0x4305300	datatprf	0	242	258
	8	 0x4305310	datadefn	0	258	310
	9	 0x43053b0	dprmlst_	0	310	326
	10	 0x3716028	cnstpi__	0	326	338
	11	 0x43053c4	chancoll	0	338	377
	12	 0x4305420	chaninst	0	377	397
	13	 0x4305440	bchntprf	0	397	418
	14	 0x4305460	datatprf	0	418	434
	15	 0x4305470	dprmlst_	0	434	450
	16	 0x4305484	chancoll	0	450	488
	17	 0x43054e0	chaninst	0	488	508
	18	 0x4305500	bchntprf	0	508	529
	19	 0x4305520	datatprf	0	529	545
	20	 0x4305530	dprmlst_	0	545	561
	21	 0x4305544	dintcoll	0	561	599
	22	 0x43055a0	datainst	0	599	619
	23	 0x43055c0	datatprf	0	619	635
	24	 0x43055d0	dprmlst_	0	635	651
	25	 0x43055e4	dintcoll	0	651	689
	26	 0x4305640	datainst	0	689	709
	27	 0x4305660	CHPseqnc	0	709	729
	28	 0x4305670	CHPconcr	0	729	749
	29	 0x4305680	CHPrecv_	0	749	769
	30	 0x43056a0	schnnref	0	769	785
	31	 0x43056b0	sdinref_	0	785	801
	32	 0x43056d0	CHPrecv_	0	801	821
	33	 0x43056f0	schnnref	0	821	837
	34	 0x4305700	sdinref_	0	837	853
	35	 0x4305720	CHPconcr	0	853	873
	36	 0x4305730	CHPsend_	0	873	893
	37	 0x4305750	schnnref	0	893	909
	38	 0x4305778	narithex	0	909	926
	39	 0x4305780	sdinref_	0	926	942
	40	 0x43057a0	sdinref_	0	942	958
	41	 0x43057c0	CHPsend_	0	958	978
	42	 0x43057e0	schnnref	0	978	994
	43	 0x4305808	narithex	0	994	1011
	44	 0x4305810	sdinref_	0	1011	1027
	45	 0x4305830	sdinref_	0	1027	1043

In module created from: ./036.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    sum_diff = process-definition (defined) sum_diff(
        chan?(int<32>) L1
        chan(int<32>) L2
        chan!(int<32>) R
      )
      In definition "sum_diff", we have: {
        L1 = chan?(int<32>) L1
        L2 = chan(int<32>) L2
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              L1?(x)
              L2?(z)
            }
            concurrent: {
              R!(x-z)
              L2!(x+z)
            }
          }
        }
      }

}

