
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3c053e0	module__	0	0	29
	2	 0x3c00144	namespc_	0	29	53
	3	 0x3c05400	procdefn	0	53	162
	4	 0x3c05494	chancoll	0	162	201
	5	 0x3c054f0	chaninst	0	201	221
	6	 0x3c05510	bchntprf	0	221	246
	7	 0x3c05540	datatprf	0	246	266
	8	 0x3c05560	datadefn	0	266	318
	9	 0x3c05600	dprmlst_	0	318	334
	10	 0x39f2028	cnstpi__	0	334	346
	11	 0x3c05614	chancoll	0	346	385
	12	 0x3c05670	chaninst	0	385	405
	13	 0x3c05690	bchntprf	0	405	430
	14	 0x3c056c0	datatprf	0	430	450
	15	 0x3c056e0	dprmlst_	0	450	466
	16	 0x3c056f4	chancoll	0	466	504
	17	 0x3c05750	chaninst	0	504	524
	18	 0x3c05770	bchntprf	0	524	549
	19	 0x3c057a0	datatprf	0	549	569
	20	 0x3c057c0	dprmlst_	0	569	585
	21	 0x3c057d4	dintcoll	0	585	623
	22	 0x3c05830	datainst	0	623	647
	23	 0x3c05850	datatprf	0	647	667
	24	 0x3c05870	dprmlst_	0	667	683
	25	 0x3c05884	dintcoll	0	683	721
	26	 0x3c058e0	datainst	0	721	745
	27	 0x3c05900	CHPseqnc	0	745	765
	28	 0x3c05910	CHPconcr	0	765	785
	29	 0x3c05920	CHPrecv_	0	785	805
	30	 0x3c05940	schnnref	0	805	821
	31	 0x3c05950	sdinref_	0	821	837
	32	 0x3c05970	CHPrecv_	0	837	857
	33	 0x3c05990	schnnref	0	857	873
	34	 0x3c059a0	sdinref_	0	873	889
	35	 0x3c059c0	CHPconcr	0	889	909
	36	 0x3c059d0	CHPsend_	0	909	929
	37	 0x3c059f0	schnnref	0	929	945
	38	 0x3c05a18	narithex	0	945	962
	39	 0x3c05a20	sdinref_	0	962	978
	40	 0x3c05a40	sdinref_	0	978	994
	41	 0x3c05a60	CHPsend_	0	994	1014
	42	 0x3c05a80	schnnref	0	1014	1030
	43	 0x3c05aa8	narithex	0	1030	1047
	44	 0x3c05ab0	sdinref_	0	1047	1063
	45	 0x3c05ad0	sdinref_	0	1063	1079

In module created from: ./036.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    sum_diff = process-definition (defined) sum_diff(
        chan?(int<32>) L1
        chan(int<32>) L2
        chan!(int<32>) R
      )
      In definition "sum_diff", we have: {
        L1 = chan?(int<32>) L1
        L2 = chan(int<32>) L2
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              L1?(x)
              L2?(z)
            }
            concurrent: {
              R!(x-z)
              L2!(x+z)
            }
          }
        }
      }

}

