At: "019b.hac":11:
parse error: syntax error
parser stacks:
state	value
#STATE#	(null) 
#STATE#	(process-prototype) [4:1..46]
#STATE#	{ [4:48]
#STATE#	list<(def-body-item)>: (instance-decl) ... [5:1..5]
#STATE#	keyword: chp [6:1..3]
#STATE#	{ [6:5]
#STATE#	list<(chp-statement)>: list<(chp-statement)>: (chp-send) ... ... [7:2--10:11]
#STATE#	; [10:12]
#STATE#	(id-expr): R [11:2]
#STATE#	! [11:3]
#STATE#	( [11:4]
#STATE#	(id-expr): z [11:5]
#STATE#	< [11:7]
in state #STATE#, possible rules are:
	relational_equality_expr : relational_equality_expr . LE shift_expr  (#RULE#)
	relational_equality_expr : relational_equality_expr . GE shift_expr  (#RULE#)
	relational_equality_expr : relational_equality_expr . EQUAL shift_expr  (#RULE#)
	relational_equality_expr : relational_equality_expr . NOTEQUAL shift_expr  (#RULE#)
	and_expr : relational_equality_expr .  (#RULE#)
acceptable tokens are: 
	'#' (reduce)
	'&' (reduce)
	')' (reduce)
	',' (reduce)
	':' (reduce)
	';' (reduce)
	'=' (reduce)
	'>' (reduce)
	']' (reduce)
	'^' (reduce)
	'|' (reduce)
	'}' (reduce)
	RANGE (reduce)
	THICKBAR (reduce)
	LE (shift)
	GE (shift)
	EQUAL (shift)
	NOTEQUAL (shift)
	RARROW (reduce)
	LOGICAL_AND (reduce)
	LOGICAL_OR (reduce)
