
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	72
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	1526
	5	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	29
	6	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	7	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	9	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	10	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	11	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	12	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	16	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	17	##ADDR##	chancoll	0	#HEAD#	#TAIL#	47
	18	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	22	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	23	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	24	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	27	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	26
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	39
	32	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	33	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	34	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	35	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	36	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	37	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	38	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	26
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	39
	43	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	44	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	45	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	46	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	47	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	48	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	49	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	27
	52	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	53	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	44
	54	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	55	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	56	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	57	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	58	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	59	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	60	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	27
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	44
	65	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	66	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	67	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	68	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	69	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	70	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	71	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	27
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	44
	76	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	77	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	78	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	79	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	80	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	81	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	82	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	30
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	87	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	88	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	89	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	90	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	91	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	92	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	93	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	30
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	98	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	99	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	100	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	101	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	102	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	103	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	104	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	105	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	106	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	30
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	109	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	110	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	111	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	112	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	113	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	114	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	115	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	116	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	117	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	30
	118	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	119	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	120	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	121	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	122	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	123	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	124	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	125	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	126	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	127	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	128	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	30
	129	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	130	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	131	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	132	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	133	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	134	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	135	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	136	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	137	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	30
	140	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	141	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	142	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	143	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	144	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	145	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	146	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	147	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	148	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	149	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	150	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	151	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	152	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	153	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	155	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	156	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	157	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	158	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	159	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	160	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	161	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	162	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	163	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	164	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	165	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	166	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	167	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	168	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	169	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	170	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	171	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	172	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	173	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	174	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	175	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	176	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	177	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	178	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	179	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	180	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	181	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	182	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	183	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	184	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	185	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	186	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	187	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	188	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	189	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	190	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	191	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	192	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	193	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	194	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	195	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	196	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	197	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	198	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	199	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	200	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	201	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	202	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	203	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	204	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	205	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	206	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	207	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	208	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	209	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	210	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	211	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	212	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	213	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	214	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	215	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	216	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	217	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	218	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	219	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	220	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	221	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	222	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	223	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	224	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	225	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	226	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	227	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	228	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	229	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	230	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	231	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	232	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	233	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	234	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	235	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	236	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	237	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	238	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	239	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	240	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	241	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	242	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	243	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	244	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	245	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	246	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	247	##ADDR##	chancoll	0	#HEAD#	#TAIL#	55
	248	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	249	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	250	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	251	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	252	##ADDR##	pbassign	0	#HEAD#	#TAIL#	20
	253	##ADDR##	pireltex	0	#HEAD#	#TAIL#	22
	254	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	255	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	256	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	257	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	258	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	259	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	260	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  1 parameter-collections
  11 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    x = pbool^1 x
      unrolled index-value pairs: {
        0 = 0
        1 = 1
        2 = 0
        3 = 1
        4 = 0
        5 = 1
      }
  Definitions:
    assign_me = process-definition (defined) assign_me<
      pint<> N
      pbool<> B[0..N-1]
      pint<> M
      >(
        chan!(bool<>) b
      )
      In definition "assign_me", we have: {
      Parameters:
        B = pbool<> B

        M = pint<> M
        N = pint<> N
      Instances:
        b = chan!(bool<>) b
      unroll sequence: 
        pint<> N
        pbool<> B[0..N-1]
        pint<> M
        chan!(bool<>) b
      chp:
        concurrent: {
          *[
            b!(B[M])
          ]
        }
      footprint collection: {
        <2, {0,1}, 0> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(false)
            ]
        }
        <2, {0,1}, 1> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(true)
            ]
        }
        <3, {0,1,0}, 0> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(false)
            ]
        }
        <3, {0,1,0}, 1> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(true)
            ]
        }
        <3, {0,1,0}, 2> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(false)
            ]
        }
        <6, {0,1,0,1,0,1}, 0> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(false)
            ]
        }
        <6, {0,1,0,1,0,1}, 1> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(true)
            ]
        }
        <6, {0,1,0,1,0,1}, 2> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(false)
            ]
        }
        <6, {0,1,0,1,0,1}, 3> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(true)
            ]
        }
        <6, {0,1,0,1,0,1}, 4> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(false)
            ]
        }
        <6, {0,1,0,1,0,1}, 5> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          channel chan!(bool<>)^0 b (instantiated) = ::assign_me::b (1) 
          channel instance pool:
          1	::assign_me::b
          resolved concurrent actions:
            *[
              b!(true)
            ]
        }
      }
      }

  Instances:
    y2_0 = process assign_me<2, {0,1}, 0>^0 y2_0 (instantiated) = ::y2_0 (7) (
      channel chan!(bool<>)^0 b (instantiated) = ::y2_0.b (7) 
    )
    y2_1 = process assign_me<2, {0,1}, 1>^0 y2_1 (instantiated) = ::y2_1 (8) (
      channel chan!(bool<>)^0 b (instantiated) = ::y2_1.b (8) 
    )
    y3_0 = process assign_me<3, {0,1,0}, 0>^0 y3_0 (instantiated) = ::y3_0 (9) (
      channel chan!(bool<>)^0 b (instantiated) = ::y3_0.b (9) 
    )
    y3_1 = process assign_me<3, {0,1,0}, 1>^0 y3_1 (instantiated) = ::y3_1 (10) (
      channel chan!(bool<>)^0 b (instantiated) = ::y3_1.b (10) 
    )
    y3_2 = process assign_me<3, {0,1,0}, 2>^0 y3_2 (instantiated) = ::y3_2 (11) (
      channel chan!(bool<>)^0 b (instantiated) = ::y3_2.b (11) 
    )
    y6_0 = process assign_me<6, {0,1,0,1,0,1}, 0>^0 y6_0 (instantiated) = ::y6_0 (1) (
      channel chan!(bool<>)^0 b (instantiated) = ::y6_0.b (1) 
    )
    y6_1 = process assign_me<6, {0,1,0,1,0,1}, 1>^0 y6_1 (instantiated) = ::y6_1 (2) (
      channel chan!(bool<>)^0 b (instantiated) = ::y6_1.b (2) 
    )
    y6_2 = process assign_me<6, {0,1,0,1,0,1}, 2>^0 y6_2 (instantiated) = ::y6_2 (3) (
      channel chan!(bool<>)^0 b (instantiated) = ::y6_2.b (3) 
    )
    y6_3 = process assign_me<6, {0,1,0,1,0,1}, 3>^0 y6_3 (instantiated) = ::y6_3 (4) (
      channel chan!(bool<>)^0 b (instantiated) = ::y6_3.b (4) 
    )
    y6_4 = process assign_me<6, {0,1,0,1,0,1}, 4>^0 y6_4 (instantiated) = ::y6_4 (5) (
      channel chan!(bool<>)^0 b (instantiated) = ::y6_4.b (5) 
    )
    y6_5 = process assign_me<6, {0,1,0,1,0,1}, 5>^0 y6_5 (instantiated) = ::y6_5 (6) (
      channel chan!(bool<>)^0 b (instantiated) = ::y6_5.b (6) 
    )
}

Created state:
process instance pool:
1	::y6_0
2	::y6_1
3	::y6_2
4	::y6_3
5	::y6_4
6	::y6_5
7	::y2_0
8	::y2_1
9	::y3_0
10	::y3_1
11	::y3_2
channel instance pool:
1	::y6_0.b
2	::y6_1.b
3	::y6_2.b
4	::y6_3.b
5	::y6_4.b
6	::y6_5.b
7	::y2_0.b
8	::y2_1.b
9	::y3_0.b
10	::y3_1.b
11	::y3_2.b

