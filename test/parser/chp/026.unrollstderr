
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x43054d0	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x43054f0	procdefn	0	53	150
	4	 0x4305584	chancoll	0	150	188
	5	 0x43055e0	chaninst	0	188	208
	6	 0x4305600	bchntprf	0	208	233
	7	 0x4305630	datatprf	0	233	253
	8	 0x4305650	datadefn	0	253	305
	9	 0x43056f0	dprmlst_	0	305	321
	10	 0x37a4028	cnstpi__	0	321	333
	11	 0x4305704	chancoll	0	333	371
	12	 0x4305760	chaninst	0	371	391
	13	 0x4305780	bchntprf	0	391	416
	14	 0x43057b0	datatprf	0	416	436
	15	 0x43057d0	dprmlst_	0	436	452
	16	 0x43057e4	dintcoll	0	452	490
	17	 0x4305840	datainst	0	490	510
	18	 0x4305860	datatprf	0	510	530
	19	 0x4305880	dprmlst_	0	530	546
	20	 0x4305894	dintcoll	0	546	584
	21	 0x43058f0	datainst	0	584	604
	22	 0x4305910	CHPseqnc	0	604	636
	23	 0x4305920	CHPsend_	0	636	656
	24	 0x4305940	schnnref	0	656	672
	25	 0x4305968	narithex	0	672	689
	26	 0x4305970	sdinref_	0	689	705
	27	 0x4305990	sdinref_	0	705	721
	28	 0x43059b0	CHPsend_	0	721	741
	29	 0x43059d0	schnnref	0	741	757
	30	 0x43059f8	narithex	0	757	774
	31	 0x4305a00	sdinref_	0	774	790
	32	 0x4305a20	sdinref_	0	790	806
	33	 0x4305a40	CHPsend_	0	806	826
	34	 0x4305a60	schnnref	0	826	842
	35	 0x4305a88	narithex	0	842	859
	36	 0x4305a90	sdinref_	0	859	875
	37	 0x4305ab0	sdinref_	0	875	891
	38	 0x4305ad0	CHPsend_	0	891	911
	39	 0x4305af0	schnnref	0	911	927
	40	 0x4305b18	narithex	0	927	944
	41	 0x4305b20	sdinref_	0	944	960
	42	 0x4305b40	sdinref_	0	960	976
	43	 0x4305b60	CHPsend_	0	976	996
	44	 0x4305b80	schnnref	0	996	1012
	45	 0x4305ba8	narithex	0	1012	1029
	46	 0x4305bb0	sdinref_	0	1029	1045
	47	 0x4305bd0	sdinref_	0	1045	1061

In module created from: ./026.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    one_shot = process-definition (defined) one_shot(
        chan?(int<32>) L
        chan!(int<32>) R
      )
      In definition "one_shot", we have: {
        L = chan?(int<32>) L
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            R!(x+z)
            R!(x-z)
            R!(x*z)
            R!(x/z)
            R!(x%z)
          }
        }
      }

}

