
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	footprnt	0	#HEAD#	#TAIL#	341
	33	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	34	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	35	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	37	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	341
	39	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	40	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	41	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	43	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	57	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	59	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	footprnt	0	#HEAD#	#TAIL#	542
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    assign_me = process-definition (defined) assign_me<
      pbool<> B
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> b
      )
      In definition "assign_me", we have: {
      Parameters:
        B = pbool<> assign_me::B
      Instances:
        !GND = bool<> assign_me::!GND
        !Vdd = bool<> assign_me::!Vdd
        b = bool<> assign_me::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> b
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            b := B
          ]
        }
      footprint collection: {
        <false> {
          !GND = bool^0 = assign_me<false>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = assign_me<false>::!Vdd (2) @[ supply_high port-alias ] 
          B = pbool^0 value: 0
          b = bool^0 = assign_me<false>::b (3) @[ port-alias ] 
          Created state:
          bool instance pool: (3 ports, 0 local, 0 mapped)
          1	assign_me<false>::!GND @[ supply_low port-alias ]	
          2	assign_me<false>::!Vdd @[ supply_high port-alias ]	
          3	assign_me<false>::b @[ port-alias ]	
          resolved concurrent actions:
            *[
              b := false
            ]
          chp events: {
            event[0]: assign: b := false, #pred: 1, succ: 0 
          }
        }
        <true> {
          !GND = bool^0 = assign_me<true>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = assign_me<true>::!Vdd (2) @[ supply_high port-alias ] 
          B = pbool^0 value: 1
          b = bool^0 = assign_me<true>::b (3) @[ port-alias ] 
          Created state:
          bool instance pool: (3 ports, 0 local, 0 mapped)
          1	assign_me<true>::!GND @[ supply_low port-alias ]	
          2	assign_me<true>::!Vdd @[ supply_high port-alias ]	
          3	assign_me<true>::b @[ port-alias ]	
          resolved concurrent actions:
            *[
              b := true
            ]
          chp events: {
            event[0]: assign: b := true, #pred: 1, succ: 0 
          }
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    X = assign_me<true> X
    Y = assign_me<false> Y
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  X = process assign_me<true>^0 = X (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    b = bool^0 = X.b (3) 
  )
  Y = process assign_me<false>^0 = Y (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    b = bool^0 = Y.b (4) 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	X	assign_me<true>
    bool: 1,2,3
  2	Y	assign_me<false>
    bool: 1,2,4
  bool instance pool: (0 ports, 4 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	X.b	
  4	Y.b	
}
