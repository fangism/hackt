
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3c059a0	module__	0	0	29
	2	 0x3c00144	namespc_	0	29	53
	3	 0x3c059c0	procdefn	0	53	150
	4	 0x3c05a54	chancoll	0	150	188
	5	 0x3c05ab0	chaninst	0	188	208
	6	 0x3c05ad0	bchntprf	0	208	233
	7	 0x3c05b00	datatprf	0	233	253
	8	 0x3c05b20	datadefn	0	253	305
	9	 0x3c05bc0	dprmlst_	0	305	321
	10	 0x39f2028	cnstpi__	0	321	333
	11	 0x3c05bd4	chancoll	0	333	371
	12	 0x3c05c30	chaninst	0	371	391
	13	 0x3c05c50	bchntprf	0	391	416
	14	 0x3c05c80	datatprf	0	416	436
	15	 0x3c05ca0	dprmlst_	0	436	452
	16	 0x3c05cb4	dintcoll	0	452	490
	17	 0x3c05d10	datainst	0	490	514
	18	 0x3c05d30	datatprf	0	514	534
	19	 0x3c05d50	dprmlst_	0	534	550
	20	 0x3c05d64	dintcoll	0	550	588
	21	 0x3c05dc0	datainst	0	588	612
	22	 0x3c05de0	CHPseqnc	0	612	636
	23	 0x3c05df0	CHPsend_	0	636	656
	24	 0x3c05e10	schnnref	0	656	672
	25	 0x3c05e38	narithex	0	672	689
	26	 0x3c05e40	sdinref_	0	689	705
	27	 0x3c05e60	sdinref_	0	705	721
	28	 0x3c05e80	CHPconcr	0	721	741
	29	 0x3c05e90	CHPsend_	0	741	761
	30	 0x3c05eb0	schnnref	0	761	777
	31	 0x3c05ed8	narithex	0	777	794
	32	 0x3c05ee0	sdinref_	0	794	810
	33	 0x3c05f00	sdinref_	0	810	826
	34	 0x3c05f20	CHPsend_	0	826	846
	35	 0x3c05f40	schnnref	0	846	862
	36	 0x3c05f68	narithex	0	862	879
	37	 0x3c05f70	sdinref_	0	879	895
	38	 0x3c05f90	sdinref_	0	895	911
	39	 0x3c05fb0	CHPconcr	0	911	931
	40	 0x3c05fc0	CHPsend_	0	931	951
	41	 0x3c05fe0	schnnref	0	951	967
	42	 0x3c06008	narithex	0	967	984
	43	 0x3c06010	sdinref_	0	984	1000
	44	 0x3c06030	sdinref_	0	1000	1016
	45	 0x3c06050	CHPsend_	0	1016	1036
	46	 0x3c06070	schnnref	0	1036	1052
	47	 0x3c06098	narithex	0	1052	1069
	48	 0x3c060a0	sdinref_	0	1069	1085
	49	 0x3c060c0	sdinref_	0	1085	1101

In module created from: ./028.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    one_shot = process-definition (defined) one_shot(
        chan?(int<32>) L
        chan!(int<32>) R
      )
      In definition "one_shot", we have: {
        L = chan?(int<32>) L
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            R!(x+z)
            concurrent: {
              R!(x-z)
              R!(x*z)
            }
            concurrent: {
              R!(x/z)
              R!(x%z)
            }
          }
        }
      }

}

