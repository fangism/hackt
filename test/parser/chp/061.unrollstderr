
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x4305c10	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x4305c30	procdefn	0	53	177
	4	 0x4305cc4	chancoll	0	177	215
	5	 0x4305d20	chaninst	0	215	235
	6	 0x4305d40	bchntprf	0	235	260
	7	 0x4305d70	datatprf	0	260	280
	8	 0x4305d90	datadefn	0	280	333
	9	 0x4305e34	chancoll	0	333	371
	10	 0x4305e90	chaninst	0	371	391
	11	 0x4305eb4	chancoll	0	391	429
	12	 0x4305f10	chaninst	0	429	449
	13	 0x4305f34	chancoll	0	449	487
	14	 0x4305f90	chaninst	0	487	507
	15	 0x4305fb0	bchntprf	0	507	532
	16	 0x4305fe0	datatprf	0	532	552
	17	 0x4306004	dboolcol	0	552	586
	18	 0x4306060	datainst	0	586	606
	19	 0x4306080	datatprf	0	606	626
	20	 0x43060a4	dboolcol	0	626	660
	21	 0x4306100	datainst	0	660	680
	22	 0x4306124	dboolcol	0	680	714
	23	 0x4306180	datainst	0	714	734
	24	 0x43061a0	CHPdowhl	0	734	758
	25	 0x43061b0	CHPguard	0	758	774
	26	 0x43061d0	sdbnref_	0	774	790
	27	 0x43061f0	CHPrecv_	0	790	810
	28	 0x4306210	schnnref	0	810	826
	29	 0x4306220	sdbnref_	0	826	842
	30	 0x4306240	CHPguard	0	842	858
	31	 0x4306260	nlogicex	0	858	879
	32	 0x4306280	nbnotex_	0	879	891
	33	 0x4306290	sdbnref_	0	891	907
	34	 0x43062b0	sdbnref_	0	907	923
	35	 0x43062d0	CHPrecv_	0	923	943
	36	 0x43062f0	schnnref	0	943	959
	37	 0x4306300	sdbnref_	0	959	975
	38	 0x4306320	CHPguard	0	975	991
	39	 0x4306340	nlogicex	0	991	1012
	40	 0x4306360	nlogicex	0	1012	1033
	41	 0x4306380	nbnotex_	0	1033	1045
	42	 0x4306390	sdbnref_	0	1045	1061
	43	 0x43063b0	nbnotex_	0	1061	1073
	44	 0x43063c0	sdbnref_	0	1073	1089
	45	 0x43063e0	sdbnref_	0	1089	1105
	46	 0x4306400	CHPseqnc	0	1105	1125
	47	 0x4306410	CHPsend_	0	1125	1145
	48	 0x4306430	schnnref	0	1145	1161
	49	 0x4804404	cnstpb__	0	1161	1170
	50	 0x4306440	CHPrecv_	0	1170	1190
	51	 0x4306460	schnnref	0	1190	1206
	52	 0x4306470	sdbnref_	0	1206	1222

In module created from: ./061.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        chan?(bool<>) A
        chan?(bool<>) B
        chan?(bool<>) G
        chan!(bool<>) Z
      )
      In definition "foo", we have: {
        A = chan?(bool<>) A
        B = chan?(bool<>) B
        G = chan?(bool<>) G
        Z = chan!(bool<>) Z
        a = bool<> a
        b = bool<> b
        g = bool<> g
        chp:
        concurrent: {
          *[
            a -> B?(b)
            ~a&b -> G?(g)
            ~a&~b&g -> sequential: {
              Z!(true)
              A?(a)
            }
          ]
        }
      }

}

