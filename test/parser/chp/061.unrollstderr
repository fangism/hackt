
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	24
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	132
	4	##ADDR##	chancoll	0	#HEAD#	#TAIL#	56
	5	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	6	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	9	##ADDR##	chancoll	0	#HEAD#	#TAIL#	56
	10	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	chancoll	0	#HEAD#	#TAIL#	56
	12	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	chancoll	0	#HEAD#	#TAIL#	56
	14	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	22	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	35
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	24	##ADDR##	CHPdowhl	0	#HEAD#	#TAIL#	24
	25	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	26	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	20
	28	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	31	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	21
	32	##ADDR##	nbnotex_	0	#HEAD#	#TAIL#	12
	33	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	20
	36	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	39	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	21
	40	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	21
	41	##ADDR##	nbnotex_	0	#HEAD#	#TAIL#	12
	42	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	nbnotex_	0	#HEAD#	#TAIL#	12
	44	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	20
	47	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	48	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	50	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	20
	51	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        chan?(bool<>) A
        chan?(bool<>) B
        chan?(bool<>) G
        chan!(bool<>) Z
      )
      In definition "foo", we have: {
      Instances:
        A = chan?(bool<>) A
        B = chan?(bool<>) B
        G = chan?(bool<>) G
        Z = chan!(bool<>) Z
        a = bool<> a
        b = bool<> b
        g = bool<> g
      unroll sequence: 
        chan?(bool<>) A
        chan?(bool<>) B
        chan?(bool<>) G
        chan!(bool<>) Z
        bool<> a
        bool<> b
        bool<> g
      chp:
        concurrent: {
          *[
            a -> B?(b)
            ~a&b -> G?(g)
            ~a&~b&g -> sequential: {
              Z!(true)
              A?(a)
            }
          ]
        }
      }

}

