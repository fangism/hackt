
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x4305bd0	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x4305bf0	procdefn	0	53	177
	4	 0x4305c84	chancoll	0	177	215
	5	 0x4305ce0	chaninst	0	215	235
	6	 0x4305d00	bchntprf	0	235	256
	7	 0x4305d20	datatprf	0	256	272
	8	 0x4305d30	datadefn	0	272	309
	9	 0x4305d94	chancoll	0	309	347
	10	 0x4305df0	chaninst	0	347	367
	11	 0x4305e14	chancoll	0	367	405
	12	 0x4305e70	chaninst	0	405	425
	13	 0x4305e94	chancoll	0	425	463
	14	 0x4305ef0	chaninst	0	463	483
	15	 0x4305f10	bchntprf	0	483	504
	16	 0x4305f30	datatprf	0	504	520
	17	 0x4305f44	dboolcol	0	520	554
	18	 0x4305fa0	datainst	0	554	574
	19	 0x4305fc0	datatprf	0	574	590
	20	 0x4305fd4	dboolcol	0	590	624
	21	 0x4306030	datainst	0	624	644
	22	 0x4306054	dboolcol	0	644	678
	23	 0x43060b0	datainst	0	678	698
	24	 0x43060d0	CHPdowhl	0	698	722
	25	 0x43060e0	CHPguard	0	722	738
	26	 0x4306100	sdbnref_	0	738	754
	27	 0x4306120	CHPrecv_	0	754	774
	28	 0x4306140	schnnref	0	774	790
	29	 0x4306150	sdbnref_	0	790	806
	30	 0x4306170	CHPguard	0	806	822
	31	 0x4306190	nlogicex	0	822	843
	32	 0x43061b0	nbnotex_	0	843	855
	33	 0x43061c0	sdbnref_	0	855	871
	34	 0x43061e0	sdbnref_	0	871	887
	35	 0x4306200	CHPrecv_	0	887	907
	36	 0x4306220	schnnref	0	907	923
	37	 0x4306230	sdbnref_	0	923	939
	38	 0x4306250	CHPguard	0	939	955
	39	 0x4306270	nlogicex	0	955	976
	40	 0x4306290	nlogicex	0	976	997
	41	 0x43062b0	nbnotex_	0	997	1009
	42	 0x43062c0	sdbnref_	0	1009	1025
	43	 0x43062e0	nbnotex_	0	1025	1037
	44	 0x43062f0	sdbnref_	0	1037	1053
	45	 0x4306310	sdbnref_	0	1053	1069
	46	 0x4306330	CHPseqnc	0	1069	1089
	47	 0x4306340	CHPsend_	0	1089	1109
	48	 0x4306360	schnnref	0	1109	1125
	49	 0x4802004	cnstpb__	0	1125	1134
	50	 0x4306370	CHPrecv_	0	1134	1154
	51	 0x4306390	schnnref	0	1154	1170
	52	 0x43063a0	sdbnref_	0	1170	1186

In module created from: ./061.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        chan?(bool<>) A
        chan?(bool<>) B
        chan?(bool<>) G
        chan!(bool<>) Z
      )
      In definition "foo", we have: {
        A = chan?(bool<>) A
        B = chan?(bool<>) B
        G = chan?(bool<>) G
        Z = chan!(bool<>) Z
        a = bool<> a
        b = bool<> b
        g = bool<> g
        chp:
        concurrent: {
          *[
            a -> B?(b)
            ~a&b -> G?(g)
            ~a&~b&g -> sequential: {
              Z!(true)
              A?(a)
            }
          ]
        }
      }

}

