
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x4305bd0	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x4305bf0	procdefn	0	53	177
	4	 0x4305c84	chancoll	0	177	215
	5	 0x4305ce0	chaninst	0	215	235
	6	 0x4305d00	bchntprf	0	235	256
	7	 0x4305d20	datatprf	0	256	272
	8	 0x4305d30	datadefn	0	272	325
	9	 0x4305dd4	chancoll	0	325	363
	10	 0x4305e30	chaninst	0	363	383
	11	 0x4305e54	chancoll	0	383	421
	12	 0x4305eb0	chaninst	0	421	441
	13	 0x4305ed4	chancoll	0	441	479
	14	 0x4305f30	chaninst	0	479	499
	15	 0x4305f50	bchntprf	0	499	520
	16	 0x4305f70	datatprf	0	520	536
	17	 0x4305f84	dboolcol	0	536	570
	18	 0x4305fe0	datainst	0	570	590
	19	 0x4306000	datatprf	0	590	606
	20	 0x4306014	dboolcol	0	606	640
	21	 0x4306070	datainst	0	640	660
	22	 0x4306094	dboolcol	0	660	694
	23	 0x43060f0	datainst	0	694	714
	24	 0x4306110	CHPdowhl	0	714	738
	25	 0x4306120	CHPguard	0	738	754
	26	 0x4306140	sdbnref_	0	754	770
	27	 0x4306160	CHPrecv_	0	770	790
	28	 0x4306180	schnnref	0	790	806
	29	 0x4306190	sdbnref_	0	806	822
	30	 0x43061b0	CHPguard	0	822	838
	31	 0x43061d0	nlogicex	0	838	859
	32	 0x43061f0	nbnotex_	0	859	871
	33	 0x4306200	sdbnref_	0	871	887
	34	 0x4306220	sdbnref_	0	887	903
	35	 0x4306240	CHPrecv_	0	903	923
	36	 0x4306260	schnnref	0	923	939
	37	 0x4306270	sdbnref_	0	939	955
	38	 0x4306290	CHPguard	0	955	971
	39	 0x43062b0	nlogicex	0	971	992
	40	 0x43062d0	nlogicex	0	992	1013
	41	 0x43062f0	nbnotex_	0	1013	1025
	42	 0x4306300	sdbnref_	0	1025	1041
	43	 0x4306320	nbnotex_	0	1041	1053
	44	 0x4306330	sdbnref_	0	1053	1069
	45	 0x4306350	sdbnref_	0	1069	1085
	46	 0x4306370	CHPseqnc	0	1085	1105
	47	 0x4306380	CHPsend_	0	1105	1125
	48	 0x43063a0	schnnref	0	1125	1141
	49	 0x4802004	cnstpb__	0	1141	1150
	50	 0x43063b0	CHPrecv_	0	1150	1170
	51	 0x43063d0	schnnref	0	1170	1186
	52	 0x43063e0	sdbnref_	0	1186	1202

In module created from: ./061.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        chan?(bool<>) A
        chan?(bool<>) B
        chan?(bool<>) G
        chan!(bool<>) Z
      )
      In definition "foo", we have: {
        A = chan?(bool<>) A
        B = chan?(bool<>) B
        G = chan?(bool<>) G
        Z = chan!(bool<>) Z
        a = bool<> a
        b = bool<> b
        g = bool<> g
        chp:
        concurrent: {
          *[
            a -> B?(b)
            ~a&b -> G?(g)
            ~a&~b&g -> sequential: {
              Z!(true)
              A?(a)
            }
          ]
        }
      }

}

