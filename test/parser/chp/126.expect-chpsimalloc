Variables: 
bool[1]: "!GND" 
bool[2]: "!Vdd" 
bool[3]: "bar.x" 
bool[4]: "bar.y" 
int[1]: "bar.sel" 
chan[1]: "bar.in[0]" 
chan[2]: "bar.in[1]" 
chan[3]: "bar.in2[0]" 
chan[4]: "bar.in2[1]" 
chan[5]: "bar.out" 
chan[6]: "bar.out2" 

Event graph: 
event[0]: fork: null, #pred: 0, succ: 1 

# process[1]:
event[1]: assign: bar.x := false, pid: 1, #pred: 1, succ: 9 
event[2]: null: null, pid: 1, #pred: 1, succ: 10 
event[3]: send: bar.out!(bar.x), pid: 1, #pred: 1, succ: 4 
channel deps: 5 
event[4]: receive: bar.in[bar.sel]?(bar.x), pid: 1, #pred: 1, succ: 3 
int deps: 1 
channel deps: 1 2 
event[5]: select: [ bar.sel==-1 -> ... [] else -> ... ], pid: 1, #pred: 1, succ: 2 7 
event[6]: send: bar.out2!(bar.y), pid: 1, #pred: 1, succ: 7 
channel deps: 6 
event[7]: receive: bar.in2[bar.sel]?(bar.y), pid: 1, #pred: 1, succ: 6 
int deps: 1 
channel deps: 3 4 
event[8]: fork: , pid: 1, #pred: 1, succ: 4 5 
event[9]: assign: bar.y := false, pid: 1, #pred: 1, succ: 8 
event[10]: join: , pid: 1, #pred: 2, succ: 

