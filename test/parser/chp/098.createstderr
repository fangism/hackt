
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	5	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	10	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	12	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	13	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	18	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	19	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	20	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	21	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	24	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	narithex	0	#HEAD#	#TAIL#	17
	26	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	29	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	33	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	narithex	0	#HEAD#	#TAIL#	17
	35	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	footprnt	0	#HEAD#	#TAIL#	330
	38	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	39	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	40	##ADDR##	footprnt	0	#HEAD#	#TAIL#	284
	41	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
      )
      In definition "foo", we have: {
      Instances:
        w = int<32> foo::w
        x = int<32> foo::x
        y = int<32> foo::y
        z = int<32> foo::z
      unroll sequence: 
        int<32> x
        int<32> y
        int<32> z
        int<32> w
      chp:
        concurrent: {
          *[
            concurrent: {
              sequential: {
                x := y
                y := y+1
              }
              sequential: {
                z := w
                w := w+1
              }
            }
          ]
        }
      footprint: {
        w = int<32>^0 = foo::w (4) 
        x = int<32>^0 = foo::x (1) 
        y = int<32>^0 = foo::y (2) 
        z = int<32>^0 = foo::z (3) 
        Created state:
        int instance pool:
        1	foo::x
        2	foo::y
        3	foo::z
        4	foo::w
        resolved concurrent actions:
          *[
            concurrent: {
              sequential: {
                x := y
                y := y+1
              }
              sequential: {
                z := w
                w := w+1
              }
            }
          ]
      }
      }

  Instances:
    f = foo<> f
}

footprint: {
  f = process foo<>^0 = f (1) 
  Created state:
  process instance pool:
  1	f
}
