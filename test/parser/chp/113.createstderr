
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	24
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	11	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	25	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	26	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	27	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	29	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	30	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	32	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	33	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	36	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	39	##ADDR##	nbnotex_	0	#HEAD#	#TAIL#	12
	40	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	42	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	45	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	footprnt	0	#HEAD#	#TAIL#	266

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    split_bool_soup = process-definition (defined) split_bool_soup(
        chan?(bool<>) A
        chan?(bool<>) B
        chan?(bool<>) G
        chan!(bool<>) Z
      )
      In definition "split_bool_soup", we have: {
      Instances:
        A = chan?(bool<>) split_bool_soup::A
        B = chan?(bool<>) split_bool_soup::B
        G = chan?(bool<>) split_bool_soup::G
        Z = chan!(bool<>) split_bool_soup::Z
        g = bool<> split_bool_soup::g
        x = bool<> split_bool_soup::x
      unroll sequence: 
        ports: (
          chan?(bool<>) A
          chan?(bool<>) B
          chan?(bool<>) G
          chan!(bool<>) Z
        )
        bool<> g
        bool<> x
      chp:
        concurrent: {
          *[
            sequential: {
              G#(g)
              concurrent: {
                G?
                sequential: {
                  deterministic: {
                    g -> A?(x)
                    ~g -> B?(x)
                  }
                  Z!(x)
                }
              }
            }
          ]
        }
      }

}

footprint: {
}
