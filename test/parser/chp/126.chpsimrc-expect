
# process[1]:
event[1]: assign: {
  bar.x := false;
  ...;
  ...
}
event[2]: [null]
event[3]: send: {
  ...;
  ...;
  {
    *[{
      ...;
      bar.out!(bar.x)
    }],
    ...
  }
}
event[4]: receive: {
  ...;
  ...;
  {
    *[{
      bar.in[bar.sel]?(bar.x);
      ...
    }],
    ...
  }
}
event[5]: select: {
  ...;
  ...;
  {
    ...,
    [
      bar.sel==-1 -> skip []
      else -> *[{
        bar.in2[bar.sel]?(bar.y);
        bar.out2!(bar.y)
      }]
    ]
  }
}
event[6]: send: {
  ...;
  ...;
  {
    ...,
    [
      ... -> ... []
      else -> *[{
        ...;
        bar.out2!(bar.y)
      }]
    ]
  }
}
event[7]: receive: {
  ...;
  ...;
  {
    ...,
    [
      ... -> ... []
      else -> *[{
        bar.in2[bar.sel]?(bar.y);
        ...
      }]
    ]
  }
}
event[8]: fork: {
  ...;
  ...;
  {
    *[{
      bar.in[bar.sel]?(bar.x);
      bar.out!(bar.x)
    }],
    [
      bar.sel==-1 -> skip []
      else -> *[{
        bar.in2[bar.sel]?(bar.y);
        bar.out2!(bar.y)
      }]
    ]
  }
}
event[9]: assign: {
  ...;
  bar.y := false;
  ...
}
event[10]: join: {
  ...;
  ...;
  {
    *[{
      bar.in[bar.sel]?(bar.x);
      bar.out!(bar.x)
    }],
    [
      bar.sel==-1 -> skip []
      else -> *[{
        bar.in2[bar.sel]?(bar.y);
        bar.out2!(bar.y)
      }]
    ]
  }
}
