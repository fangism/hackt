WARNING: channel X.b lacks connection to a consumer.
WARNING: channel Y.b lacks connection to a consumer.
WARNING: channel Z.b lacks connection to a consumer.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	44
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	148
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	11	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	12	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	13	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	23	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	25	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	27	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	28	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	footprnt	0	#HEAD#	#TAIL#	355
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	32	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	34	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	footprnt	0	#HEAD#	#TAIL#	355
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	40	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	footprnt	0	#HEAD#	#TAIL#	355
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	46	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	54	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	57	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	59	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	footprnt	0	#HEAD#	#TAIL#	635
	62	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    send_me = process-definition (defined) send_me<
      pint<> B
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<32>) b
      )
      In definition "send_me", we have: {
      Parameters:
        B = pint<> send_me::B
      Instances:
        !GND = bool<> send_me::!GND
        !Vdd = bool<> send_me::!Vdd
        b = chan!(int<32>) send_me::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<32>) b
        )
      chp:
        concurrent: {
          *[
            b!(B)
          ]
        }
      footprint collection: {
        <123> {
          !GND = bool^0 = send_me<123>::!GND (1) 
          !Vdd = bool^0 = send_me<123>::!Vdd (2) 
          B = pint^0 value: 123
          b = channel chan!(int<32>)^0 = send_me<123>::b (1) 
          Created state:
          channel instance pool: (1 ports)
          1	send_me<123>::b	
          bool instance pool: (2 ports)
          1	send_me<123>::!GND	
          2	send_me<123>::!Vdd	
          resolved concurrent actions:
            *[
              b!(123)
            ]
          chp events: {
            event[0]: send: b!(123), #pred: 1, succ: 0 
          }
        }
        <456> {
          !GND = bool^0 = send_me<456>::!GND (1) 
          !Vdd = bool^0 = send_me<456>::!Vdd (2) 
          B = pint^0 value: 456
          b = channel chan!(int<32>)^0 = send_me<456>::b (1) 
          Created state:
          channel instance pool: (1 ports)
          1	send_me<456>::b	
          bool instance pool: (2 ports)
          1	send_me<456>::!GND	
          2	send_me<456>::!Vdd	
          resolved concurrent actions:
            *[
              b!(456)
            ]
          chp events: {
            event[0]: send: b!(456), #pred: 1, succ: 0 
          }
        }
        <789> {
          !GND = bool^0 = send_me<789>::!GND (1) 
          !Vdd = bool^0 = send_me<789>::!Vdd (2) 
          B = pint^0 value: 789
          b = channel chan!(int<32>)^0 = send_me<789>::b (1) 
          Created state:
          channel instance pool: (1 ports)
          1	send_me<789>::b	
          bool instance pool: (2 ports)
          1	send_me<789>::!GND	
          2	send_me<789>::!Vdd	
          resolved concurrent actions:
            *[
              b!(789)
            ]
          chp events: {
            event[0]: send: b!(789), #pred: 1, succ: 0 
          }
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    X = send_me<123> X
    Y = send_me<456> Y
    Z = send_me<789> Z
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  X = process send_me<123>^0 = X (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    b = channel chan!(int<32>)^0 = X.b (1) 
  )
  Y = process send_me<456>^0 = Y (2) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    b = channel chan!(int<32>)^0 = Y.b (2) 
  )
  Z = process send_me<789>^0 = Z (3) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    b = channel chan!(int<32>)^0 = Z.b (3) 
  )
  Created state:
  process instance pool: (0 ports)
  1	X	send_me<123>
    channel: 1
    bool: 1,2
  2	Y	send_me<456>
    channel: 2
    bool: 1,2
  3	Z	send_me<789>
    channel: 3
    bool: 1,2
  channel instance pool: (0 ports)
  1	X.b	
  2	Y.b	
  3	Z.b	
  bool instance pool: (0 ports)
  1	!GND	
  2	!Vdd	
}
