
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x4305900	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x4305870	procdefn	0	53	182
	4	 0x4305924	chancoll	0	182	221
	5	 0x4305980	chaninst	0	221	241
	6	 0x43059a0	bchntprf	0	241	262
	7	 0x43059c0	datatprf	0	262	278
	8	 0x43059d0	datadefn	0	278	330
	9	 0x4305a70	dprmlst_	0	330	346
	10	 0x3716028	cnstpi__	0	346	358
	11	 0x4305a84	chancoll	0	358	397
	12	 0x4305ae0	chaninst	0	397	417
	13	 0x4305b04	chancoll	0	417	455
	14	 0x4305b60	chaninst	0	455	475
	15	 0x4305b80	bchntprf	0	475	496
	16	 0x4305ba0	datatprf	0	496	512
	17	 0x4305bb0	dprmlst_	0	512	528
	18	 0x4305bc4	chancoll	0	528	566
	19	 0x4305c20	chaninst	0	566	586
	20	 0x4305c40	bchntprf	0	586	607
	21	 0x4305c60	datatprf	0	607	623
	22	 0x4305c70	dprmlst_	0	623	639
	23	 0x4305c84	dintcoll	0	639	677
	24	 0x4305ce0	datainst	0	677	697
	25	 0x4305d00	datatprf	0	697	713
	26	 0x4305d10	dprmlst_	0	713	729
	27	 0x4305d24	dintcoll	0	729	767
	28	 0x4305d80	datainst	0	767	787
	29	 0x4305da4	dintcoll	0	787	825
	30	 0x4305e00	datainst	0	825	845
	31	 0x4305e20	CHPseqnc	0	845	865
	32	 0x4305e30	CHPconcr	0	865	885
	33	 0x4305e40	CHPrecv_	0	885	905
	34	 0x4305e60	schnnref	0	905	921
	35	 0x4305e70	sdinref_	0	921	937
	36	 0x4305e90	CHPrecv_	0	937	957
	37	 0x4305eb0	schnnref	0	957	973
	38	 0x4305ec0	sdinref_	0	973	989
	39	 0x4305ee0	CHPsend_	0	989	1009
	40	 0x4305f00	schnnref	0	1009	1025
	41	 0x4305f28	narithex	0	1025	1042
	42	 0x4305f30	sdinref_	0	1042	1058
	43	 0x4305f50	sdinref_	0	1058	1074
	44	 0x4305f70	CHPseqnc	0	1074	1094
	45	 0x4305f80	CHPrecv_	0	1094	1114
	46	 0x4305fa0	schnnref	0	1114	1130
	47	 0x4305fb0	sdinref_	0	1130	1146
	48	 0x4305fd0	CHPsend_	0	1146	1166
	49	 0x4305ff0	schnnref	0	1166	1182
	50	 0x4306000	sdinref_	0	1182	1198

In module created from: ./039.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    sum_diff = process-definition (defined) sum_diff(
        chan?(int<32>) L1
        chan?(int<32>) L2
        chan!(int<32>) R
      )
      In definition "sum_diff", we have: {
        L1 = chan?(int<32>) L1
        L2 = chan?(int<32>) L2
        M = chan(int<32>) M
        R = chan!(int<32>) R
        w = int<32> w
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              L1?(x)
              L2?(z)
            }
            M!(x-z)
          }
          sequential: {
            M?(w)
            R!(w)
          }
        }
      }

}

