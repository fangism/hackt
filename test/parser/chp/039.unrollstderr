
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x4305900	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x4305870	procdefn	0	53	182
	4	 0x4305924	chancoll	0	182	221
	5	 0x4305980	chaninst	0	221	241
	6	 0x43059a0	bchntprf	0	241	262
	7	 0x43059c0	datatprf	0	262	278
	8	 0x43059d0	datadefn	0	278	314
	9	 0x4305a30	dprmlst_	0	314	330
	10	 0x377d028	cnstpi__	0	330	342
	11	 0x4305a44	chancoll	0	342	381
	12	 0x4305aa0	chaninst	0	381	401
	13	 0x4305ac4	chancoll	0	401	439
	14	 0x4305b20	chaninst	0	439	459
	15	 0x4305b40	bchntprf	0	459	480
	16	 0x4305b60	datatprf	0	480	496
	17	 0x4305b70	dprmlst_	0	496	512
	18	 0x4305b84	chancoll	0	512	550
	19	 0x4305be0	chaninst	0	550	570
	20	 0x4305c00	bchntprf	0	570	591
	21	 0x4305c20	datatprf	0	591	607
	22	 0x4305c30	dprmlst_	0	607	623
	23	 0x4305c44	dintcoll	0	623	661
	24	 0x4305ca0	datainst	0	661	681
	25	 0x4305cc0	datatprf	0	681	697
	26	 0x4305cd0	dprmlst_	0	697	713
	27	 0x4305ce4	dintcoll	0	713	751
	28	 0x4305d40	datainst	0	751	771
	29	 0x4305d64	dintcoll	0	771	809
	30	 0x4305dc0	datainst	0	809	829
	31	 0x4305de0	CHPseqnc	0	829	849
	32	 0x4305df0	CHPconcr	0	849	869
	33	 0x4305e00	CHPrecv_	0	869	889
	34	 0x4305e20	schnnref	0	889	905
	35	 0x4305e30	sdinref_	0	905	921
	36	 0x4305e50	CHPrecv_	0	921	941
	37	 0x4305e70	schnnref	0	941	957
	38	 0x4305e80	sdinref_	0	957	973
	39	 0x4305ea0	CHPsend_	0	973	993
	40	 0x4305ec0	schnnref	0	993	1009
	41	 0x4305ee8	narithex	0	1009	1026
	42	 0x4305ef0	sdinref_	0	1026	1042
	43	 0x4305f10	sdinref_	0	1042	1058
	44	 0x4305f30	CHPseqnc	0	1058	1078
	45	 0x4305f40	CHPrecv_	0	1078	1098
	46	 0x4305f60	schnnref	0	1098	1114
	47	 0x4305f70	sdinref_	0	1114	1130
	48	 0x4305f90	CHPsend_	0	1130	1150
	49	 0x4305fb0	schnnref	0	1150	1166
	50	 0x4305fc0	sdinref_	0	1166	1182

In module created from: ./039.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    sum_diff = process-definition (defined) sum_diff(
        chan?(int<32>) L1
        chan?(int<32>) L2
        chan!(int<32>) R
      )
      In definition "sum_diff", we have: {
        L1 = chan?(int<32>) L1
        L2 = chan?(int<32>) L2
        M = chan(int<32>) M
        R = chan!(int<32>) R
        w = int<32> w
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              L1?(x)
              L2?(z)
            }
            M!(x-z)
          }
          sequential: {
            M?(w)
            R!(w)
          }
        }
      }

}

