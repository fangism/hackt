
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3c05b30	module__	0	0	29
	2	 0x3c00144	namespc_	0	29	53
	3	 0x3c05aa0	procdefn	0	53	182
	4	 0x3c05b54	chancoll	0	182	221
	5	 0x3c05bb0	chaninst	0	221	241
	6	 0x3c05bd0	bchntprf	0	241	266
	7	 0x3c05c00	datatprf	0	266	286
	8	 0x3c05c20	datadefn	0	286	338
	9	 0x3c05cc0	dprmlst_	0	338	354
	10	 0x39f2028	cnstpi__	0	354	366
	11	 0x3c05cd4	chancoll	0	366	405
	12	 0x3c05d30	chaninst	0	405	425
	13	 0x3c05d54	chancoll	0	425	463
	14	 0x3c05db0	chaninst	0	463	483
	15	 0x3c05dd0	bchntprf	0	483	508
	16	 0x3c05e00	datatprf	0	508	528
	17	 0x3c05e20	dprmlst_	0	528	544
	18	 0x3c05e34	chancoll	0	544	582
	19	 0x3c05e90	chaninst	0	582	602
	20	 0x3c05eb0	bchntprf	0	602	627
	21	 0x3c05ee0	datatprf	0	627	647
	22	 0x3c05f00	dprmlst_	0	647	663
	23	 0x3c05f14	dintcoll	0	663	701
	24	 0x3c05f70	datainst	0	701	725
	25	 0x3c05f90	datatprf	0	725	745
	26	 0x3c05fb0	dprmlst_	0	745	761
	27	 0x3c05fc4	dintcoll	0	761	799
	28	 0x3c06020	datainst	0	799	823
	29	 0x3c06044	dintcoll	0	823	861
	30	 0x3c060a0	datainst	0	861	885
	31	 0x3c060c0	CHPseqnc	0	885	905
	32	 0x3c060d0	CHPconcr	0	905	925
	33	 0x3c060e0	CHPrecv_	0	925	945
	34	 0x3c06100	schnnref	0	945	961
	35	 0x3c06110	sdinref_	0	961	977
	36	 0x3c06130	CHPrecv_	0	977	997
	37	 0x3c06150	schnnref	0	997	1013
	38	 0x3c06160	sdinref_	0	1013	1029
	39	 0x3c06180	CHPsend_	0	1029	1049
	40	 0x3c061a0	schnnref	0	1049	1065
	41	 0x3c061c8	narithex	0	1065	1082
	42	 0x3c061d0	sdinref_	0	1082	1098
	43	 0x3c061f0	sdinref_	0	1098	1114
	44	 0x3c06210	CHPseqnc	0	1114	1134
	45	 0x3c06220	CHPrecv_	0	1134	1154
	46	 0x3c06240	schnnref	0	1154	1170
	47	 0x3c06250	sdinref_	0	1170	1186
	48	 0x3c06270	CHPsend_	0	1186	1206
	49	 0x3c06290	schnnref	0	1206	1222
	50	 0x3c062a0	sdinref_	0	1222	1238

In module created from: ./039.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    sum_diff = process-definition (defined) sum_diff(
        chan?(int<32>) L1
        chan?(int<32>) L2
        chan!(int<32>) R
      )
      In definition "sum_diff", we have: {
        L1 = chan?(int<32>) L1
        L2 = chan?(int<32>) L2
        M = chan(int<32>) M
        R = chan!(int<32>) R
        w = int<32> w
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              L1?(x)
              L2?(z)
            }
            M!(x-z)
          }
          sequential: {
            M?(w)
            R!(w)
          }
        }
      }

}

