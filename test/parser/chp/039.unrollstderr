
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3d05b30	module__	0	0	29
	2	 0x3d00144	namespc_	0	29	53
	3	 0x3d05aa0	procdefn	0	53	182
	4	 0x3d05b54	chancoll	0	182	225
	5	 0x3d05bb0	chaninst	0	225	245
	6	 0x3d05bd0	bchntprf	0	245	270
	7	 0x3d05c00	datatprf	0	270	290
	8	 0x3d05c20	datadefn	0	290	342
	9	 0x3d05cc0	dprmlst_	0	342	358
	10	 0x3aa5028	cnstpi__	0	358	370
	11	 0x3d05cd4	chancoll	0	370	413
	12	 0x3d05d30	chaninst	0	413	433
	13	 0x3d05d54	chancoll	0	433	475
	14	 0x3d05db0	chaninst	0	475	495
	15	 0x3d05dd0	bchntprf	0	495	520
	16	 0x3d05e00	datatprf	0	520	540
	17	 0x3d05e20	dprmlst_	0	540	556
	18	 0x3d05e34	chancoll	0	556	598
	19	 0x3d05e90	chaninst	0	598	618
	20	 0x3d05eb0	bchntprf	0	618	643
	21	 0x3d05ee0	datatprf	0	643	663
	22	 0x3d05f00	dprmlst_	0	663	679
	23	 0x3d05f14	dintcoll	0	679	717
	24	 0x3d05f70	datainst	0	717	741
	25	 0x3d05f90	datatprf	0	741	761
	26	 0x3d05fb0	dprmlst_	0	761	777
	27	 0x3d05fc4	dintcoll	0	777	815
	28	 0x3d06020	datainst	0	815	839
	29	 0x3d06044	dintcoll	0	839	877
	30	 0x3d060a0	datainst	0	877	901
	31	 0x3d060c0	CHPseqnc	0	901	921
	32	 0x3d060d0	CHPconcr	0	921	941
	33	 0x3d060e0	CHPrecv_	0	941	961
	34	 0x3d06100	schnnref	0	961	977
	35	 0x3d06110	sdinref_	0	977	993
	36	 0x3d06130	CHPrecv_	0	993	1013
	37	 0x3d06150	schnnref	0	1013	1029
	38	 0x3d06160	sdinref_	0	1029	1045
	39	 0x3d06180	CHPsend_	0	1045	1065
	40	 0x3d061a0	schnnref	0	1065	1081
	41	 0x3d061c8	narithex	0	1081	1098
	42	 0x3d061d0	sdinref_	0	1098	1114
	43	 0x3d061f0	sdinref_	0	1114	1130
	44	 0x3d06210	CHPseqnc	0	1130	1150
	45	 0x3d06220	CHPrecv_	0	1150	1170
	46	 0x3d06240	schnnref	0	1170	1186
	47	 0x3d06250	sdinref_	0	1186	1202
	48	 0x3d06270	CHPsend_	0	1202	1222
	49	 0x3d06290	schnnref	0	1222	1238
	50	 0x3d062a0	sdinref_	0	1238	1254

In module created from: ./039.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    sum_diff = process-definition (defined) sum_diff(
        chan?(int<32>) L1
        chan?(int<32>) L2
        chan!(int<32>) R
      )
      In definition "sum_diff", we have: {
        L1 = chan?(int<32>) L1
        L2 = chan?(int<32>) L2
        M = chan(int<32>) M
        R = chan!(int<32>) R
        w = int<32> w
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              L1?(x)
              L2?(z)
            }
            M!(x-z)
          }
          sequential: {
            M?(w)
            R!(w)
          }
        }
      }

}

