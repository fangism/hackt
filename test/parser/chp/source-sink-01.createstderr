
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	30	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	32	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	footprnt	0	#HEAD#	#TAIL#	355
	35	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	21
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	37	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	38	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	40	##ADDR##	procdefn	0	#HEAD#	#TAIL#	144
	41	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	42	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	43	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	44	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	45	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	46	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	47	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	49	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	62	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	63	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	footprnt	0	#HEAD#	#TAIL#	346
	66	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	67	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	68	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	70	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	71	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	72	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	73	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	74	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	75	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	76	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	80	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	85	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	86	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	88	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	89	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	90	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	94	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	95	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	footprnt	0	#HEAD#	#TAIL#	565
	98	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  2 definitions
  0 typedefs
  Definitions:
    chp_bool_sink = process-definition (defined) chp_bool_sink(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) S
      )
      In definition "chp_bool_sink", we have: {
      Instances:
        !GND = bool<> chp_bool_sink::!GND
        !Vdd = bool<> chp_bool_sink::!Vdd
        S = chan?(bool<>) chp_bool_sink::S
        x = bool<> chp_bool_sink::x
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> x
      chp:
        concurrent: {
          *[
            S?(x)
          ]
        }
      footprint: {
        !GND = bool^0 = chp_bool_sink<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = chp_bool_sink<>::!Vdd (2) @[ supply_high port-alias ] 
        S = channel chan?(bool<>)^0 = chp_bool_sink<>::S (1) @[ port! chp? meta? ] 
        x = bool^0 = chp_bool_sink<>::x (3) 
        Created state:
        channel instance pool: (1 ports, 0 local, 0 mapped)
        1	chp_bool_sink<>::S @[ port! chp? meta? ]	
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	chp_bool_sink<>::!GND @[ supply_low port-alias ]	
        2	chp_bool_sink<>::!Vdd @[ supply_high port-alias ]	
        3	chp_bool_sink<>::x	
        resolved concurrent actions:
          *[
            S?(x)
          ]
        chp events: {
          event[0]: receive: S?(x), #pred: 1, succ: 0 
        }
      }
      }

    chp_bool_source = process-definition (defined) chp_bool_source<
      pbool<> B
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "chp_bool_source", we have: {
      Parameters:
        B = pbool<> chp_bool_source::B
      Instances:
        !GND = bool<> chp_bool_source::!GND
        !Vdd = bool<> chp_bool_source::!Vdd
        S = chan!(bool<>) chp_bool_source::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            S!(B)
          ]
        }
      footprint collection: {
        <true> {
          !GND = bool^0 = chp_bool_source<true>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = chp_bool_source<true>::!Vdd (2) @[ supply_high port-alias ] 
          B = pbool^0 value: 1
          S = channel chan!(bool<>)^0 = chp_bool_source<true>::S (1) @[ chp! meta! port? ] 
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	chp_bool_source<true>::S @[ chp! meta! port? ]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	chp_bool_source<true>::!GND @[ supply_low port-alias ]	
          2	chp_bool_source<true>::!Vdd @[ supply_high port-alias ]	
          resolved concurrent actions:
            *[
              S!(true)
            ]
          chp events: {
            event[0]: send: S!(true), #pred: 1, succ: 0 
          }
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    B = chan(bool<>) B
    b = chp_bool_sink<> b
    s = chp_bool_source<true> s
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  B = channel chan(bool<>)^0 = B (1) @[ sub! chp! meta! sub? chp? meta? ] 
  b = process chp_bool_sink<>^0 = b (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan?(bool<>)^0 = B (1) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  s = process chp_bool_source<true>^0 = s (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(bool<>)^0 = B (1) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	s	chp_bool_source<true>
    channel: 1
    bool: 1,2
  2	b	chp_bool_sink<>
    channel: 1
    bool: 1,2
  channel instance pool: (0 ports, 1 local, 0 mapped)
  1	B @[ sub! chp! meta! sub? chp? meta? ]	
  bool instance pool: (0 ports, 2 local, 1 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (2 -> 0)
    (3 -> 1)
}
