WARNING: channel M.L lacks connection to a producer.
WARNING: channel M.R lacks connection to a consumer.
Warnings found (2) while creating complete type <top-level>.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	153
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	27	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	36	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	41	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	42	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	44	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	45	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	48	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	49	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	CHPlopsl	0	#HEAD#	#TAIL#	25
	51	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	52	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	54	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	55	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	58	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	61	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	62	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1138
	63	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	21
	64	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	21
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	68	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	70	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	71	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	72	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	73	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	80
	74	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	75	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	78	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	81	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	82	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	85	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	89	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	92	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	93	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	96	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	99	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	100	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	101	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	102	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	103	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	106	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	107	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	110	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	111	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	112	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	113	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	114	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	115	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	116	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	117	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	118	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	119	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	120	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	121	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	122	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	123	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	124	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	125	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	126	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	127	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	128	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	129	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	130	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	131	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	132	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	133	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	134	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	135	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	136	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	137	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	138	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	139	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	140	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	141	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	142	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	143	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	144	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	145	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	146	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	147	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	148	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	150	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	151	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	152	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	153	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	154	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	155	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	156	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	159	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	160	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	161	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	162	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	163	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	164	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	165	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	166	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	167	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	168	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	169	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	170	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	171	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	172	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	173	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	174	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	175	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	176	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	177	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	178	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	179	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	180	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	181	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	182	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	183	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	184	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	185	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	186	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	187	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	188	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	189	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	190	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	191	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	192	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	193	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	194	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	195	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	196	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	197	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	198	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	199	##ADDR##	footprnt	0	#HEAD#	#TAIL#	449
	200	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    metalooptest = process-definition (defined) metalooptest(
        bool<> !GND
        bool<> !Vdd
        chan?(int<4>) L
        chan!(bool<>) R
      )
      In definition "metalooptest", we have: {
      Instances:
        !GND = bool<> metalooptest::!GND
        !Vdd = bool<> metalooptest::!Vdd
        L = chan?(int<4>) metalooptest::L
        R = chan!(bool<>) metalooptest::R
        b = bool<> metalooptest::b^1
        l = int<4> metalooptest::l
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(int<4>) L
          chan!(bool<>) R
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        int<4> l
        bool<> b[0..15]
      chp:
        concurrent: {
          *[
            sequential: {
              L#(l)
              concurrent: {
                L?
                deterministic i:[0..15]: {
                  l==$i -> R!(b[$i])
                }
              }
            }
          ]
        }
      footprint: {
        !GND = bool^0 = metalooptest<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = metalooptest<>::!Vdd (2) @[ supply_high port-alias ] 
        L = channel chan?(int<4>)^0 = metalooptest<>::L (1) @[ port! chp? meta? ] 
        R = channel chan!(bool<>)^0 = metalooptest<>::R (2) @[ chp! meta! port? ] 
        b = bool^1
          {
            [0] = metalooptest<>::b[0] (3) 
            [1] = metalooptest<>::b[1] (4) 
            [2] = metalooptest<>::b[2] (5) 
            [3] = metalooptest<>::b[3] (6) 
            [4] = metalooptest<>::b[4] (7) 
            [5] = metalooptest<>::b[5] (8) 
            [6] = metalooptest<>::b[6] (9) 
            [7] = metalooptest<>::b[7] (10) 
            [8] = metalooptest<>::b[8] (11) 
            [9] = metalooptest<>::b[9] (12) 
            [10] = metalooptest<>::b[10] (13) 
            [11] = metalooptest<>::b[11] (14) 
            [12] = metalooptest<>::b[12] (15) 
            [13] = metalooptest<>::b[13] (16) 
            [14] = metalooptest<>::b[14] (17) 
            [15] = metalooptest<>::b[15] (18) 
          }
        l = int<4>^0 = metalooptest<>::l (1) 
        Created state:
        channel instance pool: (2 ports, 0 local, 0 mapped)
        1	metalooptest<>::L @[ port! chp? meta? ]	
        2	metalooptest<>::R @[ chp! meta! port? ]	
        int instance pool: (0 ports, 1 local, 0 mapped)
        1	metalooptest<>::l	
        bool instance pool: (2 ports, 16 local, 0 mapped)
        1	metalooptest<>::!GND @[ supply_low port-alias ]	
        2	metalooptest<>::!Vdd @[ supply_high port-alias ]	
        3	metalooptest<>::b[0]	
        4	metalooptest<>::b[1]	
        5	metalooptest<>::b[2]	
        6	metalooptest<>::b[3]	
        7	metalooptest<>::b[4]	
        8	metalooptest<>::b[5]	
        9	metalooptest<>::b[6]	
        10	metalooptest<>::b[7]	
        11	metalooptest<>::b[8]	
        12	metalooptest<>::b[9]	
        13	metalooptest<>::b[10]	
        14	metalooptest<>::b[11]	
        15	metalooptest<>::b[12]	
        16	metalooptest<>::b[13]	
        17	metalooptest<>::b[14]	
        18	metalooptest<>::b[15]	
        resolved concurrent actions:
          *[
            sequential: {
              L#(l)
              concurrent: {
                L?
                deterministic: {
                  l==0 -> R!(b[0])
                  l==1 -> R!(b[1])
                  l==2 -> R!(b[2])
                  l==3 -> R!(b[3])
                  l==4 -> R!(b[4])
                  l==5 -> R!(b[5])
                  l==6 -> R!(b[6])
                  l==7 -> R!(b[7])
                  l==8 -> R!(b[8])
                  l==9 -> R!(b[9])
                  l==10 -> R!(b[10])
                  l==11 -> R!(b[11])
                  l==12 -> R!(b[12])
                  l==13 -> R!(b[13])
                  l==14 -> R!(b[14])
                  l==15 -> R!(b[15])
                }
              }
            }
          ]
        chp events: {
          event[0]: peek: L#(l), #pred: 1, succ: 21 
          event[1]: join: , #pred: 2, succ: 0 
          event[2]: receive: L?, #pred: 1, succ: 1 
          event[3]: null: null, #pred: 1, succ: 1 
          event[4]: send: R!(b[0]), #pred: 1, succ: 3 
          event[5]: send: R!(b[1]), #pred: 1, succ: 3 
          event[6]: send: R!(b[2]), #pred: 1, succ: 3 
          event[7]: send: R!(b[3]), #pred: 1, succ: 3 
          event[8]: send: R!(b[4]), #pred: 1, succ: 3 
          event[9]: send: R!(b[5]), #pred: 1, succ: 3 
          event[10]: send: R!(b[6]), #pred: 1, succ: 3 
          event[11]: send: R!(b[7]), #pred: 1, succ: 3 
          event[12]: send: R!(b[8]), #pred: 1, succ: 3 
          event[13]: send: R!(b[9]), #pred: 1, succ: 3 
          event[14]: send: R!(b[10]), #pred: 1, succ: 3 
          event[15]: send: R!(b[11]), #pred: 1, succ: 3 
          event[16]: send: R!(b[12]), #pred: 1, succ: 3 
          event[17]: send: R!(b[13]), #pred: 1, succ: 3 
          event[18]: send: R!(b[14]), #pred: 1, succ: 3 
          event[19]: send: R!(b[15]), #pred: 1, succ: 3 
          event[20]: select: [ l==0 -> ... [] l==1 -> ... [] l==2 -> ... [] l==3 -> ... [] l==4 -> ... [] l==5 -> ... [] l==6 -> ... [] l==7 -> ... [] l==8 -> ... [] l==9 -> ... [] l==10 -> ... [] l==11 -> ... [] l==12 -> ... [] l==13 -> ... [] l==14 -> ... [] l==15 -> ... ], #pred: 1, succ: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
          event[21]: fork: , #pred: 1, succ: 2 20 
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    M = metalooptest<> M
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  M = process metalooptest<>^0 = M (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    L = channel chan?(int<4>)^0 = M.L (1) @[ sub? chp? meta? ] 
    R = channel chan!(bool<>)^0 = M.R (2) @[ sub! chp! meta! ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	M	metalooptest<>
    channel: 1,2
    bool: 1,2
  channel instance pool: (0 ports, 2 local, 0 mapped)
  1	M.L @[ sub? chp? meta? ]	
  2	M.R @[ sub! chp! meta! ]	
  private sub-int index map:
    (1 -> 0)
    (2 -> 1)
  bool instance pool: (0 ports, 2 local, 16 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 16)
}
