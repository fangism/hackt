WARNING: channel M.L lacks connection to a producer.
WARNING: channel M.R lacks connection to a consumer.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	10	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	11	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	13	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	26	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	28	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	29	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	32	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	33	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	CHPlopsl	0	#HEAD#	#TAIL#	25
	35	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	36	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	38	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	39	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	42	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	45	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	46	##ADDR##	footprnt	0	#HEAD#	#TAIL#	614
	47	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	48	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	50	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	51	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	53	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	54	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	80
	55	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	56	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	59	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	63	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	66	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	67	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	69	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	70	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	73	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	75	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	76	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	77	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	80	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	84	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	87	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	88	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	89	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	90	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	91	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	94	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	98	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	101	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	102	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	103	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	104	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	105	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	108	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	109	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	110	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	111	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	112	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	114	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	115	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	116	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	117	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	118	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	119	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	120	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	121	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	122	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	123	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	124	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	125	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	126	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	127	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	128	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	129	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	133	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	136	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	137	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	140	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	143	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	144	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	145	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	146	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	147	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	148	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	149	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	150	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	151	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	152	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	153	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	154	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	155	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	156	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	157	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	158	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	159	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	160	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	161	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	162	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	163	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	164	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	165	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	166	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	167	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	168	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	169	##ADDR##	footprnt	0	#HEAD#	#TAIL#	338
	170	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    metalooptest = process-definition (defined) metalooptest(
        chan?(int<4>) L
        chan!(bool<>) R
      )
      In definition "metalooptest", we have: {
      Instances:
        L = chan?(int<4>) metalooptest::L
        R = chan!(bool<>) metalooptest::R
        b = bool<> metalooptest::b^1
        l = int<4> metalooptest::l
      unroll sequence: 
        chan?(int<4>) L
        chan!(bool<>) R
        int<4> l
        bool<> b[0..15]
      chp:
        concurrent: {
          *[
            sequential: {
              L#(l)
              concurrent: {
                L?
                deterministic i:[0..15]: {
                  l==$i -> R!(b[$i])
                }
              }
            }
          ]
        }
      footprint: {
        L = channel chan?(int<4>)^0 = metalooptest::L (1) 
        R = channel chan!(bool<>)^0 = metalooptest::R (2) 
        b = bool^1
          {
            [0] = metalooptest::b[0] (1) 
            [1] = metalooptest::b[1] (2) 
            [2] = metalooptest::b[2] (3) 
            [3] = metalooptest::b[3] (4) 
            [4] = metalooptest::b[4] (5) 
            [5] = metalooptest::b[5] (6) 
            [6] = metalooptest::b[6] (7) 
            [7] = metalooptest::b[7] (8) 
            [8] = metalooptest::b[8] (9) 
            [9] = metalooptest::b[9] (10) 
            [10] = metalooptest::b[10] (11) 
            [11] = metalooptest::b[11] (12) 
            [12] = metalooptest::b[12] (13) 
            [13] = metalooptest::b[13] (14) 
            [14] = metalooptest::b[14] (15) 
            [15] = metalooptest::b[15] (16) 
          }
        l = int<4>^0 = metalooptest::l (1) 
        Created state:
        channel instance pool:
        1	metalooptest::L
        2	metalooptest::R
        int instance pool:
        1	metalooptest::l
        bool instance pool:
        1	metalooptest::b[0]
        2	metalooptest::b[1]
        3	metalooptest::b[2]
        4	metalooptest::b[3]
        5	metalooptest::b[4]
        6	metalooptest::b[5]
        7	metalooptest::b[6]
        8	metalooptest::b[7]
        9	metalooptest::b[8]
        10	metalooptest::b[9]
        11	metalooptest::b[10]
        12	metalooptest::b[11]
        13	metalooptest::b[12]
        14	metalooptest::b[13]
        15	metalooptest::b[14]
        16	metalooptest::b[15]
        resolved concurrent actions:
          *[
            sequential: {
              L#(l)
              concurrent: {
                L?
                deterministic: {
                  l==0 -> R!(b[0])
                  l==1 -> R!(b[1])
                  l==2 -> R!(b[2])
                  l==3 -> R!(b[3])
                  l==4 -> R!(b[4])
                  l==5 -> R!(b[5])
                  l==6 -> R!(b[6])
                  l==7 -> R!(b[7])
                  l==8 -> R!(b[8])
                  l==9 -> R!(b[9])
                  l==10 -> R!(b[10])
                  l==11 -> R!(b[11])
                  l==12 -> R!(b[12])
                  l==13 -> R!(b[13])
                  l==14 -> R!(b[14])
                  l==15 -> R!(b[15])
                }
              }
            }
          ]
      }
      }

  Instances:
    M = metalooptest<> M
}

footprint: {
  M = process metalooptest<>^0 = M (1) (
    L = channel chan?(int<4>)^0 = M.L (1) 
    R = channel chan!(bool<>)^0 = M.R (2) 
  )
  Created state:
  process instance pool:
  1	M
  channel instance pool:
  1	M.L
  2	M.R
}
