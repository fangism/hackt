
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3c056c0	module__	0	0	29
	2	 0x3c00144	namespc_	0	29	53
	3	 0x3c056e0	procdefn	0	53	150
	4	 0x3c05774	chancoll	0	150	188
	5	 0x3c057d0	chaninst	0	188	208
	6	 0x3c057f0	bchntprf	0	208	233
	7	 0x3c05820	datatprf	0	233	253
	8	 0x3c05840	datadefn	0	253	305
	9	 0x3c058e0	dprmlst_	0	305	321
	10	 0x39f2028	cnstpi__	0	321	333
	11	 0x3c058f4	chancoll	0	333	371
	12	 0x3c05950	chaninst	0	371	391
	13	 0x3c05970	bchntprf	0	391	416
	14	 0x3c059a0	datatprf	0	416	436
	15	 0x3c059c0	dprmlst_	0	436	452
	16	 0x3c059d4	dintcoll	0	452	490
	17	 0x3c05a30	datainst	0	490	514
	18	 0x3c05a50	datatprf	0	514	534
	19	 0x3c05a70	dprmlst_	0	534	550
	20	 0x3c05a84	dintcoll	0	550	588
	21	 0x3c05ae0	datainst	0	588	612
	22	 0x3c05b00	CHPconcr	0	612	644
	23	 0x3c05b10	CHPsend_	0	644	664
	24	 0x3c05b30	schnnref	0	664	680
	25	 0x3c05b58	narithex	0	680	697
	26	 0x3c05b60	sdinref_	0	697	713
	27	 0x3c05b80	sdinref_	0	713	729
	28	 0x3c05ba0	CHPsend_	0	729	749
	29	 0x3c05bc0	schnnref	0	749	765
	30	 0x3c05be8	narithex	0	765	782
	31	 0x3c05bf0	sdinref_	0	782	798
	32	 0x3c05c10	sdinref_	0	798	814
	33	 0x3c05c30	CHPsend_	0	814	834
	34	 0x3c05c50	schnnref	0	834	850
	35	 0x3c05c78	narithex	0	850	867
	36	 0x3c05c80	sdinref_	0	867	883
	37	 0x3c05ca0	sdinref_	0	883	899
	38	 0x3c05cc0	CHPsend_	0	899	919
	39	 0x3c05ce0	schnnref	0	919	935
	40	 0x3c05d08	narithex	0	935	952
	41	 0x3c05d10	sdinref_	0	952	968
	42	 0x3c05d30	sdinref_	0	968	984
	43	 0x3c05d50	CHPsend_	0	984	1004
	44	 0x3c05d70	schnnref	0	1004	1020
	45	 0x3c05d98	narithex	0	1020	1037
	46	 0x3c05da0	sdinref_	0	1037	1053
	47	 0x3c05dc0	sdinref_	0	1053	1069

In module created from: ./027.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    one_shot = process-definition (defined) one_shot(
        chan?(int<32>) L
        chan!(int<32>) R
      )
      In definition "one_shot", we have: {
        L = chan?(int<32>) L
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          concurrent: {
            R!(x+z)
            R!(x-z)
            R!(x*z)
            R!(x/z)
            R!(x%z)
          }
        }
      }

}

