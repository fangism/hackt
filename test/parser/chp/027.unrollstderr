
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x3d056c0	module__	0	0	29
	2	 0x3d00144	namespc_	0	29	53
	3	 0x3d056e0	procdefn	0	53	150
	4	 0x3d05774	chancoll	0	150	192
	5	 0x3d057d0	chaninst	0	192	212
	6	 0x3d057f0	bchntprf	0	212	237
	7	 0x3d05820	datatprf	0	237	257
	8	 0x3d05840	datadefn	0	257	309
	9	 0x3d058e0	dprmlst_	0	309	325
	10	 0x3aa5028	cnstpi__	0	325	337
	11	 0x3d058f4	chancoll	0	337	379
	12	 0x3d05950	chaninst	0	379	399
	13	 0x3d05970	bchntprf	0	399	424
	14	 0x3d059a0	datatprf	0	424	444
	15	 0x3d059c0	dprmlst_	0	444	460
	16	 0x3d059d4	dintcoll	0	460	498
	17	 0x3d05a30	datainst	0	498	522
	18	 0x3d05a50	datatprf	0	522	542
	19	 0x3d05a70	dprmlst_	0	542	558
	20	 0x3d05a84	dintcoll	0	558	596
	21	 0x3d05ae0	datainst	0	596	620
	22	 0x3d05b00	CHPconcr	0	620	652
	23	 0x3d05b10	CHPsend_	0	652	672
	24	 0x3d05b30	schnnref	0	672	688
	25	 0x3d05b58	narithex	0	688	705
	26	 0x3d05b60	sdinref_	0	705	721
	27	 0x3d05b80	sdinref_	0	721	737
	28	 0x3d05ba0	CHPsend_	0	737	757
	29	 0x3d05bc0	schnnref	0	757	773
	30	 0x3d05be8	narithex	0	773	790
	31	 0x3d05bf0	sdinref_	0	790	806
	32	 0x3d05c10	sdinref_	0	806	822
	33	 0x3d05c30	CHPsend_	0	822	842
	34	 0x3d05c50	schnnref	0	842	858
	35	 0x3d05c78	narithex	0	858	875
	36	 0x3d05c80	sdinref_	0	875	891
	37	 0x3d05ca0	sdinref_	0	891	907
	38	 0x3d05cc0	CHPsend_	0	907	927
	39	 0x3d05ce0	schnnref	0	927	943
	40	 0x3d05d08	narithex	0	943	960
	41	 0x3d05d10	sdinref_	0	960	976
	42	 0x3d05d30	sdinref_	0	976	992
	43	 0x3d05d50	CHPsend_	0	992	1012
	44	 0x3d05d70	schnnref	0	1012	1028
	45	 0x3d05d98	narithex	0	1028	1045
	46	 0x3d05da0	sdinref_	0	1045	1061
	47	 0x3d05dc0	sdinref_	0	1061	1077

In module created from: ./027.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    one_shot = process-definition (defined) one_shot(
        chan?(int<32>) L
        chan!(int<32>) R
      )
      In definition "one_shot", we have: {
        L = chan?(int<32>) L
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          concurrent: {
            R!(x+z)
            R!(x-z)
            R!(x*z)
            R!(x/z)
            R!(x%z)
          }
        }
      }

}

