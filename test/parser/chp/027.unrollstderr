
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail
	0	         0	________	0	0	0
	1	 0x4305600	module__	0	0	29
	2	 0x4300144	namespc_	0	29	53
	3	 0x4305620	procdefn	0	53	150
	4	 0x43056b4	chancoll	0	150	188
	5	 0x4305710	chaninst	0	188	208
	6	 0x4305730	bchntprf	0	208	229
	7	 0x4305750	datatprf	0	229	245
	8	 0x4305760	datadefn	0	245	281
	9	 0x43057c0	dprmlst_	0	281	297
	10	 0x377d028	cnstpi__	0	297	309
	11	 0x43057d4	chancoll	0	309	347
	12	 0x4305830	chaninst	0	347	367
	13	 0x4305850	bchntprf	0	367	388
	14	 0x4305870	datatprf	0	388	404
	15	 0x4305880	dprmlst_	0	404	420
	16	 0x4305894	dintcoll	0	420	458
	17	 0x43058f0	datainst	0	458	478
	18	 0x4305910	datatprf	0	478	494
	19	 0x4305920	dprmlst_	0	494	510
	20	 0x4305934	dintcoll	0	510	548
	21	 0x4305990	datainst	0	548	568
	22	 0x43059b0	CHPseqnc	0	568	584
	23	 0x43059c0	CHPconcr	0	584	616
	24	 0x43059d0	CHPsend_	0	616	636
	25	 0x43059f0	schnnref	0	636	652
	26	 0x4305a18	narithex	0	652	669
	27	 0x4305a20	sdinref_	0	669	685
	28	 0x4305a40	sdinref_	0	685	701
	29	 0x4305a60	CHPsend_	0	701	721
	30	 0x4305a80	schnnref	0	721	737
	31	 0x4305aa8	narithex	0	737	754
	32	 0x4305ab0	sdinref_	0	754	770
	33	 0x4305ad0	sdinref_	0	770	786
	34	 0x4305af0	CHPsend_	0	786	806
	35	 0x4305b10	schnnref	0	806	822
	36	 0x4305b38	narithex	0	822	839
	37	 0x4305b40	sdinref_	0	839	855
	38	 0x4305b60	sdinref_	0	855	871
	39	 0x4305b80	CHPsend_	0	871	891
	40	 0x4305ba0	schnnref	0	891	907
	41	 0x4305bc8	narithex	0	907	924
	42	 0x4305bd0	sdinref_	0	924	940
	43	 0x4305bf0	sdinref_	0	940	956
	44	 0x4305c10	CHPsend_	0	956	976
	45	 0x4305c30	schnnref	0	976	992
	46	 0x4305c58	narithex	0	992	1009
	47	 0x4305c60	sdinref_	0	1009	1025
	48	 0x4305c80	sdinref_	0	1025	1041

In module created from: ./027.in (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    one_shot = process-definition (defined) one_shot(
        chan?(int<32>) L
        chan!(int<32>) R
      )
      In definition "one_shot", we have: {
        L = chan?(int<32>) L
        R = chan!(int<32>) R
        x = int<32> x
        z = int<32> z
        chp:
        concurrent: {
          sequential: {
            concurrent: {
              R!(x+z)
              R!(x-z)
              R!(x*z)
              R!(x/z)
              R!(x%z)
            }
          }
        }
      }

}

