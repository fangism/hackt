
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	46
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	260
	5	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	6	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	7	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	9	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	10	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	11	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	13	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	15	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	18	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	19	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	16
	20	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	21	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	16
	23	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	26	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	27	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	28	##ADDR##	dintcoll	0	#HEAD#	#TAIL#	34
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  1 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
      )
      In definition "foo", we have: {
      Instances:
        w = int<32> w
        x = int<32> x
        y = int<32> y
        z = int<32> z
      unroll sequence: 
        int<32> x
        int<32> y
        int<32> z
        int<32> w
      chp:
        concurrent: {
          *[
            concurrent: {
              x := y
              z := w
            }
          ]
        }
      footprint: {
        int<32>^0 w (instantiated) = ::foo::w (1) 
        int<32>^0 x (instantiated) = ::foo::x (2) 
        int<32>^0 y (instantiated) = ::foo::y (3) 
        int<32>^0 z (instantiated) = ::foo::z (4) 
        int instance pool:
        1	::foo::w
        2	::foo::x
        3	::foo::y
        4	::foo::z
        resolved concurrent actions:
          *[
            concurrent: {
              x := y
              z := w
            }
          ]
      }
      }

  Instances:
    f = process foo<>^0 f (instantiated) = ::f (1) 
}

Created state:
process instance pool:
1	::f

