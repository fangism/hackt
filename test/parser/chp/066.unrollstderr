
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	24
	3	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	11	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	60
	14	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	chaninst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	27	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	28	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	31	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	20
	32	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	20
	33	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	20
	36	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	37	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	22
	38	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	41	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	44	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  0 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    metalooptest = process-definition (defined) metalooptest(
        chan?(int<4>) L
        chan!(bool<>) R
      )
      In definition "metalooptest", we have: {
      Parameters:
        p = pint<> metalooptest::p
      Instances:
        L = chan?(int<4>) metalooptest::L
        R = chan!(bool<>) metalooptest::R
        b = bool<> metalooptest::b^1
        l = int<4> metalooptest::l
      unroll sequence: 
        chan?(int<4>) L
        chan!(bool<>) R
        int<4> l
        bool<> b[0..15]
        pint<> p
        p = 13;
      chp:
        concurrent: {
          *[
            sequential: {
              L?(l)
              deterministic: {
                l==p -> R!(b[p])
                else -> skip
              }
            }
          ]
        }
      }

}

footprint: {
}
