
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	72
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	1570
	5	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	29
	6	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	7	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	8	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	9	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	10	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	11	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	12	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	16	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	17	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	21	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	22	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	16
	23	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	26	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	34
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	39
	31	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	32	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	34
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	39
	38	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	39	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	40	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	35
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	44
	45	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	46	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	47	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	35
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	44
	52	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	53	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	54	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	55	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	35
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	44
	59	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	60	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	61	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	38
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	66	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	67	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	68	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	38
	71	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	72	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	73	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	74	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	75	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	38
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	80	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	81	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	82	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	38
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	87	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	88	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	89	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	38
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	94	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	95	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	96	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	38
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	101	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	102	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	103	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	104	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	105	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	106	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	107	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	pboolcol	1	#HEAD#	#TAIL#	59
	111	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	112	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	114	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	115	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	116	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	117	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	118	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	119	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	120	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	121	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	122	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	123	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	124	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	125	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	126	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	127	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	128	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	129	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	130	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	133	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	134	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	135	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	136	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	137	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	141	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	142	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	143	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	144	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	145	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	146	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	147	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	148	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	150	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	151	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	152	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	153	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	154	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	155	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	156	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	157	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	159	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	160	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	161	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	162	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	163	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	164	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	165	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	166	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	167	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	168	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	169	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	170	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	171	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	172	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	173	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	174	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	175	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	176	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	177	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	178	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	179	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	180	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	181	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	182	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	183	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	184	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	185	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	186	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	187	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	188	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	189	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	190	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	191	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	192	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	193	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	194	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	195	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	196	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	197	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	198	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	199	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	200	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	201	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	202	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	203	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	204	##ADDR##	proccoll	0	#HEAD#	#TAIL#	53
	205	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	206	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	207	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	208	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	209	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	210	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	211	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	212	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	213	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	214	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	215	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	216	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	33
	217	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	218	##ADDR##	pbassign	0	#HEAD#	#TAIL#	20
	219	##ADDR##	pireltex	0	#HEAD#	#TAIL#	22
	220	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	221	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	222	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	223	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	224	##ADDR##	spbmvref	0	#HEAD#	#TAIL#	16
	225	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	226	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  1 parameter-collections
  11 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Parameters:
    x = pbool^1 x
      unrolled index-value pairs: {
        0 = 0
        1 = 1
        2 = 0
        3 = 1
        4 = 0
        5 = 1
      }
  Definitions:
    assign_me = process-definition (defined) assign_me<
      pint<> N
      pbool<> B

      pint<> M
      >(
        bool<> b
      )
      In definition "assign_me", we have: {
      Parameters:
        B = pbool<> B

        M = pint<> M
        N = pint<> N
      Instances:
        b = bool<> b
      unroll sequence: 
        pint<> N
        pbool<> B[0..N-1]
        pint<> M
        bool<> b
      chp:
        concurrent: {
          *[
            b := B[M]
          ]
        }
      footprint collection: {
        <2, {0,1}, 0> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <2, {0,1}, 1> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <3, {0,1,0}, 0> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <3, {0,1,0}, 1> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <3, {0,1,0}, 2> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <6, {0,1,0,1,0,1}, 0> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <6, {0,1,0,1,0,1}, 1> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <6, {0,1,0,1,0,1}, 2> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <6, {0,1,0,1,0,1}, 3> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <6, {0,1,0,1,0,1}, 4> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <6, {0,1,0,1,0,1}, 5> {
          pbool^1 B
            unrolled index-value pairs: {
              0 = ?
              1 = ?
              2 = ?
              3 = ?
              4 = ?
              5 = ?
            }
          pint^0 M value: ?
          pint^0 N value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
      }
      }

  Instances:
    y2_0 = process assign_me<2, {0,1}, 0>^0 y2_0 (instantiated) = ::y2_0 (
      bool^0 b (instantiated) = ::y2_0.b 
    )
    y2_1 = process assign_me<2, {0,1}, 1>^0 y2_1 (instantiated) = ::y2_1 (
      bool^0 b (instantiated) = ::y2_1.b 
    )
    y3_0 = process assign_me<3, {0,1,0}, 0>^0 y3_0 (instantiated) = ::y3_0 (
      bool^0 b (instantiated) = ::y3_0.b 
    )
    y3_1 = process assign_me<3, {0,1,0}, 1>^0 y3_1 (instantiated) = ::y3_1 (
      bool^0 b (instantiated) = ::y3_1.b 
    )
    y3_2 = process assign_me<3, {0,1,0}, 2>^0 y3_2 (instantiated) = ::y3_2 (
      bool^0 b (instantiated) = ::y3_2.b 
    )
    y6_0 = process assign_me<6, {0,1,0,1,0,1}, 0>^0 y6_0 (instantiated) = ::y6_0 (
      bool^0 b (instantiated) = ::y6_0.b 
    )
    y6_1 = process assign_me<6, {0,1,0,1,0,1}, 1>^0 y6_1 (instantiated) = ::y6_1 (
      bool^0 b (instantiated) = ::y6_1.b 
    )
    y6_2 = process assign_me<6, {0,1,0,1,0,1}, 2>^0 y6_2 (instantiated) = ::y6_2 (
      bool^0 b (instantiated) = ::y6_2.b 
    )
    y6_3 = process assign_me<6, {0,1,0,1,0,1}, 3>^0 y6_3 (instantiated) = ::y6_3 (
      bool^0 b (instantiated) = ::y6_3.b 
    )
    y6_4 = process assign_me<6, {0,1,0,1,0,1}, 4>^0 y6_4 (instantiated) = ::y6_4 (
      bool^0 b (instantiated) = ::y6_4.b 
    )
    y6_5 = process assign_me<6, {0,1,0,1,0,1}, 5>^0 y6_5 (instantiated) = ::y6_5 (
      bool^0 b (instantiated) = ::y6_5.b 
    )
}

