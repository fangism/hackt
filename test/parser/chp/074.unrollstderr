
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	32
	3	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	4	##ADDR##	procdefn	0	#HEAD#	#TAIL#	326
	5	##ADDR##	pboolcol	0	#HEAD#	#TAIL#	26
	6	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	7	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	11	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	12
	12	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	16
	13	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	16	##ADDR##	pboolcol	0	#HEAD#	#TAIL#	26
	17	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	18	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	19	##ADDR##	pboolcol	0	#HEAD#	#TAIL#	26
	20	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	21	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	23	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	24	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	26	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30
	27	##ADDR##	proccoll	0	#HEAD#	#TAIL#	50
	28	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	30	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	33	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	30

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    assign_me = process-definition (defined) assign_me<
      pbool<> B
      >(
        bool<> b
      )
      In definition "assign_me", we have: {
      Parameters:
        B = pbool<> B
      Instances:
        b = bool<> b
      unroll sequence: 
        pbool<> B
        bool<> b
      chp:
        concurrent: {
          *[
            b := B
          ]
        }
      footprint collection: {
        <false> {
          pbool^0 B value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
        <true> {
          pbool^0 B value: ?
          bool^0 b (instantiated) = ::assign_me::b 
        }
      }
      }

  Instances:
    X = process assign_me<true>^0 X (instantiated) = ::X (
      bool^0 b (instantiated) = ::X.b 
    )
    Y = process assign_me<false>^0 Y (instantiated) = ::Y (
      bool^0 b (instantiated) = ::Y.b 
    )
}

