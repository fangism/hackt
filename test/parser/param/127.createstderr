
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	32
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	133
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	pstrplch	0	#HEAD#	#TAIL#	31
	10	##ADDR##	pstrinst	0	#HEAD#	#TAIL#	16
	11	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	12	##ADDR##	pintplch	0	#HEAD#	#TAIL#	31
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	15	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	21	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	29	##ADDR##	apimvref	0	#HEAD#	#TAIL#	21
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	psassign	0	#HEAD#	#TAIL#	20
	34	##ADDR##	apsmvref	0	#HEAD#	#TAIL#	21
	35	##ADDR##	cnstps__	0	#HEAD#	#TAIL#	19
	36	##ADDR##	cnstps__	0	#HEAD#	#TAIL#	18
	37	##ADDR##	spsmvref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	377
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	43	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	50	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    blah = process-definition (defined) blah(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "blah", we have: {
      Parameters:
        bar = pstring<> blah::bar^1
        foo = pint<> blah::foo^1
      Instances:
        !GND = bool<> blah::!GND
        !Vdd = bool<> blah::!Vdd
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        pint<> foo[0..1]
        foo = { 13, 14 };
        pstring<> bar[0..1]
        bar = { "Hello, ", "world!" };
      footprint: {
        !GND = bool^0 = blah<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = blah<>::!Vdd (2) @[ supply_high port-alias ] 
        bar = pstring^1
          unrolled index-value pairs: {
            0 = Hello, 
            1 = world!
          }
        foo = pint^1
          unrolled index-value pairs: {
            0 = 13
            1 = 14
          }
        Created state:
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	blah<>::!GND @[ supply_low port-alias ]	
        2	blah<>::!Vdd @[ supply_high port-alias ]	
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bityblah = blah<> bityblah
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bityblah = process blah<>^0 = bityblah (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	bityblah	blah<>
    bool: 1,2
  bool instance pool: (0 ports, 2 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
}
