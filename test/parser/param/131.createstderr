
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	171
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	9	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	13	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	14	##ADDR##	pstrplch	0	#HEAD#	#TAIL#	30
	15	##ADDR##	pstrinst	0	#HEAD#	#TAIL#	16
	16	##ADDR##	pstrplch	0	#HEAD#	#TAIL#	29
	17	##ADDR##	pstrinst	0	#HEAD#	#TAIL#	16
	18	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	28	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	piassign	0	#HEAD#	#TAIL#	20
	32	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	33	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	35	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	psassign	0	#HEAD#	#TAIL#	20
	37	##ADDR##	psmfunex	0	#HEAD#	#TAIL#	22
	38	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	39	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstps__	0	#HEAD#	#TAIL#	13
	41	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	spsmvref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	spsmvref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	footprnt	0	#HEAD#	#TAIL#	381
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	cnstps__	0	#HEAD#	#TAIL#	13
	49	##ADDR##	procplch	0	#HEAD#	#TAIL#	30
	50	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	51	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	54	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	62	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	63	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	64	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	65	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    add_me = process-definition (defined) add_me<
      pint<> A
      pint<> B
      pstring<> EQ
      >(
        bool<> !GND
        bool<> !Vdd
      )
      In definition "add_me", we have: {
      Parameters:
        A = pint<> add_me::A
        B = pint<> add_me::B
        C = pint<> add_me::C
        EQ = pstring<> add_me::EQ
        s = pstring<> add_me::s
      Instances:
        !GND = bool<> add_me::!GND
        !Vdd = bool<> add_me::!Vdd
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        pint<> C
        C = A+B;
        pstring<> s
        s = strcat(A, "+", B, EQ, C);
      footprint collection: {
        <11, 22, "="> {
          !GND = bool^0 = add_me<11, 22, "=">::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = add_me<11, 22, "=">::!Vdd (2) @[ supply_high port-alias ] 
          A = pint^0 value: 11
          B = pint^0 value: 22
          C = pint^0 value: 33
          EQ = pstring^0 value: =
          s = pstring^0 value: 11+22=33
          Created state:
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	add_me<11, 22, "=">::!GND @[ supply_low port-alias ]	
          2	add_me<11, 22, "=">::!Vdd @[ supply_high port-alias ]	
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    please = add_me<11, 22, "="> please
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  please = process add_me<11, 22, "=">^0 = please (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	please	add_me<11, 22, "=">
    bool: 1,2
  bool instance pool: (0 ports, 2 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
}
