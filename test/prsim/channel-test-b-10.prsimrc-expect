channels:
L : .e(init:0) 1x1of2 off
R : .e(init:0) 1x1of2 off
L : .e(init:0) 1x1of2 source {0,1,1,0,0,0,1,1,1,1,} @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
R : .e(init:0) 1x1of2 sink,expect {X,X,X,X,}* @0 < channel-dont-cares.txt
	count: 0, unknowns: 2
L : .e(init:0) 1x1of2 source,watch,stopped {0,1,1,0,0,0,1,1,1,1,} @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
R : .e(init:0) 1x1of2 sink,expect,watch,stopped {X,X,X,X,}* @0 < channel-dont-cares.txt
	count: 0, unknowns: 2
L : .e(init:0) 1x1of2 source,watch,stopped {0,1,1,0,0,0,1,1,1,1,} @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
R : .e(init:0) 1x1of2 sink,expect,watch,stopped {X,X,X,X,}* @0 < channel-dont-cares.txt
	count: 0, unknowns: 0
event queue:
	50	L.d[0] : 1
	50	R.e : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
no asserts failed, yay! 
L : .e(init:0) 1x1of2 watch
	count: 0, unknowns: 0
R : .e(init:0) 1x1of2 sink,expect,watch {X,X,X,X,}* @0 < channel-dont-cares.txt
	count: 0, unknowns: 0
