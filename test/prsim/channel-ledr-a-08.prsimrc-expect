channels:
C : LEDR (init .d:0 .r:0) off
D : LEDR (init .e:0 .d:0 .r:0) off
freezing C 
testing acknowledgeless continuous source on C 
C : LEDR (init .d:0 .r:0) source,stopped, timing: global {0,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,0,0,1,1,} @0
	count: 0, unknowns: 2
channel C: timing: global
	10	C.d : 0
	10	C.r : 0
thawing C 
C : LEDR (init .d:0 .r:0) source,watch, timing: global {0,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,0,0,1,1,} @1
	count: 0, unknowns: 0
stopping in the middle 
channel	C (.data) : 0 @ 20
	20	C.r : 1
channel	C (.data) : 0 @ 30
	30	C.r : 0	[by C.r:=0]
channel	C (.data) : 0 @ 40
	40	C.r : 1	[by C.r:=1]
channel	C (.data) : 1 @ 50
	50	C.d : 1	[by C.r:=1]
channel	C (.data) : 1 @ 60
	60	C.r : 0	[by C.d:=1]
channel	C (.data) : 1 @ 70
	70	C.r : 1	[by C.r:=1]
channel	C (.data) : 0 @ 80
	80	C.d : 0	[by C.r:=1]
channel	C (.data) : 0 @ 90
	90	C.r : 0	[by C.d:=0]
channel	C (.data) : 0 @ 100
	100	C.r : 1	[by C.r:=1]
channel	C (.data) : 1 @ 110
	110	C.d : 1	[by C.r:=1]
channel	C (.data) : 1 @ 120
	120	C.r : 0	[by C.d:=1]
channel	C (.data) : 1 @ 130
	130	C.r : 1	[by C.r:=1]
C : LEDR (init .d:0 .r:0) source,watch, timing: global {0,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,0,0,1,1,} @13
	count: 0, unknowns: 0
