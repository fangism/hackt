channels:
L : .e(init:0) 1x1of2 off
R : .e(init:0) 1x1of2 off
L : .e(init:0) 1x1of2 source, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
R : .e(init:0) 1x1of2 sink, timing: global
	count: 0, unknowns: 2
L : .e(init:0) 1x1of2 source,watch,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
R : .e(init:0) 1x1of2 sink,watch,stopped, timing: global
	count: 0, unknowns: 2
L : .e(init:0) 1x1of2 source,watch,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
R : .e(init:0) 1x1of2 sink,watch,stopped, timing: global
	count: 0, unknowns: 0
event queue:
	50	L.d[0] : 1
	50	R.e : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
could just keep going, source is looping 
backtrace should be able to find cycle through sources and sinks! 
node at: `L.e' : 0
caused by: `R.d[1]' : 1
caused by: `_r[1]' : 0
caused by: `L.d[1]' : 1
caused by: `L.e' : 1
caused by: `R.d[1]' : 0
caused by: `_r[1]' : 1
caused by: `L.d[1]' : 0
caused by: `L.e' : 0
(cycle reached)
