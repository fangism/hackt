channels:
X : .e(init:0) 1x1of2 off
Y : .e(init:1) 1x1of4 off
Z : .a(init:0) 1x1of3 off
Warning: channel acknowledge `Z.a' has no fanin!
Z : .a(init:0) 1x1of3 source, timing: global {0,1,1,0,0,0,1,1,1,1,} @0 < channel-test-a-values-X.txt
	count: 0, unknowns: 3
why-x: Z is sourced, should be able to trace back through acknowledge 
Z.d[0]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[1]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[2]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[2]:X, from-channel, pull up/dn undriven
 .Z.a:X, pull up/dn undriven, no fanin
- - - - - - - - - - - - - - - - - - - 
resetting channel Z 
	10	Z.d[0] : 0
	10	Z.d[1] : 0
	10	Z.d[2] : 0
Z.d[0]:0
  (channel Z is stopped.)
Z.d[0]:0
. (channel Z is stopped.)
Z.d[0]:0
  (channel Z is stopped.)
Z.d[0]:0
. (channel Z is stopped.)
- - - - - - - - - - - - - - - - - - - 
releasing channel Z, but ack is still X 
	10	Z.d[0] : X
	10	Z.d[1] : X
	10	Z.d[2] : X
Z.d[0]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[1]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[1]:X, from-channel, pull up/dn undriven
 .Z.a:X, pull up/dn undriven, no fanin
- - - - - - - - - - - - - - - - - - - 
reset ack 
	10	Z.a : 1
	20	Z.d[0] : 0	[by Z.a:=1]
	20	Z.d[1] : 0	[by Z.a:=1]
	20	Z.d[2] : 0	[by Z.a:=1]
Z.d[0]:0
  Z.a:1, input
Z.d[0]:0
. Z.a:1, input
Z.d[0]:0
  Z.a:1, input
Z.d[0]:0
. Z.a:1, input
- - - - - - - - - - - - - - - - - - - 
set ack 
	20	Z.a : 0
	30	Z.d[0] : 1	[by Z.a:=0]
Z.d[0]:1
  Z.a:0, input
Z.d[1]:0
  Z.a:0, input
Z.d[0]:1
. Z.a:0, input
Z.d[1]:0
. Z.a:0, input
Z.d[0]:1
. Z.a:0, input
Z.d[1]:0
. Z.a:0, input
- - - - - - - - - - - - - - - - - - - 
reset ack 
	30	Z.a : 1
	40	Z.d[0] : 0	[by Z.a:=1]
Z.d[0]:0
  Z.a:1, input
Z.d[1]:0
  Z.a:1, input
Z.d[0]:0
. Z.a:1, input
Z.d[1]:0
. Z.a:1, input
Z.d[0]:0
. Z.a:1, input
Z.d[1]:0
. Z.a:1, input
- - - - - - - - - - - - - - - - - - - 
set ack 
	40	Z.a : 0
	50	Z.d[1] : 1	[by Z.a:=0]
Z.d[0]:0
  Z.a:0, input
Z.d[1]:1
  Z.a:0, input
Z.d[0]:0
. Z.a:0, input
Z.d[1]:1
. Z.a:0, input
Z.d[0]:0
. Z.a:0, input
Z.d[1]:1
. Z.a:0, input
- - - - - - - - - - - - - - - - - - - 
freezing channel Z, and setting ack 
	50	Z.a : 1
Z : .a(init:0) 1x1of3 source,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,} @2 < channel-test-a-values-X.txt
	count: 1, unknowns: 0
Z.d[0]:0
  (channel Z is stopped.)
Z.d[1]:1
  (channel Z is stopped.)
Z.d[0]:0
. (channel Z is stopped.)
Z.d[1]:1
. (channel Z is stopped.)
- - - - - - - - - - - - - - - - - - - 
releasing channel Z 
	60	Z.d[1] : 0
- - - - - - - - - - - - - - - - - - - 
setting Z.a -> U 
	60	Z.a : X
	60	Z.d[0] : X	[by Z.a:=X]
	60	Z.d[1] : X	[by Z.a:=X]
	60	Z.d[2] : X	[by Z.a:=X]
Z : .a(init:0) 1x1of3 source, timing: global {0,1,1,0,0,0,1,1,1,1,} @2 < channel-test-a-values-X.txt
	count: 0, unknowns: 3
Z.d[0]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[0]:X, from-channel, pull up/dn undriven
 .Z.a:X, pull up/dn undriven, no fanin
Z.d[1]:X, from-channel, pull up/dn undriven
  Z.a:X, pull up/dn undriven, no fanin
Z.d[0] is X.
Z.d[0] is X.
Z.d[0] is X.
Z.d[0] is X.
- - - - - - - - - - - - - - - - - - - 
setting Z.a -> 0 
	60	Z.a : 0
Z.d[0] is X.
Z.d[0] is X.
Z.d[1] is X.
Z.d[1] is X.
Z.d[0] is X.
Z.d[0] is X.
Z.d[1] is X.
Z.d[1] is X.
event queue:
	70	Z.d[0] : 0	[from Z.a:=0]
	70	Z.d[1] : 1	[from Z.a:=0]
	70	Z.d[2] : 0	[from Z.a:=0]
time: 60
	70	Z.d[0] : 0	[by Z.a:=0]
	70	Z.d[1] : 1	[by Z.a:=0]
	70	Z.d[2] : 0	[by Z.a:=0]
- - - - - - - - - - - - - - - - - - - 
ack-ing Z.a 
	70	Z.a : 1
event queue:
	80	Z.d[1] : 0	[from Z.a:=1]
time: 70
Z.d[0]:0
  Z.a:1, input
Z.d[1]:1, pending event -> 0
Z.d[0]:0
. Z.a:1, input
Z.d[1]:1, pending event -> 0
Z.d[0]:0
. Z.a:1, input
Z.d[1]:1, pending event -> 0
	80	Z.d[1] : 0	[by Z.a:=1]
DONE. 
