`include "param.v"

// vi: syntax=verilog
// This file is automatically generated by wrap_verilog_modules_to_hacprsim.awk, maintained by David Fang.
// options:
//	-v wrapper_prefix=HAC
//	-v max_strlen=256
//	-v wrapper_ports=0
//	-v reverse=0
//	-v debug=0
//	-v loopvar=_i_
//	-v output_format=verilog
//	-v repack_arrays=1

module HAC_AND_N;
	parameter input_size = 2;
	parameter prsim_name="";
// need not be reg with acc: wn:*
	wire [input_size-1:0] A;  // input
	wire Z;  // output

	integer _i_;
	reg [256*8:1] prsim_name_reg, verilog_name, tmp;

	AND_N #(input_size)
	dummy (
		.A ( A ),
		.Z ( Z )
	);

initial begin
#0	// happens *after* initial
	if (prsim_name != "") begin
	prsim_name_reg = prsim_name;
	$sformat(verilog_name, "%m");
	for (_i_=0; _i_<=input_size-1; _i_=_i_+1) begin
		$sformat(tmp, ".A[%d]", _i_);
		$from_prsim({prsim_name_reg, tmp}, {verilog_name, tmp});
	end // end for _i_
	$to_prsim({verilog_name, ".Z"}, {prsim_name, ".Z"});
	end // end if
end // end initial
endmodule

