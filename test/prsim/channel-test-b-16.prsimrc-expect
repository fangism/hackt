channels:
L : .e(init:0)  1x1of2 off
R : .e(init:0)  1x1of2 off
L : .e(init:0)  1x1of2 source, timing: global {0,1,1,0,0,1,0,1,0,}* @0 #0
	count: 0, unknowns: 2
R : .e(init:0)  1x1of2 sink, timing: global
	count: 0, unknowns: 2
L : .e(init:0)  1x1of2 source,watch,stopped, timing: global {0,1,1,0,0,1,0,1,0,}* @0 #0
	count: 0, unknowns: 2
R : .e(init:0)  1x1of2 sink,watch,stopped, timing: global
	count: 0, unknowns: 2
L : .e(init:0)  1x1of2 source,watch,stopped, timing: global {0,1,1,0,0,1,0,1,0,}* @0 #0
	count: 0, unknowns: 0
R : .e(init:0)  1x1of2 sink,watch,stopped, timing: global
	count: 0, unknowns: 0
event queue:
	50	L.d[0] : 1
	50	R.e : 1
channel	L (.data) : 0 @ 50
channel	R (.data) : 0 @ 70
channel	L (.data) : 1 @ 130
channel	R (.data) : 1 @ 150
channel	L (.data) : 1 @ 210
channel	R (.data) : 1 @ 230
channel	L (.data) : 0 @ 290
channel	R (.data) : 0 @ 310
channel	L (.data) : 0 @ 370
channel	R (.data) : 0 @ 390
channel	L (.data) : 1 @ 450
channel	R (.data) : 1 @ 470
channel	L (.data) : 0 @ 530
channel	R (.data) : 0 @ 550
channel	L (.data) : 1 @ 610
channel	R (.data) : 1 @ 630
channel	L (.data) : 0 @ 690
channel	R (.data) : 0 @ 710
channel	L (.data) : 0 @ 770
channel	R (.data) : 0 @ 790
channel	L (.data) : 1 @ 850
channel	R (.data) : 1 @ 870
channel	L (.data) : 1 @ 930
channel	R (.data) : 1 @ 950
channel	L (.data) : 0 @ 1010
channel	R (.data) : 0 @ 1030
channel	L (.data) : 0 @ 1090
channel	R (.data) : 0 @ 1110
channel	L (.data) : 1 @ 1170
channel	R (.data) : 1 @ 1190
channel	L (.data) : 0 @ 1250
channel	R (.data) : 0 @ 1270
channel	L (.data) : 1 @ 1330
channel	R (.data) : 1 @ 1350
channel	L (.data) : 0 @ 1410
channel	R (.data) : 0 @ 1430
channel	L (.data) : 0 @ 1490
channel	R (.data) : 0 @ 1510
could just keep going, source is looping 
backtrace should be able to find cycle through sources and sinks! 
event    : `L.e' : 0 @ 1520
caused by: `R.d[0]' : 1 @ 1510
caused by: `_r[0]' : 0 @ 1500
caused by: `L.d[0]' : 1 @ 1490
caused by: `L.e' : 1 @ 1480
caused by: `R.d[0]' : 0 @ 1470
caused by: `_r[0]' : 1
caused by: `L.d[0]' : 0
caused by: `L.e' : 0
(cycle reached)
