channels:
L : .e(init:0) 1x1of2 off
R : .e(init:0) 1x1of2 off
now with random timing! 
default after min: 0
default after max: +INF
L : .e(init:0) 1x1of2 source, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
R : .e(init:0) 1x1of2 sink,expect, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
L : .e(init:0) 1x1of2 source,watch,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
R : .e(init:0) 1x1of2 sink,expect,watch,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 2
L : .e(init:0) 1x1of2 source,watch,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
R : .e(init:0) 1x1of2 sink,expect,watch,stopped, timing: global {0,1,1,0,0,0,1,1,1,1,}* @0 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 0
channel	R (.data) : 0
R : .e(init:0) 1x1of2 sink,expect,watch, timing: global {0,1,1,0,0,0,1,1,1,1,}* @5 #0 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 0
channel	R (.data) : 0
channel	L (.data) : 1
channel	R (.data) : 1
channel	L (.data) : 1
channel	R (.data) : 1
L : .e(init:0) 1x1of2 source,watch, timing: global {0,1,1,0,0,0,1,1,1,1,}* @3 #1 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
R : .e(init:0) 1x1of2 sink,expect,watch, timing: global {0,1,1,0,0,0,1,1,1,1,}* @3 #1 < channel-test-a-values-X.txt
	count: 0, unknowns: 0
R is still asserting... 
