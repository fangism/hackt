# "Make.test-guile"
#	vi: ft=automake
#	$Id: Make.test-guile,v 1.8 2007/06/12 05:13:28 fang Exp $
# This is just a portion of the Make.test-tail template included by
# Makefile.am's in the test/ directory subtree.  
# This depends on variables defined in Make.test-tail, and thus, 
# should not be included by itself.  

# second filter added to account for guile-1.6 error differences
HACSCM_OUTPUT_FILTER = \
	$(SED) -e '/module created/s/: [^ ]*[ ]/: \#\#FILE\#\# /g' \
		-e '/^Type "(backtrace)" to get more information/d'

# different versions of guile have slightly different error formats
# This is only used as a backup plan, see rule for .hacscmfail-diff.
HACSCM_EXPECT_FILTER = \
	$(SED) -e '/^In standard input:/,/^$$/d' -e '/^Backtrace:/d'

HACSCM_TEST_ENVIRONMENT = \
	GUILE_LOAD_PATH=$(top_srcdir)/src/scm:$(srcdir)

HACKT_GUILE_ENV_EXE = \
	$(HACSCM_TEST_ENVIRONMENT) $(HACKT_GUILE_EXE)

HACSCM_TEST_SCRIPT =
if HAVE_LIBGUILE
HACSCM_TEST_SCRIPT += \
	obj=`$(CAT) $< | $(EXTRACT_HACO_PIPE)` ; \
	$(ECHO) "$(HACKT_GUILE_ENV_EXE) -b $$obj < $< > $@" ; \
	$(HACKT_GUILE_ENV_EXE) -b "$$obj" < $< 2>&1 | $(HACSCM_OUTPUT_FILTER) > $@
else
	$(ECHO) "Not configured with libguile." > $@
endif

HACSCM_FAIL_TEST_SCRIPT = $(HACSCM_TEST_SCRIPT)

.hacscm.hacscm-out:
	@$(HACSCM_TEST_SCRIPT)

.hacscm.hacscmfail-out:
	-@$(HACSCM_FAIL_TEST_SCRIPT)


HACSCM_DIFF = $(DIFF) -Bbu
HACSCM_DIFF_COMMAND = $(HACSCM_DIFF) $$expect $<
if VERBOSE_CHECK
ECHO_HACSCM_DIFF_COMMAND = $(ECHO) "$(HACSCM_DIFF_COMMAND)"
else
ECHO_HACSCM_DIFF_COMMAND = :
endif


# TODO: introduce filtering scripts and differences
if HAVE_LIBGUILE
.hacscm-out.hacscm-diff:
	@stderr=`$(ECHO) $@ |$(SED) 's/\.hacscm-diff$$/.hacscm-expect/g'`; \
	expect="$(srcdir)/$$stderr" ; \
	$(RM) $@ ; \
	if test -f "$$expect" ; then \
	  $(ECHO_HACSCM_DIFF_COMMAND) ; \
	  $(HACSCM_DIFF_COMMAND) > $@ 2>&1 ; \
	  if test -s $@ ; then \
	    $(ECHO) "$@ is non-empty!" ; \
	  fi ; \
	else $(ECHO) "Missing $$expect." | $(TEE) $@ ; \
	fi ; \
	$(TOUCH) $@

.hacscmfail-out.hacscmfail-diff:
	@stderr=`$(ECHO) $@ |$(SED) 's/\.hacscmfail-diff$$/.hacscm-expect/g'`; \
	expect="$(srcdir)/$$stderr" ; \
	$(RM) $@ ; \
	if test -f "$$expect" ; then \
	  $(ECHO_HACSCM_DIFF_COMMAND) ; \
	  $(HACSCM_DIFF_COMMAND) > $@ 2>&1 ; \
	  if test -s $@ ; then \
	    $(ECHO) "$@ is non-empty!  Trying harder..." ; \
	    $(HACSCM_EXPECT_FILTER) "$$expect" > "$$stderr"-filter ; \
	    $(MV) $@ $@-orig ; \
	    $(HACSCM_DIFF) "$$stderr"-filter $< > $@ 2>&1 ; \
	    if test -s $@ ; then \
	      $(ECHO) "$@ is still non-empty!" ; \
	    else $(ECHO) "Differences resolved." ; \
	    fi ; \
	  fi ; \
	else $(ECHO) "Missing $$expect." | $(TEE) $@ ; \
	fi ; \
	$(TOUCH) $@
else
.hacscm-out.hacscm-diff:
	@$(TOUCH) $@

.hacscmfail-out.hacscmfail-diff:
	@$(TOUCH) $@

endif

if HAVE_LIBGUILE
.hacscm-diff.hacscmtest:
	@$(DEFAULT_DIFF_TEST_SCRIPT)

.hacscmfail-diff.hacscmfailtest:
	@$(DEFAULT_DIFF_TEST_SCRIPT)
else
.hacscm-diff.hacscmtest:
	@$(SKIP_TEST_SCRIPT)

.hacscmfail-diff.hacscmfailtest:
	@$(SKIP_TEST_SCRIPT)
endif

.hacscmtest:
	@$(DUMMY_TEST_SCRIPT)

.hacscmfailtest:
	@$(DUMMY_TEST_SCRIPT)

hacscm-out.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) -n "" > $@ ; \
	list='$(HACKT_GUILE_TEST_SCRIPTS_PASSES)' ; \
	exts='hacscm-out' ; \
	test -z "$$list" || \
	for d in $$list ; do \
	  src=$(srcdir)/$$d.hacscm ; \
	  obj=`$(CAT) "$$src" | $(EXTRACT_HACO_PIPE)` ; \
	  for e in $$exts ; do \
	    target=$$d.$$e ; \
	    $(ECHO) -n "$$target " ; \
	  done ; \
	  $(ECHO) ": $$obj" ; \
	done > $@ ; \
	$(TOUCH) $@

-include hacscm-out.autodepend
AUTO_DEPENDS += hacscm-out.autodepend

hacscmfail-out.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) -n "" > $@ ; \
	list='$(HACKT_GUILE_TEST_SCRIPTS_FAILURES)' ; \
	exts='hacscmfail-out' ; \
	test -z "$$list" || \
	for d in $$list ; do \
	  src=$(srcdir)/$$d.hacscm ; \
	  obj=`$(CAT) "$$src" | $(EXTRACT_HACO_PIPE)` ; \
	  for e in $$exts ; do \
	    target=$$d.$$e ; \
	    $(ECHO) -n "$$target " ; \
	  done ; \
	  $(ECHO) ": $$obj" ; \
	done > $@ ; \
	$(TOUCH) $@

-include hacscmfail-out.autodepend
AUTO_DEPENDS += hacscmfail-out.autodepend

hacscmtest.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) "$(HACKT_GUILE_TEST_SCRIPTS_PASSES)" | \
	  $(SPACES_TO_NEWLINE) | $(SORT) -u | \
	  $(AWK) '/.+/ {print $$1 ".hacscm-diff: $$(srcdir)/" $$1 ".hacscm-expect"; }' > $@ ; \
	$(TOUCH) $@

-include hacscmtest.autodepend
AUTO_DEPENDS += hacscmtest.autodepend


hacscmfailtest.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) "$(HACKT_GUILE_TEST_SCRIPTS_FAILURES)" | \
	  $(SPACES_TO_NEWLINE) | $(SORT) -u | \
	  $(AWK) '/.+/ {print $$1 ".hacscmfail-diff: $$(srcdir)/" $$1 ".hacscm-expect"; }' > $@ ; \
	$(TOUCH) $@

-include hacscmfailtest.autodepend
AUTO_DEPENDS += hacscmfailtest.autodepend

# TESTS_ENVIRONMENT doesn't really apply here because these tests are run
# separately as prerequisites of the actual check loop script.
# Thus we must apply environment variables manually.
# Point the GUILE_LOAD_PATH to the home of scheme modules in the source tree.
HACCHPSIMSCM_TEST_ENVIRONMENT = \
	GUILE_LOAD_PATH=$(top_srcdir)/src/scm:$(srcdir)

HACKT_CHPSIM_GUILE_ENV_EXE = \
	$(HACCHPSIMSCM_TEST_ENVIRONMENT) $(HACKT_CHPSIM_GUILE_EXE)

# TODO: add filter if needed
HACCHPSIMSCM_TEST_SCRIPT =
if HAVE_LIBGUILE
HACCHPSIMSCM_TEST_SCRIPT += \
	obj=`$(CAT) $< | $(EXTRACT_HACO_PIPE)` ; \
	$(ECHO) "$(HACKT_CHPSIM_GUILE_ENV_EXE) -b $$obj < $< > $@" ; \
	$(HACKT_CHPSIM_GUILE_ENV_EXE) -b "$$obj" < $< > $@ 2>&1
else
HACCHPSIMSCM_TEST_SCRIPT += \
	$(ECHO) "Not configured with libguile." > $@
endif

HACCHPSIMSCM_FAIL_TEST_SCRIPT = $(HACCHPSIMSCM_TEST_SCRIPT)

.hacchpsimscm.hacchpsimscm-out:
	@$(HACCHPSIMSCM_TEST_SCRIPT)

.hacchpsimscm.hacchpsimscmfail-out:
	-@$(HACCHPSIMSCM_FAIL_TEST_SCRIPT)


if VERBOSE_CHECK
ECHO_HACCHPSIMSCM_DIFF_COMMAND = $(ECHO) "$(DIFF) -bu $$expect $<"
else
ECHO_HACCHPSIMSCM_DIFF_COMMAND = :
endif


# TODO: introduce filtering scripts and differences
if HAVE_LIBGUILE
.hacchpsimscm-out.hacchpsimscm-diff:
	@stderr=`$(ECHO) $@ |$(SED) 's/\.hacchpsimscm-diff$$/.hacchpsimscm-expect/g'`; \
	expect="$(srcdir)/$$stderr" ; \
	$(RM) $@ ; \
	if test -f "$$expect" ; then \
	  $(ECHO_HACCHPSIMSCM_DIFF_COMMAND) ; \
	  $(DIFF) -bu "$$expect" $< > $@ 2>&1 ; \
	  if test -s $@ ; then \
	    $(ECHO) "$@ is non-empty!" ; \
	  fi ; \
	else $(ECHO) "Missing $$expect." | $(TEE) $@ ; \
	fi ; \
	$(TOUCH) $@

.hacchpsimscmfail-out.hacchpsimscmfail-diff:
	@stderr=`$(ECHO) $@ |$(SED) 's/\.hacchpsimscmfail-diff$$/.hacchpsimscm-expect/g'`; \
	expect="$(srcdir)/$$stderr" ; \
	$(RM) $@ ; \
	if test -f "$$expect" ; then \
	  $(ECHO_HACCHPSIMSCM_DIFF_COMMAND) ; \
	  $(DIFF) -bu "$$expect" $< > $@ 2>&1 ; \
	  if test -s $@ ; then \
	    $(ECHO) "$@ is non-empty!" ; \
	  fi ; \
	else $(ECHO) "Missing $$expect." | $(TEE) $@ ; \
	fi ; \
	$(TOUCH) $@
else
.hacchpsimscm-out.hacchpsimscm-diff:
	@$(TOUCH) $@

.hacchpsimscmfail-out.hacchpsimscmfail-diff:
	@$(TOUCH) $@

endif

if HAVE_LIBGUILE
.hacchpsimscm-diff.hacchpsimscmtest:
	@$(DEFAULT_DIFF_TEST_SCRIPT)

.hacchpsimscmfail-diff.hacchpsimscmfailtest:
	@$(DEFAULT_DIFF_TEST_SCRIPT)
else
.hacchpsimscm-diff.hacchpsimscmtest:
	@$(SKIP_TEST_SCRIPT)

.hacchpsimscmfail-diff.hacchpsimscmfailtest:
	@$(SKIP_TEST_SCRIPT)
endif

.hacchpsimscmtest:
	@$(DUMMY_TEST_SCRIPT)

.hacchpsimscmfailtest:
	@$(DUMMY_TEST_SCRIPT)

# NOTE: optional extra dependence on generated tracefile from other test
hacchpsimscm-out.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) -n "" > $@ ; \
	list='$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES)' ; \
	exts='hacchpsimscm-out' ; \
	test -z "$$list" || \
	for d in $$list ; do \
	  src=$(srcdir)/$$d.hacchpsimscm ; \
	  obj=`$(CAT) "$$src" | $(EXTRACT_HACO_PIPE)` ; \
	  obj="$$obj "`$(CAT) "$$src" | $(EXTRACT_CHPSIMTRACE_PIPE)` ; \
	  for e in $$exts ; do \
	    target=$$d.$$e ; \
	    $(ECHO) -n "$$target " ; \
	  done ; \
	  $(ECHO) ": $$obj" ; \
	done > $@ ; \
	$(TOUCH) $@

-include hacchpsimscm-out.autodepend
AUTO_DEPENDS += hacchpsimscm-out.autodepend

hacchpsimscmfail-out.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) -n "" > $@ ; \
	list='$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES)' ; \
	exts='hacchpsimscmfail-out' ; \
	test -z "$$list" || \
	for d in $$list ; do \
	  src=$(srcdir)/$$d.hacchpsimscm ; \
	  obj=`$(CAT) "$$src" | $(EXTRACT_HACO_PIPE)` ; \
	  obj="$$obj "`$(CAT) "$$src" | $(EXTRACT_CHPSIMTRACE_PIPE)` ; \
	  for e in $$exts ; do \
	    target=$$d.$$e ; \
	    $(ECHO) -n "$$target " ; \
	  done ; \
	  $(ECHO) ": $$obj" ; \
	done > $@ ; \
	$(TOUCH) $@

-include hacchpsimscmfail-out.autodepend
AUTO_DEPENDS += hacchpsimscmfail-out.autodepend

hacchpsimscmtest.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) "$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES)" | \
	  $(SPACES_TO_NEWLINE) | $(SORT) -u | \
	  $(AWK) '/.+/ {print $$1 ".hacchpsimscm-diff: $$(srcdir)/" $$1 ".hacchpsimscm-expect"; }' > $@ ; \
	$(TOUCH) $@

-include hacchpsimscmtest.autodepend
AUTO_DEPENDS += hacchpsimscmtest.autodepend


hacchpsimscmfailtest.autodepend: Makefile
	@$(ECHO) "Generating dependencies $@" ; \
	$(ECHO) "$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES)" | \
	  $(SPACES_TO_NEWLINE) | $(SORT) -u | \
	  $(AWK) '/.+/ {print $$1 ".hacchpsimscmfail-diff: $$(srcdir)/" $$1 ".hacchpsimscm-expect"; }' > $@ ; \
	$(TOUCH) $@

-include hacchpsimscmfailtest.autodepend
AUTO_DEPENDS += hacchpsimscmfailtest.autodepend


BOGUS_TESTS += .hacscmtest .hacscmfailtest
BOGUS_TESTS += .hacchpsimscmtest .hacchpsimscmfailtest

CHECK_SUMMARIES += hacscmdiffs hacscmfaildiffs
CHECK_SUMMARIES += hacchpsimscmdiffs hacchpsimscmfaildiffs

hacscmdiffs: force
	-$(CAT) *.hacscm-diff > $@

hacscmfaildiffs: force
	-$(CAT) *.hacscmfail-diff > $@

hacchpsimscmdiffs: force
	-$(CAT) *.hacchpsimscm-diff > $@

hacchpsimscmfaildiffs: force
	-$(CAT) *.hacchpsimscmfail-diff > $@


HACKT_GUILE_TEST_SCRIPTS_BASES = \
	$(HACKT_GUILE_TEST_SCRIPTS_PASSES) \
	$(HACKT_GUILE_TEST_SCRIPTS_FAILURES)

HACKT_CHPSIM_GUILE_TEST_SCRIPTS_BASES = \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES)

srcdir_EXTRA_DIST += \
	$(HACKT_GUILE_TEST_SCRIPTS_BASES:=.hacscm) \
	$(HACKT_GUILE_TEST_SCRIPTS_BASES:=.hacscm-expect) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_BASES:=.hacchpsimscm) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_BASES:=.hacchpsimscm-expect)


TESTS += \
	$(HACKT_GUILE_TEST_SCRIPTS_PASSES:=.hacscmtest) \
	$(HACKT_GUILE_TEST_SCRIPTS_FAILURES:=.hacscmfailtest) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES:=.hacchpsimscmtest) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES:=.hacchpsimscmfailtest)

HAC_COMPILE_OBJECT_TARGETS += \
	$(HACKT_GUILE_TEST_SUBJECTS:=.haco) \
	$(HACKT_CHPSIM_GUILE_TEST_SUBJECTS:=.haco)
# not bothering with unroll anymore...
HAC_CREATE_OBJECT_TARGETS += \
	$(HACKT_GUILE_TEST_SUBJECTS:=.haco-c) \
	$(HACKT_CHPSIM_GUILE_TEST_SUBJECTS:=.haco-c)
HAC_ALLOC_OBJECT_TARGETS += \
	$(HACKT_GUILE_TEST_SUBJECTS:=.haco-a) \
	$(HACKT_CHPSIM_GUILE_TEST_SUBJECTS:=.haco-a)

build-check-local: \
	$(HACKT_GUILE_TEST_SUBJECTS:=.haco-a) \
	$(HACKT_GUILE_TEST_SCRIPTS_PASSES:=.hacscm-out) \
	$(HACKT_GUILE_TEST_SCRIPTS_PASSES:=.hacscm-diff) \
	$(HACKT_GUILE_TEST_SCRIPTS_FAILURES:=.hacscmfail-out) \
	$(HACKT_GUILE_TEST_SCRIPTS_FAILURES:=.hacscmfail-diff) \
	$(HACKT_CHPSIM_GUILE_TEST_SUBJECTS:=.haco-a) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES:=.hacchpsimscm-out) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES:=.hacchpsimscm-diff) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES:=.hacchpsimscmfail-out) \
	$(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES:=.hacchpsimscmfail-diff)

echo-hacscm-passes: force
	@$(ECHO) $(HACKT_GUILE_TEST_SCRIPTS_PASSES)

echo-hacscm-failures: force
	@$(ECHO) $(HACKT_GUILE_TEST_SCRIPTS_FAILURES)

echo-hacchpsimscm-passes: force
	@$(ECHO) $(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_PASSES)

echo-hacchpsimscm-failures: force
	@$(ECHO) $(HACKT_CHPSIM_GUILE_TEST_SCRIPTS_FAILURES)


clean-hacscmtests:
	-$(RM_PATTERN) "*.hacscm-out"
	-$(RM_PATTERN) "*.hacscm-diff"
	-$(RM_PATTERN) "*.hacscm-expect-filter"
	-$(RM_PATTERN) "*.hacscmtest"
	-$(RM_PATTERN) "*.hacscmfail-out"
	-$(RM_PATTERN) "*.hacscmfail-diff"
	-$(RM_PATTERN) "*.hacscmfail-diff-orig"
	-$(RM_PATTERN) "*.hacscmfailtest"
	-$(RM_PATTERN) "*.hacchpsimscm-out"
	-$(RM_PATTERN) "*.hacchpsimscm-diff"
	-$(RM_PATTERN) "*.hacchpsimscmtest"
	-$(RM_PATTERN) "*.hacchpsimscmfail-out"
	-$(RM_PATTERN) "*.hacchpsimscmfail-diff"
	-$(RM_PATTERN) "*.hacchpsimscmfailtest"

clean-local: clean-hacscmtests

.PHONY: clean-hacscmtests

