# "Makefile[.in]"
#	$Id: Makefile.in,v 1.4 2007/08/08 23:01:31 fang Exp $
#
# This Makefile should not be invoked until AFTER hackt is installed!
#
# Minimalist Makefile to demontstrate chpsim with function modules
# This is not run as part of the normal test suite, but rather, 
# as a post-install test, suitable for installcheck-local.
#
# This is a non-configured Makefile, as an example that doesn't
# require automake, autoconf, or libtool.  
#
# When invoking this Makefile, make sure the intended install $(bindir)
# appears earliest in the path to guarantee that the intended executables
# are being tested.  

# for: examplesdir
top_srcdir = @top_srcdir@
# include $(top_srcdir)/Make.stddef
top_builddir = @top_builddir@
# for list of install paths from configure
include $(top_builddir)/installcheck.mk
include $(top_srcdir)/installdirs.mk

# pkgdatadir = $(datadir)/@PACKAGE@
## probably resembles: /usr/local/share/hackt/lib

# minimal configuration paths
# srcdir = @srcdir@
# VPATH = @srcdir@
# NOTE: we now reference the *INSTALLED* directory as the VPATH/srcdir
srcdir = $(examplesdir)/chpsim-function
# keep this consistent with parent directory's Makefile.am
VPATH = $(srcdir)
# ALERT: not all versions of make support variable expansion of VPATH


#############################################################################
################### the important Makefile example below ####################
#############################################################################

# include the *installed* makefile template
# pkgdatadir is defined by installcheck.mk
include $(pkgdatadir)/mk/hackt-lt.mk
# This is the libtool-enable Makefile template

# up to user to define the following, or let make pick defaults:
# CC = @CC@
CXX = @CXX@
ECHO = @ECHO@
# or just 'echo'

# just echo results back out
all: confirm-exec hello-test.chpsimrc-out
	cat $^

# non-essential, just for diagnostics only
confirm-exec:
	@{ $(ECHO) "examplesdir=$(examplesdir)" && \
	$(ECHO) "VPATH=$(VPATH)" && \
	$(ECHO) "PATH=$$PATH" && \
	which $(HACKT_CONFIG) && \
	which $(HACKT_LIBTOOL) && \
	which $(HACKT_EXE) && \
	which $(HACKT_COMPILE_EXE) && \
	which $(HACKT_CREATE_EXE) && \
	which $(HACKT_ALLOC_EXE) && \
	which $(HACKT_CHPSIM_EXE) ; \
	} > $@ 2>&1

# run hacchpsim to and log results to file
hello-test.chpsimrc-out: hello-test.chpsimrc hello-test.haco-a hello.la
	$(HACKT_CHPSIM_EXE) -b -lhello hello-test.haco-a < \
		$(srcdir)/hello-test.chpsimrc > $@

# hand-written library building rules, in the style of automake-libtool
hello_la_LIBADD =
# CHPSIM_MODULE_FLAGS is critical
hello_la_LDFLAGS = $(CHPSIM_MODULE_FLAGS)
# OBJECTS is normally inferred from SOURCES by automake
hello_la_OBJECTS = hello.lo

# the libtool library for the plug-in module
hello.la: $(hello_la_OBJECTS)
	$(CXXLINK) $(hello_la_LDFLAGS) $(hello_la_OBJECTS) $(hello_la_LIBADD)

# local clean-up
clean: clean-test

clean-test:
	$(RM) *.depend
	$(RM) *.chpsimrc-out
	$(RM) confirm-exec

