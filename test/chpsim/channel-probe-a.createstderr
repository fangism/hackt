
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	88
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	11	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	20	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	24	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	25	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	footprnt	0	#HEAD#	#TAIL#	355
	28	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	29	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	30	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	31	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	33	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	36	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	37	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	38	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	39	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	40	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	49	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	51	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	procdefn	0	#HEAD#	#TAIL#	119
	55	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	56	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	57	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	58	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	59	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	60	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	62	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	65	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	70	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	71	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	CHPfcall	0	#HEAD#	#TAIL#	12
	74	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	21
	75	##ADDR##	nexplist	0	#HEAD#	#TAIL#	20
	76	##ADDR##	stringex	0	#HEAD#	#TAIL#	23
	77	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	procdefn	0	#HEAD#	#TAIL#	127
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	80	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	81	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	82	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	83	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	84	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	85	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	86	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	88	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	89	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	91	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	92	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	93	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	94	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	95	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	96	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	99	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	102	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	103	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	104	##ADDR##	procdefn	0	#HEAD#	#TAIL#	129
	105	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	106	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	107	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	108	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	109	##ADDR##	chanplch	0	#HEAD#	#TAIL#	28
	110	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	111	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	112	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	113	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	114	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	115	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	116	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	117	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	118	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	119	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	120	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	121	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	123	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	124	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	126	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	127	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	128	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	129	##ADDR##	procdefn	0	#HEAD#	#TAIL#	140
	130	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	131	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	132	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	133	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	134	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	135	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	136	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	137	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	138	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	139	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	140	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	143	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	144	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	145	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	146	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	147	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	148	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	149	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	150	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	151	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	152	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	153	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	154	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	155	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	156	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	159	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	160	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	161	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	162	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	163	##ADDR##	footprnt	0	#HEAD#	#TAIL#	393
	164	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	165	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	26
	166	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	167	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	168	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	169	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	170	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	171	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	172	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	173	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	174	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	175	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	176	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	177	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	178	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	179	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	180	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	181	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	182	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	183	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	184	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	185	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	186	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	187	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	188	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	189	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	190	##ADDR##	procdefn	0	#HEAD#	#TAIL#	138
	191	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	192	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	193	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	194	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	195	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	196	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	197	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	198	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	199	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	200	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	201	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	202	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	203	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	204	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	205	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	206	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	207	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	208	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	209	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	210	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	211	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	212	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	213	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	214	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	215	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	216	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	217	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	218	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	219	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	220	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	221	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	222	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	223	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	224	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	225	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	226	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	227	##ADDR##	procdefn	0	#HEAD#	#TAIL#	129
	228	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	229	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	230	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	231	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	232	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	233	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	234	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	235	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	236	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	237	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	238	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	239	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	240	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	241	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	242	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	243	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	244	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	245	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	246	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	247	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	248	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	249	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	250	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	251	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	252	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	253	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	254	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	255	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	256	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	257	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	258	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	259	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	260	##ADDR##	procdefn	0	#HEAD#	#TAIL#	147
	261	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	262	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	263	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	264	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	265	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	266	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	267	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	268	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	269	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	270	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	271	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	272	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	273	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	274	##ADDR##	chanplch	0	#HEAD#	#TAIL#	28
	275	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	276	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	277	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	278	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	279	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	280	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	281	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	282	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	283	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	284	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	285	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	286	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	287	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	288	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	289	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	290	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	291	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	292	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	293	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	294	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	295	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	296	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	297	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	298	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	299	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	300	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	301	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	302	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	303	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	304	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	305	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	306	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	307	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	308	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	309	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	310	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	311	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	312	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	313	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	314	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	315	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	316	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	317	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	318	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	319	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	320	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	321	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	21
	322	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	323	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	324	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	325	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	326	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	327	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	328	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	329	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	330	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	331	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	332	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	333	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	334	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	335	##ADDR##	chanprob	0	#HEAD#	#TAIL#	12
	336	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	337	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	338	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	339	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	340	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	341	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	342	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	343	##ADDR##	footprnt	0	#HEAD#	#TAIL#	630
	344	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	345	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	346	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	347	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	348	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	349	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	350	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	351	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	352	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  10 definitions
  0 typedefs
  Definitions:
    bool_sink = process-definition (defined) bool_sink(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        !GND = bool<> bool_sink::!GND
        !Vdd = bool<> bool_sink::!Vdd
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        !GND = bool^0 = bool_sink<>::!GND (1) 
        !Vdd = bool^0 = bool_sink<>::!Vdd (2) 
        B = channel chan?(bool<>)^0 = bool_sink<>::B (1) 
        b = bool^0 = bool_sink<>::b (3) 
        Created state:
        channel instance pool: (1 ports, 0 local, 0 mapped)
        1	bool_sink<>::B	
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	bool_sink<>::!GND	
        2	bool_sink<>::!Vdd	
        3	bool_sink<>::b	
        resolved concurrent actions:
          *[
            B?(b)
          ]
        chp events: {
          event[0]: receive: B?(b), #pred: 1, succ: 0 
        }
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        !GND = bool<> bool_sink_delay::!GND
        !Vdd = bool<> bool_sink_delay::!Vdd
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_echo = process-definition (defined) bool_sink_echo(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_echo", we have: {
      Instances:
        !GND = bool<> bool_sink_echo::!GND
        !Vdd = bool<> bool_sink_echo::!Vdd
        B = chan?(bool<>) bool_sink_echo::B
        b = bool<> bool_sink_echo::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        bool<> b
      chp:
        concurrent: {
          *[
            sequential: {
              B?(b)
              print("bool-sink: ",b)
            }
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        !GND = bool<> bool_sink_once::!GND
        !Vdd = bool<> bool_sink_once::!Vdd
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_sink_shared = process-definition (defined) bool_sink_shared(
        bool<> !GND
        bool<> !Vdd
        chan?() Cin
        chan!() Cout
        chan??(bool<>) B
      )
      In definition "bool_sink_shared", we have: {
      Instances:
        !GND = bool<> bool_sink_shared::!GND
        !Vdd = bool<> bool_sink_shared::!Vdd
        B = chan??(bool<>) bool_sink_shared::B
        Cin = chan?() bool_sink_shared::Cin
        Cout = chan!() bool_sink_shared::Cout
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?() Cin
          chan!() Cout
          chan??(bool<>) B
        )
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              B?
              Cout!
            }
          ]
        }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        !GND = bool<> bool_source::!GND
        !Vdd = bool<> bool_source::!Vdd
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <2, {1,0}> {
          !GND = bool^0 = bool_source<2, {1,0}>::!GND (1) 
          !Vdd = bool^0 = bool_source<2, {1,0}>::!Vdd (2) 
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
            }
          N = pint^0 value: 2
          S = channel chan!(bool<>)^0 = bool_source<2, {1,0}>::S (1) 
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	bool_source<2, {1,0}>::S	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	bool_source<2, {1,0}>::!GND	
          2	bool_source<2, {1,0}>::!Vdd	
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(false)
              }
            ]
          chp events: {
            event[0]: send: S!(true), #pred: 1, succ: 1 
            event[1]: send: S!(false), #pred: 1, succ: 0 
          }
        }
      }
      }

    bool_source_constant = process-definition (defined) bool_source_constant<>
<
      pbool<> V
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_constant", we have: {
      Parameters:
        V = pbool<> bool_source_constant::V
      Instances:
        !GND = bool<> bool_source_constant::!GND
        !Vdd = bool<> bool_source_constant::!Vdd
        S = chan!(bool<>) bool_source_constant::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    bool_source_delay = process-definition (defined) bool_source_delay<>
<
      pint<> N
      pbool<> B[0..N-1]
      preal<> D
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_delay", we have: {
      Parameters:
        B = pbool<> bool_source_delay::B^1
        D = preal<> bool_source_delay::D
        N = pint<> bool_source_delay::N
      Instances:
        !GND = bool<> bool_source_delay::!GND
        !Vdd = bool<> bool_source_delay::!Vdd
        S = chan!(bool<>) bool_source_delay::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              [after=D] S!(B[$i])
            }
          ]
        }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        !GND = bool<> bool_source_once::!GND
        !Vdd = bool<> bool_source_once::!Vdd
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

    bool_source_shared = process-definition (defined) bool_source_shared<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan?() Cin
        chan!() Cout
        chan!!(bool<>) S
      )
      In definition "bool_source_shared", we have: {
      Parameters:
        B = pbool<> bool_source_shared::B^1
        N = pint<> bool_source_shared::N
      Instances:
        !GND = bool<> bool_source_shared::!GND
        !Vdd = bool<> bool_source_shared::!Vdd
        Cin = chan?() bool_source_shared::Cin
        Cout = chan!() bool_source_shared::Cout
        S = chan!!(bool<>) bool_source_shared::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?() Cin
          chan!() Cout
          chan!!(bool<>) S
        )
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              concurrent i:[0..N-1]: {
                S!(B[$i])
              }
              Cout!
            }
          ]
        }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    A = chan(bool<>) A
    B = chan(bool<>) B
    a = bool<> a
    bs = bool_source<> bs
    snk = bool_sink<> snk
}

top-level chp:
  concurrent: {
    *[
      sequential: {
        [#A]
        A?(a)
        B!(a)
      }
    ]
  }
footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  A = channel chan(bool<>)^0 = A (1) 
  B = channel chan(bool<>)^0 = B (2) 
  a = bool^0 = a (3) 
  bs = process bool_source<>^0<2, {1,0}> = bs (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    S = channel chan!(bool<>)^0 = A (1) 
  )
  snk = process bool_sink<>^0 = snk (2) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    B = channel chan?(bool<>)^0 = B (2) 
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	bs<2, {1,0}>	bool_source<2, {1,0}>
    channel: 1
    bool: 1,2
  2	snk	bool_sink<>
    channel: 2
    bool: 1,2
  channel instance pool: (0 ports, 2 local, 0 mapped)
  1	A	
  2	B	
  bool instance pool: (0 ports, 3 local, 1 mapped)
  1	!GND	
  2	!Vdd	
  3	a	
  private sub-bool index map:
    (2 -> 0)
    (3 -> 1)
  resolved concurrent actions:
    *[
      sequential: {
        [#A]
        A?(a)
        B!(a)
      }
    ]
  chp events: {
    event[0]: wait: [#A], #pred: 1, succ: 2 
    event[1]: send: B!(a), #pred: 1, succ: 0 
    event[2]: receive: A?(a), #pred: 1, succ: 1 
  }
}
