
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	88
	3	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	7	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	9	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	11	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	procdefn	0	#HEAD#	#TAIL#	113
	15	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	16	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	17	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	18	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	19	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	20	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	24	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	32	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	footprnt	0	#HEAD#	#TAIL#	325
	35	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	36	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	39	##ADDR##	procdefn	0	#HEAD#	#TAIL#	114
	40	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	41	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	42	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	43	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	44	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	45	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	46	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	48	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	49	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	55	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	56	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	62	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	procdefn	0	#HEAD#	#TAIL#	191
	65	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	66	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	67	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	71	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	73	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	76	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	77	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	78	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	80	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	81	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	85	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	86	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	89	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	92	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	95	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	36
	99	##ADDR##	footprnt	0	#HEAD#	#TAIL#	403
	100	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	101	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	102	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	103	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	110	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	111	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	40
	112	##ADDR##	footprnt	0	#HEAD#	#TAIL#	431
	113	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	114	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	115	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	32
	116	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	117	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	118	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	119	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	120	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	121	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	123	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	124	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	125	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	126	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	44
	127	##ADDR##	footprnt	0	#HEAD#	#TAIL#	459
	128	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	129	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	36
	131	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	132	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	133	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	136	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	137	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	138	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	139	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	140	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	143	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	48
	144	##ADDR##	footprnt	0	#HEAD#	#TAIL#	487
	145	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	146	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	147	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	40
	148	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	149	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	150	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	151	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	152	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	153	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	154	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	155	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	156	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	159	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	160	##ADDR##	procdefn	0	#HEAD#	#TAIL#	112
	161	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	162	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	163	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	164	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	165	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	166	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	167	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	168	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	169	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	170	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	171	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	172	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	173	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	174	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	175	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	176	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	177	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	178	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	179	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	180	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	181	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	182	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	183	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	184	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	185	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	186	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	187	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	188	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	189	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	190	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	191	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	192	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	193	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	194	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	195	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	196	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	197	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	198	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	199	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	200	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	201	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	202	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	203	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	204	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	205	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	206	##ADDR##	procdefn	0	#HEAD#	#TAIL#	171
	207	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	208	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	209	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	210	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	211	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	212	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	213	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	214	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	215	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	216	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	217	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	218	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	219	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	220	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	221	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	222	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	223	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	224	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	225	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	226	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	227	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	228	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	229	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	230	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	231	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	232	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	233	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	234	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	235	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	32
	236	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	237	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	238	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	239	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	240	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	241	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	242	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	243	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	244	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	245	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	246	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	247	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	248	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	249	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	250	##ADDR##	narithex	0	#HEAD#	#TAIL#	17
	251	##ADDR##	iretcast	0	#HEAD#	#TAIL#	12
	252	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	22
	253	##ADDR##	nexplist	0	#HEAD#	#TAIL#	20
	254	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	255	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	256	##ADDR##	iretcast	0	#HEAD#	#TAIL#	12
	257	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	22
	258	##ADDR##	nexplist	0	#HEAD#	#TAIL#	20
	259	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	260	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	261	##ADDR##	footprnt	0	#HEAD#	#TAIL#	555
	262	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	263	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	264	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	265	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	266	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	267	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	268	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	269	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	270	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	271	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	272	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	273	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	274	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	275	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	276	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	277	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	278	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	279	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	280	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	281	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	282	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	283	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	284	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	285	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	286	##ADDR##	apimvref	0	#HEAD#	#TAIL#	29
	287	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	288	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	289	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	290	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	291	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	292	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	293	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	294	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	295	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	296	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	297	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	298	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	299	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	300	##ADDR##	apimvref	0	#HEAD#	#TAIL#	33
	301	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	302	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	303	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	304	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	305	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	306	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	307	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	308	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	309	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	310	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	311	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	312	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	313	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	314	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	315	##ADDR##	apimvref	0	#HEAD#	#TAIL#	25
	316	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	317	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	318	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	319	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	320	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	321	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	322	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	323	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	324	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	325	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	326	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	327	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	328	##ADDR##	apimvref	0	#HEAD#	#TAIL#	37
	329	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	330	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	331	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	332	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	333	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	334	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	335	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	336	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	337	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	338	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	339	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	340	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	341	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	342	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	343	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	344	##ADDR##	footprnt	0	#HEAD#	#TAIL#	809
	345	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	346	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	347	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	348	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	349	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	350	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	351	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	352	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	353	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	354	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  11 instantiation-collections
  0 sub-namespaces
  6 definitions
  0 typedefs
  Definitions:
    int_sink = process-definition (defined) int_sink<
      pint<> W (default = 32)
      >(
        chan?(int<int_sink::W>) B
      )
      In definition "int_sink", we have: {
      Parameters:
        W = pint<> int_sink::W (default = 32)
      Instances:
        B = chan?(int<int_sink::W>) int_sink::B
        b = int<int_sink::W> int_sink::b
      unroll sequence: 
        chan?(int<int_sink::W>) B
        int<int_sink::W> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint collection: {
        <32> {
          B = channel chan?(int<32>)^0 = int_sink::B (1) 
          W = pint^0 value: 32
          b = int<32>^0 = int_sink::b (1) 
          Created state:
          channel instance pool:
          1	int_sink::B
          int instance pool:
          1	int_sink::b
          resolved concurrent actions:
            *[
              B?(b)
            ]
          chp events: {
            event[0]: receive: B?(b), #pred: 1, succ: 0 
          }
        }
      }
      }

    int_sink_once = process-definition (defined) int_sink_once<
      pint<> W
      pint<> N
      >(
        chan?(int<int_sink_once::W>) B
      )
      In definition "int_sink_once", we have: {
      Parameters:
        N = pint<> int_sink_once::N
        W = pint<> int_sink_once::W
      Instances:
        B = chan?(int<int_sink_once::W>) int_sink_once::B
        b = int<32> int_sink_once::b
      unroll sequence: 
        chan?(int<int_sink_once::W>) B
        int<32> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    int_source = process-definition (defined) int_source<
      pint<> W
      ><
      pint<> N
      pint<> B[0..N-1]
      >(
        chan!(int<int_source::W>) S
      )
      In definition "int_source", we have: {
      Parameters:
        B = pint<> int_source::B^1
        N = pint<> int_source::N
        W = pint<> int_source::W
      Instances:
        S = chan!(int<int_source::W>) int_source::S
      unroll sequence: 
        chan!(int<int_source::W>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <32, 3, {15,24,30}> {
          B = pint^1
            unrolled index-value pairs: {
              0 = 15
              1 = 24
              2 = 30
            }
          N = pint^0 value: 3
          S = channel chan!(int<32>)^0 = int_source::S (1) 
          W = pint^0 value: 32
          Created state:
          channel instance pool:
          1	int_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(15)
                S!(24)
                S!(30)
              }
            ]
          chp events: {
            event[0]: send: S!(15), #pred: 1, succ: 2 
            event[1]: send: S!(30), #pred: 1, succ: 0 
            event[2]: send: S!(24), #pred: 1, succ: 1 
          }
        }
        <32, 4, {12,15,17,30}> {
          B = pint^1
            unrolled index-value pairs: {
              0 = 12
              1 = 15
              2 = 17
              3 = 30
            }
          N = pint^0 value: 4
          S = channel chan!(int<32>)^0 = int_source::S (1) 
          W = pint^0 value: 32
          Created state:
          channel instance pool:
          1	int_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(12)
                S!(15)
                S!(17)
                S!(30)
              }
            ]
          chp events: {
            event[0]: send: S!(12), #pred: 1, succ: 3 
            event[1]: send: S!(30), #pred: 1, succ: 0 
            event[2]: send: S!(17), #pred: 1, succ: 1 
            event[3]: send: S!(15), #pred: 1, succ: 2 
          }
        }
        <32, 5, {9,13,22,27,34}> {
          B = pint^1
            unrolled index-value pairs: {
              0 = 9
              1 = 13
              2 = 22
              3 = 27
              4 = 34
            }
          N = pint^0 value: 5
          S = channel chan!(int<32>)^0 = int_source::S (1) 
          W = pint^0 value: 32
          Created state:
          channel instance pool:
          1	int_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(9)
                S!(13)
                S!(22)
                S!(27)
                S!(34)
              }
            ]
          chp events: {
            event[0]: send: S!(9), #pred: 1, succ: 4 
            event[1]: send: S!(34), #pred: 1, succ: 0 
            event[2]: send: S!(27), #pred: 1, succ: 1 
            event[3]: send: S!(22), #pred: 1, succ: 2 
            event[4]: send: S!(13), #pred: 1, succ: 3 
          }
        }
        <32, 6, {16,18,20,32,36,28}> {
          B = pint^1
            unrolled index-value pairs: {
              0 = 16
              1 = 18
              2 = 20
              3 = 32
              4 = 36
              5 = 28
            }
          N = pint^0 value: 6
          S = channel chan!(int<32>)^0 = int_source::S (1) 
          W = pint^0 value: 32
          Created state:
          channel instance pool:
          1	int_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(16)
                S!(18)
                S!(20)
                S!(32)
                S!(36)
                S!(28)
              }
            ]
          chp events: {
            event[0]: send: S!(16), #pred: 1, succ: 5 
            event[1]: send: S!(28), #pred: 1, succ: 0 
            event[2]: send: S!(36), #pred: 1, succ: 1 
            event[3]: send: S!(32), #pred: 1, succ: 2 
            event[4]: send: S!(20), #pred: 1, succ: 3 
            event[5]: send: S!(18), #pred: 1, succ: 4 
          }
        }
      }
      }

    int_source_constant = process-definition (defined) int_source_constant<
      pint<> W
      ><
      pint<> V
      >(
        chan!(int<int_source_constant::W>) S
      )
      In definition "int_source_constant", we have: {
      Parameters:
        V = pint<> int_source_constant::V
        W = pint<> int_source_constant::W
      Instances:
        S = chan!(int<int_source_constant::W>) int_source_constant::S
      unroll sequence: 
        chan!(int<int_source_constant::W>) S
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    int_source_once = process-definition (defined) int_source_once<
      pint<> W
      ><
      pint<> N
      pint<> B[0..N-1]
      >(
        chan!(int<int_source_once::W>) S
      )
      In definition "int_source_once", we have: {
      Parameters:
        B = pint<> int_source_once::B^1
        N = pint<> int_source_once::N
        W = pint<> int_source_once::W
      Instances:
        S = chan!(int<int_source_once::W>) int_source_once::S
      unroll sequence: 
        chan!(int<int_source_once::W>) S
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

    my_gcd = process-definition (defined) my_gcd(
        chan?(int<32>) A
        chan?(int<32>) B
        chan?(int<32>) C
        chan?(int<32>) D
        chan!(int<32>) G
      )
      In definition "my_gcd", we have: {
      Instances:
        A = chan?(int<32>) my_gcd::A
        B = chan?(int<32>) my_gcd::B
        C = chan?(int<32>) my_gcd::C
        D = chan?(int<32>) my_gcd::D
        G = chan!(int<32>) my_gcd::G
        a = int<32> my_gcd::a
        b = int<32> my_gcd::b
        c = int<32> my_gcd::c
        d = int<32> my_gcd::d
      unroll sequence: 
        chan?(int<32>) A
        chan?(int<32>) B
        chan?(int<32>) C
        chan?(int<32>) D
        chan!(int<32>) G
        int<32> a
        int<32> b
        int<32> c
        int<32> d
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
                C?(c)
                D?(d)
              }
              G!(int(my_gcd(a,b))+int(my_gcd(c,d)))
            }
          ]
        }
      footprint: {
        A = channel chan?(int<32>)^0 = my_gcd::A (1) 
        B = channel chan?(int<32>)^0 = my_gcd::B (2) 
        C = channel chan?(int<32>)^0 = my_gcd::C (3) 
        D = channel chan?(int<32>)^0 = my_gcd::D (4) 
        G = channel chan!(int<32>)^0 = my_gcd::G (5) 
        a = int<32>^0 = my_gcd::a (1) 
        b = int<32>^0 = my_gcd::b (2) 
        c = int<32>^0 = my_gcd::c (3) 
        d = int<32>^0 = my_gcd::d (4) 
        Created state:
        channel instance pool:
        1	my_gcd::A
        2	my_gcd::B
        3	my_gcd::C
        4	my_gcd::D
        5	my_gcd::G
        int instance pool:
        1	my_gcd::a
        2	my_gcd::b
        3	my_gcd::c
        4	my_gcd::d
        resolved concurrent actions:
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
                C?(c)
                D?(d)
              }
              G!(int(my_gcd(a,b))+int(my_gcd(c,d)))
            }
          ]
        chp events: {
          event[0]: fork: , #pred: 1, succ: 3 4 5 6 
          event[1]: send: G!(int(my_gcd(a,b))+int(my_gcd(c,d))), #pred: 1, succ: 0 
          event[2]: join: , #pred: 4, succ: 1 
          event[3]: receive: A?(a), #pred: 1, succ: 2 
          event[4]: receive: B?(b), #pred: 1, succ: 2 
          event[5]: receive: C?(c), #pred: 1, succ: 2 
          event[6]: receive: D?(d), #pred: 1, succ: 2 
        }
      }
      }

  Instances:
    A = chan(int<32>) A
    AS = int_source<32> AS
    B = chan(int<32>) B
    BS = int_source<32> BS
    C = chan(int<32>) C
    CS = int_source<32> CS
    D = chan(int<32>) D
    DS = int_source<32> DS
    G = chan(int<32>) G
    GS = int_sink<32> GS
    X = my_gcd<> X
}

footprint: {
  A = channel chan(int<32>)^0 = A (1) 
  AS = process int_source<32>^0<4, {12,15,17,30}> = AS (2) (
    S = channel chan!(int<32>)^0 = A (1) 
  )
  B = channel chan(int<32>)^0 = B (2) 
  BS = process int_source<32>^0<5, {9,13,22,27,34}> = BS (3) (
    S = channel chan!(int<32>)^0 = B (2) 
  )
  C = channel chan(int<32>)^0 = C (3) 
  CS = process int_source<32>^0<3, {15,24,30}> = CS (4) (
    S = channel chan!(int<32>)^0 = C (3) 
  )
  D = channel chan(int<32>)^0 = D (4) 
  DS = process int_source<32>^0<6, {16,18,20,32,36,28}> = DS (5) (
    S = channel chan!(int<32>)^0 = D (4) 
  )
  G = channel chan(int<32>)^0 = G (5) 
  GS = process int_sink<32>^0 = GS (6) (
    B = channel chan?(int<32>)^0 = G (5) 
  )
  X = process my_gcd<>^0 = X (1) (
    A = channel chan?(int<32>)^0 = A (1) 
    B = channel chan?(int<32>)^0 = B (2) 
    C = channel chan?(int<32>)^0 = C (3) 
    D = channel chan?(int<32>)^0 = D (4) 
    G = channel chan!(int<32>)^0 = G (5) 
  )
  Created state:
  process instance pool:
  1	X
  2	AS<4, {12,15,17,30}>
  3	BS<5, {9,13,22,27,34}>
  4	CS<3, {15,24,30}>
  5	DS<6, {16,18,20,32,36,28}>
  6	GS
  channel instance pool:
  1	A
  2	B
  3	C
  4	D
  5	G
}
