// "bitrouter-seq-test-env-08.hac"
// copy-modified from "bitrouter-seq-test-env-05.hac"
// input characteristics: 
// long packets mixed with short packets
// short delay in between
// destination contention: medium

import "bitrouter-seq-test-channels.hac";
import "bitrouter-seq-test-sinks-ideal.hac";
import "testlib/round-robin.hac";

// chan(int) LL[2], RR[2];
chan() LSCin[2], LSCout[2];
packet_source_slice_array LS[2];
// control token finite sources
round_robin_source_finite A[2];		// generate N token iterations


LS[0]<12, 10, {
	{0,0,0,0,0,0,0,0,1,2},
	{0,0,0,1,1,0,0,0,0,2},
	{0,0,0,0,0,0,1,0,0,3},
	{1,0,0,0,0,1,0,0,0,2},
	{0,0,0,1,0,0,0,1,0,2},
	{0,0,0,0,0,1,1,0,0,3},
	{1,0,1,0,0,0,0,0,0,2},
	{1,1,1,0,1,1,0,1,0,3},
	{1,0,0,0,0,0,1,0,0,2},
	{1,0,0,1,1,0,0,1,1,3},
	{0,0,0,1,0,0,1,0,1,3},
	{1,1,0,0,0,1,0,0,0,2}
	}, 40.0>
(LSCin[0], LSCout[0], LL[0]);
A[0]<5>(LSCout[0], LSCin[0]);

LS[1]<10, 4, {
	{0,1,0,3},
	{0,1,1,2},
	{0,0,0,2},
	{1,0,0,3},
	{1,0,0,2},
	{1,0,0,2},
	{0,0,0,3},
	{1,0,0,3},
	{0,1,1,2},
	{1,0,0,2}
	}, 10.0>
(LSCin[1], LSCout[1], LL[1]);
A[1]<16>(LSCout[1], LSCin[1]);

