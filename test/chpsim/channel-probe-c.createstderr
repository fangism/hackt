
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	192
	3	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	7	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	9	##ADDR##	procdefn	0	#HEAD#	#TAIL#	194
	10	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	12	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	13	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	133
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	18	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	19	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	20	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	21	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	22	##ADDR##	footprnt	0	#HEAD#	#TAIL#	569
	23	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	40
	24	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	25	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	26	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	27	##ADDR##	prealplh	0	#HEAD#	#TAIL#	57
	28	##ADDR##	prealins	0	#HEAD#	#TAIL#	32
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	30	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	31	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	34	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	35	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	36	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	37	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	32
	38	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	39	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	40	##ADDR##	procdefn	0	#HEAD#	#TAIL#	199
	41	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	42	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	43	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	44	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	45	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	46	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	47	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	48	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	49	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	50	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	51	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	52	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	54	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	57	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	58	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	59	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	60	##ADDR##	procdefn	0	#HEAD#	#TAIL#	228
	61	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	62	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	63	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	64	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	66	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	67	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	68	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	69	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	71	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	72	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	73	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	75	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	76	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	77	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	78	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	80	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	81	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	83	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	84	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	85	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	86	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	87	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	89	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	50
	90	##ADDR##	footprnt	0	#HEAD#	#TAIL#	621
	91	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	92	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	93	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	94	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	95	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	96	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	97	##ADDR##	procdefn	0	#HEAD#	#TAIL#	189
	98	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	99	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	100	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	101	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	102	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	103	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	104	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	105	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	106	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	107	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	108	##ADDR##	procdefn	0	#HEAD#	#TAIL#	218
	109	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	110	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	111	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	112	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	114	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	115	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	116	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	117	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	118	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	119	##ADDR##	prealplh	0	#HEAD#	#TAIL#	57
	120	##ADDR##	prealins	0	#HEAD#	#TAIL#	32
	121	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	122	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	123	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	124	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	125	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	126	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	127	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	128	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	129	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	130	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	131	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	132	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	133	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	134	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	32
	135	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	136	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	137	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	138	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	139	##ADDR##	procdefn	0	#HEAD#	#TAIL#	201
	140	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	141	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	142	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	143	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	144	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	145	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	146	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	147	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	148	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	149	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	150	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	151	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	152	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	153	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	154	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	155	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	156	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	158	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	159	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	160	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	161	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	162	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	163	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	164	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	165	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	166	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	167	##ADDR##	procplch	0	#HEAD#	#TAIL#	53
	168	##ADDR##	procplch	0	#HEAD#	#TAIL#	52
	169	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	170	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	171	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	172	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	173	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	174	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	175	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	176	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	177	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	178	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	179	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	180	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	181	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	182	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	183	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	184	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	185	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	186	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	187	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	188	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	41
	189	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	190	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	191	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	192	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	193	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	194	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	195	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	196	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	197	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	198	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	199	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	41
	200	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	201	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	202	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	203	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	204	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	205	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	206	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	207	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	208	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	209	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	210	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	211	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	212	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	213	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	214	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	215	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	216	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	217	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	218	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	219	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	220	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	221	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	222	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	223	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	224	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	32
	225	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	42
	226	##ADDR##	chanprob	0	#HEAD#	#TAIL#	24
	227	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	228	##ADDR##	chanprob	0	#HEAD#	#TAIL#	24
	229	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	230	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	48
	231	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	232	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	233	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	234	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	235	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	236	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	237	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	238	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	239	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	240	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	241	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	242	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	243	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	244	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	245	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1109
	246	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	247	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	248	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	249	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	250	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	50
	251	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	252	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  12 instantiation-collections
  0 sub-namespaces
  7 definitions
  0 typedefs
  Definitions:
    bool_sink = process-definition (defined) bool_sink(
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        B = channel chan?(bool<>)^0 = bool_sink::B (1) 
        b = bool^0 = bool_sink::b (1) 
        Created state:
        channel instance pool:
        1	bool_sink::B
        bool instance pool:
        1	bool_sink::b
        resolved concurrent actions:
          *[
            B?(b)
          ]
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <2, {1,0}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
            }
          N = pint^0 value: 2
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(false)
              }
            ]
        }
      }
      }

    bool_source_constant = process-definition (defined) bool_source_constant<>
<
      pbool<> V
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_constant", we have: {
      Parameters:
        V = pbool<> bool_source_constant::V
      Instances:
        S = chan!(bool<>) bool_source_constant::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    bool_source_delay = process-definition (defined) bool_source_delay<>
<
      pint<> N
      pbool<> B[0..N-1]
      preal<> D
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_delay", we have: {
      Parameters:
        B = pbool<> bool_source_delay::B^1
        D = preal<> bool_source_delay::D
        N = pint<> bool_source_delay::N
      Instances:
        S = chan!(bool<>) bool_source_delay::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              [after=D] S!(B[$i])
            }
          ]
        }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

  Instances:
    A = chan(bool<>) A
    B = chan(bool<>) B
    X = chan(bool<>) X
    Y = chan(bool<>) Y
    Z = chan(bool<>) Z
    a = bool<> a
    bs = bool_source<> bs
    sink1 = bool_sink<> sink1
    snk0 = bool_sink<> snk0
    x = bool<> x
    xs = bool_source<> xs
    z = bool<> z
}

top-level chp:
  concurrent: {
    *[
      sequential: {
        X?(x)
        Y!(x)
      }
    ]
    *[
      sequential: {
        [#A&&#Y]
        concurrent: {
          sequential: {
            A?(a)
            B!(a)
          }
          sequential: {
            Y?(z)
            Z!(z)
          }
        }
      }
    ]
  }
footprint: {
  A = channel chan(bool<>)^0 = A (1) 
  B = channel chan(bool<>)^0 = B (3) 
  X = channel chan(bool<>)^0 = X (2) 
  Y = channel chan(bool<>)^0 = Y (5) 
  Z = channel chan(bool<>)^0 = Z (4) 
  a = bool^0 = a (1) 
  bs = process bool_source<>^0<2, {1,0}> = bs (1) (
    S = channel chan!(bool<>)^0 = A (1) 
  )
  sink1 = process bool_sink<>^0 = sink1 (4) (
    B = channel chan?(bool<>)^0 = Z (4) 
  )
  snk0 = process bool_sink<>^0 = snk0 (3) (
    B = channel chan?(bool<>)^0 = B (3) 
  )
  x = bool^0 = x (2) 
  xs = process bool_source<>^0<2, {1,0}> = xs (2) (
    S = channel chan!(bool<>)^0 = X (2) 
  )
  z = bool^0 = z (3) 
  Created state:
  process instance pool:
  1	bs<2, {1,0}>
  2	xs<2, {1,0}>
  3	snk0
  4	sink1
  channel instance pool:
  1	A
  2	X
  3	B
  4	Z
  5	Y
  bool instance pool:
  1	a
  2	x
  3	z
  resolved concurrent actions:
    *[
      sequential: {
        X?(x)
        Y!(x)
      }
    ]
    *[
      sequential: {
        [#A&&#Y]
        concurrent: {
          sequential: {
            A?(a)
            B!(a)
          }
          sequential: {
            Y?(z)
            Z!(z)
          }
        }
      }
    ]
}
