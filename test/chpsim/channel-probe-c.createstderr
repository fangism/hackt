
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	116
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procdefn	0	#HEAD#	#TAIL#	130
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	14	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	16	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	24	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	25	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	29	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	33	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	34	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	36	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	footprnt	0	#HEAD#	#TAIL#	363
	39	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	40	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	41	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	42	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	44	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	45	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	46	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	47	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	48	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	49	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	50	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	51	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	57	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	58	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	59	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	62	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	63	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	64	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	70	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	procdefn	0	#HEAD#	#TAIL#	127
	74	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	75	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	76	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	77	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	78	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	79	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	81	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	83	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	84	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	90	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	94	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	95	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	97	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	98	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	100	##ADDR##	CHPfcall	0	#HEAD#	#TAIL#	12
	101	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	21
	102	##ADDR##	nexplist	0	#HEAD#	#TAIL#	20
	103	##ADDR##	stringex	0	#HEAD#	#TAIL#	23
	104	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	105	##ADDR##	procdefn	0	#HEAD#	#TAIL#	135
	106	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	107	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	108	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	109	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	110	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	111	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	112	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	113	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	114	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	115	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	116	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	117	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	118	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	119	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	120	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	121	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	123	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	124	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	126	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	127	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	128	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	129	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	130	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	131	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	132	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	133	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	134	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	135	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	136	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	137	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	138	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	139	##ADDR##	procdefn	0	#HEAD#	#TAIL#	137
	140	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	141	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	142	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	143	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	144	##ADDR##	chanplch	0	#HEAD#	#TAIL#	28
	145	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	146	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	147	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	148	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	149	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	150	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	151	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	152	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	153	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	154	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	155	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	156	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	157	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	159	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	160	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	161	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	162	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	163	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	164	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	165	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	166	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	167	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	168	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	169	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	170	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	171	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	172	##ADDR##	procdefn	0	#HEAD#	#TAIL#	148
	173	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	174	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	175	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	176	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	177	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	178	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	179	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	180	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	181	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	182	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	183	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	184	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	185	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	186	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	187	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	188	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	189	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	190	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	191	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	192	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	193	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	194	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	195	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	196	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	197	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	198	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	199	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	200	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	201	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	202	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	203	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	204	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	205	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	206	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	207	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	208	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	209	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	210	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	211	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	212	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	213	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	214	##ADDR##	footprnt	0	#HEAD#	#TAIL#	399
	215	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	216	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	26
	217	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	218	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	219	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	220	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	221	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	222	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	223	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	224	##ADDR##	procdefn	0	#HEAD#	#TAIL#	133
	225	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	226	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	227	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	228	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	229	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	230	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	231	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	232	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	233	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	234	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	235	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	236	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	237	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	238	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	239	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	240	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	241	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	242	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	243	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	244	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	245	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	246	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	247	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	248	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	249	##ADDR##	procdefn	0	#HEAD#	#TAIL#	146
	250	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	251	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	252	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	253	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	254	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	255	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	256	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	257	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	258	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	259	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	260	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	261	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	262	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	263	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	264	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	265	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	266	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	267	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	268	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	269	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	270	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	271	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	272	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	273	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	274	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	275	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	276	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	277	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	278	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	279	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	280	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	281	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	282	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	283	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	284	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	285	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	286	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	287	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	288	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	289	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	290	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	291	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	292	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	293	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	294	##ADDR##	procdefn	0	#HEAD#	#TAIL#	137
	295	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	296	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	297	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	298	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	299	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	300	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	301	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	302	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	303	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	304	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	305	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	306	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	307	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	308	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	309	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	310	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	311	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	312	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	313	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	314	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	315	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	316	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	317	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	318	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	319	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	320	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	321	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	322	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	323	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	324	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	325	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	326	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	327	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	328	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	329	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	330	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	331	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	332	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	333	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	334	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	335	##ADDR##	procdefn	0	#HEAD#	#TAIL#	155
	336	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	337	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	338	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	339	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	340	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	341	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	342	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	343	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	344	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	345	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	346	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	347	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	348	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	349	##ADDR##	chanplch	0	#HEAD#	#TAIL#	28
	350	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	351	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	352	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	353	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	354	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	355	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	356	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	357	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	358	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	359	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	360	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	361	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	362	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	363	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	364	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	365	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	366	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	367	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	368	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	369	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	370	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	371	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	372	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	373	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	374	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	375	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	376	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	377	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	378	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	379	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	380	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	381	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	382	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	383	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	384	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	385	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	386	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	387	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	388	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	389	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	390	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	391	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	392	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	393	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	394	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	395	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	396	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	397	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	398	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	399	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	400	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	401	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	402	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	403	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	404	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	405	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	406	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	407	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	408	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	409	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	410	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	411	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	412	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	413	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	414	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	415	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	416	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	417	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	418	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	419	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	420	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	421	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	21
	422	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	423	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	424	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	425	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	426	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	427	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	428	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	429	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	430	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	431	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	432	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	21
	433	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	434	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	435	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	436	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	437	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	438	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	439	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	440	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	441	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	442	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	443	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	444	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	445	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	446	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	447	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	448	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	449	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	450	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	451	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	452	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	453	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	454	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	455	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	456	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	457	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	458	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	459	##ADDR##	chanprob	0	#HEAD#	#TAIL#	12
	460	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	461	##ADDR##	chanprob	0	#HEAD#	#TAIL#	12
	462	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	463	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	464	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	465	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	466	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	467	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	468	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	469	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	470	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	471	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	472	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	473	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	474	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	475	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	476	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	477	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	478	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1111
	479	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	480	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	481	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	482	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	483	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	26
	484	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	485	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	486	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	487	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	488	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	489	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	490	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	491	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	492	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	493	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	494	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	495	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	496	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	497	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	498	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	499	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	500	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  14 instantiation-collections
  0 sub-namespaces
  10 definitions
  0 typedefs
  Definitions:
    bool_sink = process-definition (defined) bool_sink(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        !GND = bool<> bool_sink::!GND
        !Vdd = bool<> bool_sink::!Vdd
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        !GND = bool^0 = bool_sink<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bool_sink<>::!Vdd (2) @[ supply_high port-alias ] 
        B = channel chan?(bool<>)^0 = bool_sink<>::B (1) 
        b = bool^0 = bool_sink<>::b (3) 
        Created state:
        channel instance pool: (1 ports, 0 local, 0 mapped)
        1	bool_sink<>::B	
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	bool_sink<>::!GND @[ supply_low port-alias ]	
        2	bool_sink<>::!Vdd @[ supply_high port-alias ]	
        3	bool_sink<>::b	
        resolved concurrent actions:
          *[
            B?(b)
          ]
        chp events: {
          event[0]: receive: B?(b), #pred: 1, succ: 0 
        }
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        !GND = bool<> bool_sink_delay::!GND
        !Vdd = bool<> bool_sink_delay::!Vdd
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_echo = process-definition (defined) bool_sink_echo(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_echo", we have: {
      Instances:
        !GND = bool<> bool_sink_echo::!GND
        !Vdd = bool<> bool_sink_echo::!Vdd
        B = chan?(bool<>) bool_sink_echo::B
        b = bool<> bool_sink_echo::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          *[
            sequential: {
              B?(b)
              print("bool-sink: ",b)
            }
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        !GND = bool<> bool_sink_once::!GND
        !Vdd = bool<> bool_sink_once::!Vdd
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_sink_shared = process-definition (defined) bool_sink_shared(
        bool<> !GND
        bool<> !Vdd
        chan?() Cin
        chan!() Cout
        chan??(bool<>) B
      )
      In definition "bool_sink_shared", we have: {
      Instances:
        !GND = bool<> bool_sink_shared::!GND
        !Vdd = bool<> bool_sink_shared::!Vdd
        B = chan??(bool<>) bool_sink_shared::B
        Cin = chan?() bool_sink_shared::Cin
        Cout = chan!() bool_sink_shared::Cout
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?() Cin
          chan!() Cout
          chan??(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              B?
              Cout!
            }
          ]
        }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        !GND = bool<> bool_source::!GND
        !Vdd = bool<> bool_source::!Vdd
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <2, {1,0}> {
          !GND = bool^0 = bool_source<2, {1,0}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bool_source<2, {1,0}>::!Vdd (2) @[ supply_high port-alias ] 
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
            }
          N = pint^0 value: 2
          S = channel chan!(bool<>)^0 = bool_source<2, {1,0}>::S (1) 
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	bool_source<2, {1,0}>::S	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	bool_source<2, {1,0}>::!GND @[ supply_low port-alias ]	
          2	bool_source<2, {1,0}>::!Vdd @[ supply_high port-alias ]	
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(false)
              }
            ]
          chp events: {
            event[0]: send: S!(true), #pred: 1, succ: 1 
            event[1]: send: S!(false), #pred: 1, succ: 0 
          }
        }
      }
      }

    bool_source_constant = process-definition (defined) bool_source_constant<>
<
      pbool<> V
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_constant", we have: {
      Parameters:
        V = pbool<> bool_source_constant::V
      Instances:
        !GND = bool<> bool_source_constant::!GND
        !Vdd = bool<> bool_source_constant::!Vdd
        S = chan!(bool<>) bool_source_constant::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    bool_source_delay = process-definition (defined) bool_source_delay<>
<
      pint<> N
      pbool<> B[0..N-1]
      preal<> D
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_delay", we have: {
      Parameters:
        B = pbool<> bool_source_delay::B^1
        D = preal<> bool_source_delay::D
        N = pint<> bool_source_delay::N
      Instances:
        !GND = bool<> bool_source_delay::!GND
        !Vdd = bool<> bool_source_delay::!Vdd
        S = chan!(bool<>) bool_source_delay::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              [after=D] S!(B[$i])
            }
          ]
        }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        !GND = bool<> bool_source_once::!GND
        !Vdd = bool<> bool_source_once::!Vdd
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

    bool_source_shared = process-definition (defined) bool_source_shared<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan?() Cin
        chan!() Cout
        chan!!(bool<>) S
      )
      In definition "bool_source_shared", we have: {
      Parameters:
        B = pbool<> bool_source_shared::B^1
        N = pint<> bool_source_shared::N
      Instances:
        !GND = bool<> bool_source_shared::!GND
        !Vdd = bool<> bool_source_shared::!Vdd
        Cin = chan?() bool_source_shared::Cin
        Cout = chan!() bool_source_shared::Cout
        S = chan!!(bool<>) bool_source_shared::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?() Cin
          chan!() Cout
          chan!!(bool<>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              concurrent i:[0..N-1]: {
                S!(B[$i])
              }
              Cout!
            }
          ]
        }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    A = chan(bool<>) A
    B = chan(bool<>) B
    X = chan(bool<>) X
    Y = chan(bool<>) Y
    Z = chan(bool<>) Z
    a = bool<> a
    bs = bool_source<> bs
    sink1 = bool_sink<> sink1
    snk0 = bool_sink<> snk0
    x = bool<> x
    xs = bool_source<> xs
    z = bool<> z
}

top-level chp:
  concurrent: {
    *[
      sequential: {
        X?(x)
        Y!(x)
      }
    ]
    *[
      sequential: {
        [#A&&#Y]
        concurrent: {
          sequential: {
            A?(a)
            B!(a)
          }
          sequential: {
            Y?(z)
            Z!(z)
          }
        }
      }
    ]
  }
footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  A = channel chan(bool<>)^0 = A (1) 
  B = channel chan(bool<>)^0 = B (3) 
  X = channel chan(bool<>)^0 = X (2) 
  Y = channel chan(bool<>)^0 = Y (5) 
  Z = channel chan(bool<>)^0 = Z (4) 
  a = bool^0 = a (3) 
  bs = process bool_source<>^0<2, {1,0}> = bs (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(bool<>)^0 = A (1) 
  )
  sink1 = process bool_sink<>^0 = sink1 (4) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    B = channel chan?(bool<>)^0 = Z (4) 
  )
  snk0 = process bool_sink<>^0 = snk0 (3) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    B = channel chan?(bool<>)^0 = B (3) 
  )
  x = bool^0 = x (4) 
  xs = process bool_source<>^0<2, {1,0}> = xs (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(bool<>)^0 = X (2) 
  )
  z = bool^0 = z (5) 
  Created state:
  process instance pool: (0 ports, 4 local, 0 mapped)
  1	bs<2, {1,0}>	bool_source<2, {1,0}>
    channel: 1
    bool: 1,2
  2	xs<2, {1,0}>	bool_source<2, {1,0}>
    channel: 2
    bool: 1,2
  3	snk0	bool_sink<>
    channel: 3
    bool: 1,2
  4	sink1	bool_sink<>
    channel: 4
    bool: 1,2
  channel instance pool: (0 ports, 5 local, 0 mapped)
  1	A	
  2	X	
  3	B	
  4	Z	
  5	Y	
  bool instance pool: (0 ports, 5 local, 2 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	a	
  4	x	
  5	z	
  private sub-bool index map:
    (3 -> 0)
    (4 -> 1)
    (5 -> 2)
  resolved concurrent actions:
    *[
      sequential: {
        X?(x)
        Y!(x)
      }
    ]
    *[
      sequential: {
        [#A&&#Y]
        concurrent: {
          sequential: {
            A?(a)
            B!(a)
          }
          sequential: {
            Y?(z)
            Z!(z)
          }
        }
      }
    ]
  chp events: {
    event[0]: fork: , #pred: 1, succ: 3 1 
    event[1]: wait: [#A&&#Y], #pred: 1, succ: 9 
    event[2]: send: Y!(x), #pred: 1, succ: 3 
    event[3]: receive: X?(x), #pred: 1, succ: 2 
    event[4]: join: , #pred: 2, succ: 1 
    event[5]: send: B!(a), #pred: 1, succ: 4 
    event[6]: receive: A?(a), #pred: 1, succ: 5 
    event[7]: send: Z!(z), #pred: 1, succ: 4 
    event[8]: receive: Y?(z), #pred: 1, succ: 7 
    event[9]: fork: , #pred: 1, succ: 6 8 
  }
}
