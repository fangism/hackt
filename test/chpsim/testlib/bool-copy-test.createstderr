WARNING: channel HAHA.A lacks connection to a producer.
WARNING: channel HAHA.O[0] lacks connection to a consumer.
WARNING: channel HAHA.O[1] lacks connection to a consumer.
---- END CREATE WARNINGS ---

Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	64
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	28
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	142
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	24	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	25	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	33	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	35	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	36	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	39	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	40	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	43	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	46	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	48	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	footprnt	0	#HEAD#	#TAIL#	488
	51	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	52	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	53	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	54	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	55	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	57	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	58	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	59	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	60	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	64	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	48
	68	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	48
	71	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	72	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	48
	75	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	procdefn	0	#HEAD#	#TAIL#	152
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	80	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	81	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	82	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	83	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	84	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	85	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	86	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	87	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	88	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	89	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	90	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	92	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	93	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	94	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	96	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	97	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	98	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	99	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	100	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	101	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	102	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	103	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	104	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	106	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	107	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	108	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	109	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	110	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	111	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	114	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	115	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	116	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	117	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	118	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	119	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	120	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	121	##ADDR##	cnstpr__	0	#HEAD#	#TAIL#	12
	122	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	123	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	124	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	126	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	127	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	128	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	70
	129	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	130	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	133	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	134	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	135	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	136	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	137	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	138	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	70
	139	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	140	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	143	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	144	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	145	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	146	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	147	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	148	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	70
	149	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	150	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	24
	151	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	152	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	153	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	154	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	155	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	156	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	157	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	158	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	159	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	160	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	161	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	162	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	163	##ADDR##	footprnt	0	#HEAD#	#TAIL#	460
	164	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  2 definitions
  6 typedefs
  Definitions:
    bool_copy = process-definition (defined) bool_copy<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) A
        chan!(bool<>) O[0..N-1]
      )
      In definition "bool_copy", we have: {
      Parameters:
        N = pint<> bool_copy::N
      Instances:
        !GND = bool<> bool_copy::!GND
        !Vdd = bool<> bool_copy::!Vdd
        A = chan?(bool<>) bool_copy::A
        O = chan!(bool<>) bool_copy::O^1
        a = bool<> bool_copy::a
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) A
          chan!(bool<>) O[0..N-1]
        )
        bool<> a
      chp:
        concurrent: {
          *[
            sequential: {
              A?(a)
              concurrent i:[0..N-1]: {
                O[$i]!(a)
              }
            }
          ]
        }
      footprint collection: {
        <2> {
          !GND = bool^0 = bool_copy<2>::!GND (1) 
          !Vdd = bool^0 = bool_copy<2>::!Vdd (2) 
          A = channel chan?(bool<>)^0 = bool_copy<2>::A (1) 
          N = pint^0 value: 2
          O = channel chan!(bool<>)^1
            {
              [0] = bool_copy<2>::O[0] (2) 
              [1] = bool_copy<2>::O[1] (3) 
            }
          a = bool^0 = bool_copy<2>::a (3) 
          Created state:
          channel instance pool: (3 ports, 0 local, 0 mapped)
          1	bool_copy<2>::A	
          2	bool_copy<2>::O[0]	
          3	bool_copy<2>::O[1]	
          bool instance pool: (2 ports, 1 local, 0 mapped)
          1	bool_copy<2>::!GND	
          2	bool_copy<2>::!Vdd	
          3	bool_copy<2>::a	
          resolved concurrent actions:
            *[
              sequential: {
                A?(a)
                concurrent: {
                  O[0]!(a)
                  O[1]!(a)
                }
              }
            ]
          chp events: {
            event[0]: receive: A?(a), #pred: 1, succ: 4 
            event[1]: join: , #pred: 2, succ: 0 
            event[2]: send: O[0]!(a), #pred: 1, succ: 1 
            event[3]: send: O[1]!(a), #pred: 1, succ: 1 
            event[4]: fork: , #pred: 1, succ: 2 3 
          }
        }
      }
      }

    timed_bool_copy = process-definition (defined) timed_bool_copy<
      pint<> N
      preal<> F
      preal<> B
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) A
        chan!(bool<>) O[0..N-1]
      )
      In definition "timed_bool_copy", we have: {
      Parameters:
        B = preal<> timed_bool_copy::B
        F = preal<> timed_bool_copy::F
        N = pint<> timed_bool_copy::N
      Instances:
        !GND = bool<> timed_bool_copy::!GND
        !Vdd = bool<> timed_bool_copy::!Vdd
        A = chan?(bool<>) timed_bool_copy::A
        O = chan!(bool<>) timed_bool_copy::O^1
        a = bool<> timed_bool_copy::a
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) A
          chan!(bool<>) O[0..N-1]
        )
        bool<> a
      chp:
        concurrent: {
          *[
            sequential: {
              [after=B] A?(a)
              [after=0] concurrent i:[0..N-1]: {
                [after=F] O[$i]!(a)
              }
            }
          ]
        }
      }

  Typedefs:
    bool_copy_2 = process-definition-alias: bool_copy_2
      = bool_copy<2>
    bool_copy_3 = process-definition-alias: bool_copy_3
      = bool_copy<3>
    bool_copy_4 = process-definition-alias: bool_copy_4
      = bool_copy<4>
    timed_bool_copy_2 = process-definition-alias: timed_bool_copy_2<
      preal<> F
      preal<> B
      >
      = timed_bool_copy<2, timed_bool_copy_2::F, timed_bool_copy_2::B>
    timed_bool_copy_3 = process-definition-alias: timed_bool_copy_3<
      preal<> F
      preal<> B
      >
      = timed_bool_copy<3, timed_bool_copy_3::F, timed_bool_copy_3::B>
    timed_bool_copy_4 = process-definition-alias: timed_bool_copy_4<
      preal<> F
      preal<> B
      >
      = timed_bool_copy<4, timed_bool_copy_4::F, timed_bool_copy_4::B>
  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    HAHA = bool_copy_2<> HAHA
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  HAHA = process bool_copy<2>^0 = HAHA (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    A = channel chan?(bool<>)^0 = HAHA.A (1) 
    O = channel chan!(bool<>)^1
      {
        [0] = HAHA.O[0] (2) 
        [1] = HAHA.O[1] (3) 
      }
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	HAHA	bool_copy<2>
    channel: 1,2,3
    bool: 1,2
  channel instance pool: (0 ports, 3 local, 0 mapped)
  1	HAHA.A	
  2	HAHA.O[0]	
  3	HAHA.O[1]	
  bool instance pool: (0 ports, 2 local, 1 mapped)
  1	!GND	
  2	!Vdd	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 1)
}
