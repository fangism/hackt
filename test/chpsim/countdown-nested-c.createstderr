
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	dintplch	0	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	68
	8	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	9	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	12	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	13	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	15	##ADDR##	CHPdowhl	0	#HEAD#	#TAIL#	20
	16	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	17	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	21
	18	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	21	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	22	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	25	##ADDR##	CHPdowhl	0	#HEAD#	#TAIL#	20
	26	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	27	##ADDR##	nrelatex	0	#HEAD#	#TAIL#	21
	28	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	narithex	0	#HEAD#	#TAIL#	17
	33	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	36	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	narithex	0	#HEAD#	#TAIL#	17
	38	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	40	##ADDR##	footprnt	0	#HEAD#	#TAIL#	446
	41	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  0 definitions
  0 typedefs
  Instances:
    c = int<32> c
    d = int<32> d
}

top-level chp:
  concurrent: {
    sequential: {
      c := 0
      *[
        c<3 -> sequential: {
          d := 0
          concurrent: {
            *[
              d<2 -> d := d+1
            ]
            c := c+1
          }
        }
      ]
    }
  }
footprint: {
  c = int<32>^0 = c (1) 
  d = int<32>^0 = d (2) 
  Created state:
  int instance pool:
  1	c
  2	d
  resolved concurrent actions:
    sequential: {
      c := 0
      *[
        c<3 -> sequential: {
          d := 0
          concurrent: {
            *[
              d<2 -> d := d+1
            ]
            c := c+1
          }
        }
      ]
    }
  chp events: {
    event[0]: assign: c := 0, #pred: 1, succ: 8 
    event[1]: null: null, #pred: 1, succ: 
    event[2]: join: , #pred: 2, succ: 8 
    event[3]: select: *[ d<2 -> ... ], #pred: 1, succ: 4 2 
    event[4]: assign: d := d+1, #pred: 1, succ: 3 
    event[5]: assign: c := c+1, #pred: 1, succ: 2 
    event[6]: fork: , #pred: 1, succ: 3 5 
    event[7]: assign: d := 0, #pred: 1, succ: 6 
    event[8]: select: *[ c<3 -> ... ], #pred: 1, succ: 7 1 
  }
}
