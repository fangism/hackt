
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	88
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	26
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	11	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	15	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	21	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	22	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	footprnt	0	#HEAD#	#TAIL#	309
	24	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	25	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	26	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	27	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	29	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	30	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	31	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	32	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	34	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	35	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	36	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	39	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	41	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	42	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	procdefn	0	#HEAD#	#TAIL#	107
	45	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	46	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	47	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	48	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	49	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	51	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	52	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	54	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	55	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	56	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	62	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	procdefn	0	#HEAD#	#TAIL#	152
	65	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	66	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	67	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	71	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	72	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	73	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	76	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	78	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	79	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	80	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	81	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	82	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	85	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	88	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	91	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	92	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	93	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	25
	94	##ADDR##	footprnt	0	#HEAD#	#TAIL#	328
	95	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	96	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	97	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	20
	98	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	99	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	27
	102	##ADDR##	footprnt	0	#HEAD#	#TAIL#	370
	103	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	104	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	105	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	106	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	107	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	108	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	109	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	110	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	111	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	112	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	113	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	28
	114	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	115	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	116	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	117	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	32
	118	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	119	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	120	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	121	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	122	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	123	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	124	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	125	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	126	##ADDR##	procdefn	0	#HEAD#	#TAIL#	105
	127	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	128	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	129	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	130	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	131	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	132	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	133	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	134	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	135	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	136	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	137	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	138	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	139	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	140	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	141	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	142	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	143	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	144	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	146	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	147	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	148	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	149	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	150	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	151	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	152	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	153	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	154	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	155	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	156	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	157	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	158	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	159	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	160	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	161	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	162	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	163	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	164	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	165	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	166	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	167	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	168	##ADDR##	procdefn	0	#HEAD#	#TAIL#	109
	169	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	170	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	171	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	172	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	173	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	174	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	175	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	176	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	177	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	178	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	179	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	180	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	181	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	182	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	183	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	184	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	185	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	186	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	187	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	188	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	189	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	190	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	191	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	192	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	193	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	194	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	195	##ADDR##	procdefn	0	#HEAD#	#TAIL#	135
	196	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	197	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	198	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	199	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	200	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	201	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	202	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	203	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	204	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	205	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	206	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	207	##ADDR##	chanplch	0	#HEAD#	#TAIL#	28
	208	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	209	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	210	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	211	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	212	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	21
	213	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	214	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	215	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	216	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	217	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	218	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	21
	219	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	220	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	221	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	222	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	223	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	224	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	225	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	226	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	227	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	228	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	229	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	230	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	231	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	232	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	20
	233	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	234	##ADDR##	procdefn	0	#HEAD#	#TAIL#	125
	235	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	236	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	237	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	238	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	239	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	240	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	241	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	242	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	243	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	244	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	245	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	246	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	247	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	248	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	249	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	250	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	251	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	252	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	253	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	254	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	255	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	256	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	257	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	258	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	259	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	260	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	261	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	262	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	263	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	264	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	265	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	266	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	267	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	268	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	269	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	270	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	271	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	272	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	273	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	274	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	275	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	276	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	277	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	278	##ADDR##	nlgclpex	0	#HEAD#	#TAIL#	26
	279	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	280	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	281	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	282	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	283	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	284	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	285	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	286	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	287	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	288	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	289	##ADDR##	footprnt	0	#HEAD#	#TAIL#	526
	290	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	291	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	292	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	293	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	28
	294	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	295	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	296	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	297	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	298	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	299	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	300	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	301	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	302	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	303	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	304	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	305	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	306	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	307	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	308	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	309	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	310	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	311	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	312	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	313	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	314	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	315	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	316	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	317	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	318	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	319	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	320	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	321	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	322	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	323	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	324	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	325	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	326	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	327	##ADDR##	procdefn	0	#HEAD#	#TAIL#	127
	328	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	329	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	330	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	331	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	332	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	333	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	334	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	335	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	336	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	337	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	338	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	339	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	340	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	341	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	342	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	343	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	344	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	345	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	346	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	347	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	348	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	349	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	350	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	351	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	352	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	353	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	354	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	355	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	356	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	357	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	358	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	359	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	360	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	361	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	362	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	363	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	364	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	365	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	366	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	367	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	368	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	369	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	370	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	371	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	372	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	373	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	374	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	375	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	376	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	17
	377	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	378	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	379	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	380	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	381	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	382	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	383	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	384	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	385	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	386	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	387	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	388	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	25
	389	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	390	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	391	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	392	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	393	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	394	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	395	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	396	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	397	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	398	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	399	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	400	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	401	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	402	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	29
	403	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	404	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	405	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	406	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	407	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	408	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	409	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	410	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	411	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	412	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	413	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	414	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	415	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	416	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	417	##ADDR##	footprnt	0	#HEAD#	#TAIL#	712
	418	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	419	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	420	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	421	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	422	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	423	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	424	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	425	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  10 definitions
  0 typedefs
  Definitions:
    bool_sink = process-definition (defined) bool_sink(
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        B = channel chan?(bool<>)^0 = bool_sink::B (1) 
        b = bool^0 = bool_sink::b (1) 
        Created state:
        channel instance pool:
        1	bool_sink::B
        bool instance pool:
        1	bool_sink::b
        resolved concurrent actions:
          *[
            B?(b)
          ]
        chp events: {
          event[0]: receive: B?(b), #pred: 1, succ: 0 
        }
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <1, {0}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 0
            }
          N = pint^0 value: 1
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(false)
              }
            ]
          chp events: {
            event[0]: send: S!(false), #pred: 1, succ: 0 
          }
        }
        <3, {0,0,1}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 0
              1 = 0
              2 = 1
            }
          N = pint^0 value: 3
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(false)
                S!(false)
                S!(true)
              }
            ]
          chp events: {
            event[0]: send: S!(false), #pred: 1, succ: 2 
            event[1]: send: S!(true), #pred: 1, succ: 0 
            event[2]: send: S!(false), #pred: 1, succ: 1 
          }
        }
        <4, {1,0,0,1}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
              2 = 0
              3 = 1
            }
          N = pint^0 value: 4
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(false)
                S!(false)
                S!(true)
              }
            ]
          chp events: {
            event[0]: send: S!(true), #pred: 1, succ: 3 
            event[1]: send: S!(true), #pred: 1, succ: 0 
            event[2]: send: S!(false), #pred: 1, succ: 1 
            event[3]: send: S!(false), #pred: 1, succ: 2 
          }
        }
      }
      }

    bool_source_constant = process-definition (defined) bool_source_constant<>
<
      pbool<> V
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_constant", we have: {
      Parameters:
        V = pbool<> bool_source_constant::V
      Instances:
        S = chan!(bool<>) bool_source_constant::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    bool_source_delay = process-definition (defined) bool_source_delay<>
<
      pint<> N
      pbool<> B[0..N-1]
      preal<> D
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_delay", we have: {
      Parameters:
        B = pbool<> bool_source_delay::B^1
        D = preal<> bool_source_delay::D
        N = pint<> bool_source_delay::N
      Instances:
        S = chan!(bool<>) bool_source_delay::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              [after=D] S!(B[$i])
            }
          ]
        }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

    bool_source_shared = process-definition (defined) bool_source_shared<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan?() Cin
        chan!() Cout
        chan!!(bool<>) S
      )
      In definition "bool_source_shared", we have: {
      Parameters:
        B = pbool<> bool_source_shared::B^1
        N = pint<> bool_source_shared::N
      Instances:
        Cin = chan?() bool_source_shared::Cin
        Cout = chan!() bool_source_shared::Cout
        S = chan!!(bool<>) bool_source_shared::S
      unroll sequence: 
        chan?() Cin
        chan!() Cout
        chan!!(bool<>) S
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              concurrent i:[0..N-1]: {
                S!(B[$i])
              }
              Cout!
            }
          ]
        }
      }

    bool_xor = process-definition (defined) bool_xor<
      pint<> N
      >(
        chan?(bool<>) A[0..N-1]
        chan!(bool<>) O
      )
      In definition "bool_xor", we have: {
      Parameters:
        N = pint<> bool_xor::N
      Instances:
        A = chan?(bool<>) bool_xor::A^1
        O = chan!(bool<>) bool_xor::O
        a = bool<> bool_xor::a^1
      unroll sequence: 
        chan?(bool<>) A[0..N-1]
        chan!(bool<>) O
        bool<> a[0..N-1]
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent i:[0..N-1]: {
                A[$i]?(a[$i])
              }
              O!((!=:i:[0..N-1]: a[$i]))
            }
          ]
        }
      footprint collection: {
        <3> {
          A = channel chan?(bool<>)^1
            {
              [0] = bool_xor::A[0] (2) 
              [1] = bool_xor::A[1] (3) 
              [2] = bool_xor::A[2] (4) 
            }
          N = pint^0 value: 3
          O = channel chan!(bool<>)^0 = bool_xor::O (1) 
          a = bool^1
            {
              [0] = bool_xor::a[0] (1) 
              [1] = bool_xor::a[1] (2) 
              [2] = bool_xor::a[2] (3) 
            }
          Created state:
          channel instance pool:
          1	bool_xor::O
          2	bool_xor::A[0]
          3	bool_xor::A[1]
          4	bool_xor::A[2]
          bool instance pool:
          1	bool_xor::a[0]
          2	bool_xor::a[1]
          3	bool_xor::a[2]
          resolved concurrent actions:
            *[
              sequential: {
                concurrent: {
                  A[0]?(a[0])
                  A[1]?(a[1])
                  A[2]?(a[2])
                }
                O!(a[0]!=a[1]!=a[2])
              }
            ]
          chp events: {
            event[0]: fork: , #pred: 1, succ: 3 4 5 
            event[1]: send: O!(a[0]!=a[1]!=a[2]), #pred: 1, succ: 0 
            event[2]: join: , #pred: 3, succ: 1 
            event[3]: receive: A[0]?(a[0]), #pred: 1, succ: 2 
            event[4]: receive: A[1]?(a[1]), #pred: 1, succ: 2 
            event[5]: receive: A[2]?(a[2]), #pred: 1, succ: 2 
          }
        }
      }
      }

    bool_xor_2 = process-definition (defined) bool_xor_2(
        chan?(bool<>) A
        chan?(bool<>) B
        chan!(bool<>) O
      )
      In definition "bool_xor_2", we have: {
      Instances:
        A = chan?(bool<>) bool_xor_2::A
        B = chan?(bool<>) bool_xor_2::B
        O = chan!(bool<>) bool_xor_2::O
        a = bool<> bool_xor_2::a
        b = bool<> bool_xor_2::b
      unroll sequence: 
        chan?(bool<>) A
        chan?(bool<>) B
        chan!(bool<>) O
        bool<> a
        bool<> b
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
              }
              O!(a!=b)
            }
          ]
        }
      }

  Instances:
    A = bool_xor<3> A
    In = chan(bool<>) In^1
    Out = chan(bool<>) Out
    S0 = bool_source<> S0
    S1 = bool_source<> S1
    S2 = bool_source<> S2
    Z = bool_sink<> Z
}

footprint: {
  A = process bool_xor<3>^0 = A (1) (
    A = channel chan?(bool<>)^1
      {
        [0] = In[0] (1) 
        [1] = In[1] (2) 
        [2] = In[2] (3) 
      }
    O = channel chan!(bool<>)^0 = Out (4) 
  )
  In = channel chan(bool<>)^1
    {
      [0] = In[0] (1) 
      [1] = In[1] (2) 
      [2] = In[2] (3) 
    }
  Out = channel chan(bool<>)^0 = Out (4) 
  S0 = process bool_source<>^0<1, {0}> = S0 (2) (
    S = channel chan!(bool<>)^0 = In[0] (1) 
  )
  S1 = process bool_source<>^0<3, {0,0,1}> = S1 (3) (
    S = channel chan!(bool<>)^0 = In[1] (2) 
  )
  S2 = process bool_source<>^0<4, {1,0,0,1}> = S2 (4) (
    S = channel chan!(bool<>)^0 = In[2] (3) 
  )
  Z = process bool_sink<>^0 = Z (5) (
    B = channel chan?(bool<>)^0 = Out (4) 
  )
  Created state:
  process instance pool:
  1	A
  2	S0<1, {0}>
  3	S1<3, {0,0,1}>
  4	S2<4, {1,0,0,1}>
  5	Z
  channel instance pool:
  1	In[0]
  2	In[1]
  3	In[2]
  4	Out
}
