
# process[1]:
event[1]: fork: *[{
  {
    X.A?(X.a),
    X.B?(X.b),
    X.C?(X.c),
    X.D?(X.d)
  };
  ...
}]
event[2]: send: *[{
  ...;
  X.G!(int(my_gcd(X.a,X.b))+int(my_gcd(X.c,X.d)))
}]
event[3]: join: *[{
  {
    X.A?(X.a),
    X.B?(X.b),
    X.C?(X.c),
    X.D?(X.d)
  };
  ...
}]
event[4]: receive: *[{
  {
    X.A?(X.a),
    ...,
    ...,
    ...
  };
  ...
}]
event[5]: receive: *[{
  {
    ...,
    X.B?(X.b),
    ...,
    ...
  };
  ...
}]
event[6]: receive: *[{
  {
    ...,
    ...,
    X.C?(X.c),
    ...
  };
  ...
}]
event[7]: receive: *[{
  {
    ...,
    ...,
    ...,
    X.D?(X.d)
  };
  ...
}]

# process[2]:
event[8]: send: *[{
  AS.S!(12);
  ...;
  ...;
  ...
}]
event[9]: send: *[{
  ...;
  ...;
  ...;
  AS.S!(30)
}]
event[10]: send: *[{
  ...;
  ...;
  AS.S!(17);
  ...
}]
event[11]: send: *[{
  ...;
  AS.S!(15);
  ...;
  ...
}]

# process[3]:
event[12]: send: *[{
  BS.S!(9);
  ...;
  ...;
  ...;
  ...
}]
event[13]: send: *[{
  ...;
  ...;
  ...;
  ...;
  BS.S!(34)
}]
event[14]: send: *[{
  ...;
  ...;
  ...;
  BS.S!(27);
  ...
}]
event[15]: send: *[{
  ...;
  ...;
  BS.S!(22);
  ...;
  ...
}]
event[16]: send: *[{
  ...;
  BS.S!(13);
  ...;
  ...;
  ...
}]

# process[4]:
event[17]: send: *[{
  CS.S!(15);
  ...;
  ...
}]
event[18]: send: *[{
  ...;
  ...;
  CS.S!(30)
}]
event[19]: send: *[{
  ...;
  CS.S!(24);
  ...
}]

# process[5]:
event[20]: send: *[{
  DS.S!(16);
  ...;
  ...;
  ...;
  ...;
  ...
}]
event[21]: send: *[{
  ...;
  ...;
  ...;
  ...;
  ...;
  DS.S!(28)
}]
event[22]: send: *[{
  ...;
  ...;
  ...;
  ...;
  DS.S!(36);
  ...
}]
event[23]: send: *[{
  ...;
  ...;
  ...;
  DS.S!(32);
  ...;
  ...
}]
event[24]: send: *[{
  ...;
  ...;
  DS.S!(20);
  ...;
  ...;
  ...
}]
event[25]: send: *[{
  ...;
  DS.S!(18);
  ...;
  ...;
  ...;
  ...
}]

# process[6]:
event[26]: receive: *[GS.B?(GS.b)]
