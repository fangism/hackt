
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	14	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	32
	15	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	16	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	17	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	18	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	19	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	21	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	22	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	24	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	25	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	27	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	28	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	29	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	31	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	32	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	34	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	28
	35	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	36	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	37	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	39	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	41	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	42	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	43	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	46	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	48	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	49	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	50	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	51	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	52	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	55	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	56	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	58	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	59	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	61	##ADDR##	footprnt	0	#HEAD#	#TAIL#	710
	62	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  0 definitions
  0 typedefs
  Instances:
    a = bool<> a
    b = bool<> b
    c = bool<> c
    d = bool<> d
}

top-level chp:
  concurrent: {
    sequential: {
      concurrent: {
        a := false
        b := false
        c := false
        d := false
      }
      concurrent: {
        b := true
        a := true
      }
      concurrent: {
        deterministic: {
          a -> c := true
          else -> skip
        }
        deterministic: {
          b -> d := true
          else -> skip
        }
        sequential: {
          [c&&d]
          concurrent: {
            c := false
            d := false
          }
        }
      }
    }
  }
footprint: {
  a = bool^0 = a (1) 
  b = bool^0 = b (2) 
  c = bool^0 = c (3) 
  d = bool^0 = d (4) 
  Created state:
  bool instance pool:
  1	a
  2	b
  3	c
  4	d
  resolved concurrent actions:
    sequential: {
      concurrent: {
        a := false
        b := false
        c := false
        d := false
      }
      concurrent: {
        b := true
        a := true
      }
      concurrent: {
        deterministic: {
          a -> c := true
          else -> skip
        }
        deterministic: {
          b -> d := true
          else -> skip
        }
        sequential: {
          [c&&d]
          concurrent: {
            c := false
            d := false
          }
        }
      }
    }
  chp events: {
    event[0]: fork: , #pred: 1, succ: 18 19 20 21 
    event[1]: null: null, #pred: 1, succ: 22 
    event[2]: assign: c := true, #pred: 1, succ: 1 
    event[3]: select: [ a -> ... [] else -> ... ], #pred: 1, succ: 2 1 
    event[4]: null: null, #pred: 1, succ: 22 
    event[5]: assign: d := true, #pred: 1, succ: 4 
    event[6]: select: [ b -> ... [] else -> ... ], #pred: 1, succ: 5 4 
    event[7]: null: , #pred: 2, succ: 22 
    event[8]: assign: c := false, #pred: 1, succ: 7 
    event[9]: assign: d := false, #pred: 1, succ: 7 
    event[10]: fork: , #pred: 1, succ: 8 9 
    event[11]: wait: [c&&d], #pred: 1, succ: 10 
    event[12]: fork: , #pred: 1, succ: 3 6 11 
    event[13]: null: , #pred: 2, succ: 12 
    event[14]: assign: b := true, #pred: 1, succ: 13 
    event[15]: assign: a := true, #pred: 1, succ: 13 
    event[16]: fork: , #pred: 1, succ: 14 15 
    event[17]: null: , #pred: 4, succ: 16 
    event[18]: assign: a := false, #pred: 1, succ: 17 
    event[19]: assign: b := false, #pred: 1, succ: 17 
    event[20]: assign: c := false, #pred: 1, succ: 17 
    event[21]: assign: d := false, #pred: 1, succ: 17 
    event[22]: null: , #pred: 3, succ: 
  }
}
