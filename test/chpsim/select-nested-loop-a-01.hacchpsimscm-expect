"critical-path:"
(79 720.0 6 . 77)
(77 710.0 7 . 76)
(76 700.0 9 . 75)
(75 690.0 17 . 74)
(74 680.0 2 . 73)
(73 670.0 3 . 72)
(72 660.0 8 . 71)
(71 650.0 9 . 70)
(70 640.0 17 . 69)
(69 630.0 2 . 68)
(68 620.0 10 . 67)
(67 610.0 11 . 66)
(66 600.0 13 . 64)
(64 590.0 14 . 63)
(63 580.0 16 . 62)
(62 570.0 17 . 61)
(61 560.0 2 . 60)
(60 550.0 10 . 59)
(59 540.0 15 . 58)
(58 530.0 16 . 57)
(57 520.0 17 . 56)
(56 510.0 2 . 55)
(55 500.0 3 . 54)
(54 490.0 4 . 53)
(53 480.0 6 . 51)
(51 470.0 7 . 50)
(50 460.0 9 . 49)
(49 450.0 17 . 48)
(48 440.0 2 . 47)
(47 430.0 3 . 46)
(46 420.0 8 . 45)
(45 410.0 9 . 44)
(44 400.0 17 . 43)
(43 390.0 2 . 42)
(42 380.0 10 . 41)
(41 370.0 11 . 40)
(40 360.0 13 . 38)
(38 350.0 14 . 37)
(37 340.0 16 . 36)
(36 330.0 17 . 35)
(35 320.0 2 . 34)
(34 310.0 10 . 33)
(33 300.0 15 . 32)
(32 290.0 16 . 31)
(31 280.0 17 . 30)
(30 270.0 2 . 29)
(29 260.0 3 . 28)
(28 250.0 4 . 27)
(27 240.0 6 . 25)
(25 230.0 7 . 24)
(24 220.0 9 . 23)
(23 210.0 17 . 22)
(22 200.0 2 . 21)
(21 190.0 3 . 20)
(20 180.0 8 . 19)
(19 170.0 9 . 18)
(18 160.0 17 . 17)
(17 150.0 2 . 16)
(16 140.0 10 . 15)
(15 130.0 11 . 14)
(14 120.0 13 . 12)
(12 110.0 14 . 11)
(11 100.0 16 . 10)
(10 90.0 17 . 9)
(9 80.0 2 . 8)
(8 70.0 10 . 7)
(7 60.0 15 . 6)
(6 50.0 16 . 5)
(5 40.0 17 . 4)
(4 30.0 20 . 3)
(3 20.0 19 . 1)
(1 10.0 1 . 0)
(0 0.0 0 . 0)
"all static events:"
(0 . #<raw-chpsim-event-node: fork: null, #pred: 0, succ: 1 
>)
(1 . #<raw-chpsim-event-node: fork: , pid: 0, #pred: 1, succ: 18 19 
>)
(2 . #<raw-chpsim-event-node: null: null, pid: 0, #pred: 1, succ: 17 
>)
(3 . #<raw-chpsim-event-node: null: null, pid: 0, #pred: 1, succ: 2 
>)
(4 . #<raw-chpsim-event-node: join: , pid: 0, #pred: 2, succ: 3 
>)
(5 . #<raw-chpsim-event-node: assign: a := false, pid: 0, #pred: 1, succ: 4 
>)
(6 . #<raw-chpsim-event-node: assign: b := false, pid: 0, #pred: 1, succ: 4 
>)
(7 . #<raw-chpsim-event-node: fork: , pid: 0, #pred: 1, succ: 5 6 
>)
(8 . #<raw-chpsim-event-node: assign: b := true, pid: 0, #pred: 1, succ: 3 
>)
(9 . #<raw-chpsim-event-node: select: [ b -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 7 8 
>)
(10 . #<raw-chpsim-event-node: null: null, pid: 0, #pred: 1, succ: 2 
>)
(11 . #<raw-chpsim-event-node: join: , pid: 0, #pred: 2, succ: 10 
>)
(12 . #<raw-chpsim-event-node: assign: a := true, pid: 0, #pred: 1, succ: 11 
>)
(13 . #<raw-chpsim-event-node: assign: b := false, pid: 0, #pred: 1, succ: 11 
>)
(14 . #<raw-chpsim-event-node: fork: , pid: 0, #pred: 1, succ: 12 13 
>)
(15 . #<raw-chpsim-event-node: assign: b := true, pid: 0, #pred: 1, succ: 10 
>)
(16 . #<raw-chpsim-event-node: select: [ b -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 14 15 
>)
(17 . #<raw-chpsim-event-node: select: [ a -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 9 16 
>)
(18 . #<raw-chpsim-event-node: assign: a := false, pid: 0, #pred: 1, succ: 20 
>)
(19 . #<raw-chpsim-event-node: assign: b := false, pid: 0, #pred: 1, succ: 20 
>)
(20 . #<raw-chpsim-event-node: join: , pid: 0, #pred: 2, succ: 17 
>)
"all select-events:"
(9 . #<raw-chpsim-event-node: select: [ b -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 7 8 
>)
(16 . #<raw-chpsim-event-node: select: [ b -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 14 15 
>)
(17 . #<raw-chpsim-event-node: select: [ a -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 9 16 
>)
"successors (cdr) of select events (car):"
(9 7 8)
(16 14 15)
(17 9 16)
"list of successor lists, associated by common predecessor:"
((9 7 8) (16 14 15) (17 9 16))
"re-structure into branch-predecessor pairs association:"
(((7 . 9) (8 . 9)) ((14 . 16) (15 . 16)) ((9 . 17) (16 . 17)))
"flatten into single associative list:"
((7 . 9) (8 . 9) (14 . 16) (15 . 16) (9 . 17) (16 . 17))
"and sort (predecessor cdr is branch):"
((7 . 9) (8 . 9) (9 . 17) (14 . 16) (15 . 16) (16 . 17))
"do some associative lookups O(n):"
9
9
17
#f
"do some list lookups on list of successor-lists:"
(7 8)
#f
(14 15)
(9 16)
"make a zero-initialized histogram from successor-lists:"
((9 (7 . 0) (8 . 0)) (16 (14 . 0) (15 . 0)) (17 (9 . 0) (16 . 0)))
