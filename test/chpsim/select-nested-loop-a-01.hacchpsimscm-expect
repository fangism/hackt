"critical-path:"
(79 700.0 2 . 78)
(78 690.0 10 . 77)
(77 680.0 15 . 76)
(76 670.0 2 . 75)
(75 660.0 3 . 74)
(74 650.0 4 . 73)
(73 640.0 6 . 71)
(71 630.0 7 . 70)
(70 620.0 2 . 69)
(69 610.0 3 . 68)
(68 600.0 8 . 67)
(67 590.0 2 . 66)
(66 580.0 10 . 65)
(65 570.0 11 . 64)
(64 560.0 13 . 62)
(62 550.0 14 . 61)
(61 540.0 2 . 60)
(60 530.0 10 . 59)
(59 520.0 15 . 58)
(58 510.0 2 . 57)
(57 500.0 3 . 56)
(56 490.0 4 . 55)
(55 480.0 6 . 53)
(53 470.0 7 . 52)
(52 460.0 2 . 51)
(51 450.0 3 . 50)
(50 440.0 8 . 49)
(49 430.0 2 . 48)
(48 420.0 10 . 47)
(47 410.0 11 . 46)
(46 400.0 13 . 44)
(44 390.0 14 . 43)
(43 380.0 2 . 42)
(42 370.0 10 . 41)
(41 360.0 15 . 40)
(40 350.0 2 . 39)
(39 340.0 3 . 38)
(38 330.0 4 . 37)
(37 320.0 6 . 35)
(35 310.0 7 . 34)
(34 300.0 2 . 33)
(33 290.0 3 . 32)
(32 280.0 8 . 31)
(31 270.0 2 . 30)
(30 260.0 10 . 29)
(29 250.0 11 . 28)
(28 240.0 13 . 26)
(26 230.0 14 . 25)
(25 220.0 2 . 24)
(24 210.0 10 . 23)
(23 200.0 15 . 22)
(22 190.0 2 . 21)
(21 180.0 3 . 20)
(20 170.0 4 . 19)
(19 160.0 6 . 17)
(17 150.0 7 . 16)
(16 140.0 2 . 15)
(15 130.0 3 . 14)
(14 120.0 8 . 13)
(13 110.0 2 . 12)
(12 100.0 10 . 11)
(11 90.0 11 . 10)
(10 80.0 13 . 8)
(8 70.0 14 . 7)
(7 60.0 2 . 6)
(6 50.0 10 . 5)
(5 40.0 15 . 4)
(4 30.0 1 . 3)
(3 20.0 19 . 1)
(1 10.0 20 . 0)
(0 0.0 0 . 0)
"all static events:"
(0 . #<raw-chpsim-event-node: fork: null, pid: 0, #pred: 0, succ: 20 
>)
(1 . #<raw-chpsim-event-node: null: , pid: 0, #pred: 2, succ: 17 
>)
(2 . #<raw-chpsim-event-node: null: null, pid: 0, #pred: 1, succ: 17 
>)
(3 . #<raw-chpsim-event-node: null: null, pid: 0, #pred: 1, succ: 2 
>)
(4 . #<raw-chpsim-event-node: null: , pid: 0, #pred: 2, succ: 3 
>)
(5 . #<raw-chpsim-event-node: assign: a := false, pid: 0, #pred: 1, succ: 4 
>)
(6 . #<raw-chpsim-event-node: assign: b := false, pid: 0, #pred: 1, succ: 4 
>)
(7 . #<raw-chpsim-event-node: fork: , pid: 0, #pred: 1, succ: 5 6 
>)
(8 . #<raw-chpsim-event-node: assign: b := true, pid: 0, #pred: 1, succ: 3 
>)
(9 . #<raw-chpsim-event-node: select: , pid: 0, #pred: 1, succ: 7 8 
>)
(10 . #<raw-chpsim-event-node: null: null, pid: 0, #pred: 1, succ: 2 
>)
(11 . #<raw-chpsim-event-node: null: , pid: 0, #pred: 2, succ: 10 
>)
(12 . #<raw-chpsim-event-node: assign: a := true, pid: 0, #pred: 1, succ: 11 
>)
(13 . #<raw-chpsim-event-node: assign: b := false, pid: 0, #pred: 1, succ: 11 
>)
(14 . #<raw-chpsim-event-node: fork: , pid: 0, #pred: 1, succ: 12 13 
>)
(15 . #<raw-chpsim-event-node: assign: b := true, pid: 0, #pred: 1, succ: 10 
>)
(16 . #<raw-chpsim-event-node: select: , pid: 0, #pred: 1, succ: 14 15 
>)
(17 . #<raw-chpsim-event-node: select: , pid: 0, #pred: 1, succ: 9 16 
>)
(18 . #<raw-chpsim-event-node: assign: a := false, pid: 0, #pred: 1, succ: 1 
>)
(19 . #<raw-chpsim-event-node: assign: b := false, pid: 0, #pred: 1, succ: 1 
>)
(20 . #<raw-chpsim-event-node: fork: , pid: 0, #pred: 1, succ: 18 19 
>)
"all select-events:"
(9 . #<raw-chpsim-event-node: select: , pid: 0, #pred: 1, succ: 7 8 
>)
(16 . #<raw-chpsim-event-node: select: , pid: 0, #pred: 1, succ: 14 15 
>)
(17 . #<raw-chpsim-event-node: select: , pid: 0, #pred: 1, succ: 9 16 
>)
"successors (cdr) of select events (car):"
(9 7 8)
(16 14 15)
(17 9 16)
"list of successor lists, associated by common predecessor:"
((9 7 8) (16 14 15) (17 9 16))
"re-structure into branch-predecessor pairs association:"
(((7 . 9) (8 . 9)) ((14 . 16) (15 . 16)) ((9 . 17) (16 . 17)))
"flatten into single associative list:"
((7 . 9) (8 . 9) (14 . 16) (15 . 16) (9 . 17) (16 . 17))
"and sort (predecessor cdr is branch):"
((7 . 9) (8 . 9) (9 . 17) (14 . 16) (15 . 16) (16 . 17))
"do some associative lookups O(n):"
9
9
17
#f
"do some list lookups on list of successor-lists:"
(7 8)
#f
(14 15)
(9 16)
"make a zero-initialized histogram from successor-lists:"
((9 (7 . 0) (8 . 0)) (16 (14 . 0) (15 . 0)) (17 (9 . 0) (16 . 0)))
