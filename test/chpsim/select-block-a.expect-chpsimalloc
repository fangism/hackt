Variables: 
bool[1]: "!GND" 
bool[2]: "!Vdd" 
bool[3]: "a" 
bool[4]: "b" 
bool[5]: "c" 
bool[6]: "e" 

Event graph: 
event[0]: fork: null, #pred: 0, succ: 1 

# process[0]:
event[1]: fork: , pid: 0, #pred: 1, succ: 27 28 
event[2]: fork: , pid: 0, #pred: 1, succ: 18 25 
event[3]: null: null, pid: 0, #pred: 1, succ: 18 
event[4]: assign: b := true, pid: 0, #pred: 1, succ: 3 
event[5]: assign: a := false, pid: 0, #pred: 1, succ: 4 
event[6]: assign: a := true, pid: 0, #pred: 1, succ: 3 
event[7]: assign: b := false, pid: 0, #pred: 1, succ: 6 
event[8]: select: [ c -> ... [] else -> ... ], pid: 0, #pred: 1, succ: 5 7 
event[9]: assign: b := false, pid: 0, #pred: 1, succ: 8 
event[10]: assign: a := false, pid: 0, #pred: 1, succ: 9 
event[11]: assign: b := false, pid: 0, #pred: 1, succ: 10 
event[12]: assign: a := false, pid: 0, #pred: 1, succ: 11 
event[13]: assign: e := true, pid: 0, #pred: 1, succ: 12 
event[14]: join: , pid: 0, #pred: 2, succ: 13 
event[15]: assign: a := false, pid: 0, #pred: 1, succ: 14 
event[16]: assign: b := false, pid: 0, #pred: 1, succ: 14 
event[17]: fork: , pid: 0, #pred: 1, succ: 15 16 
event[18]: wait: [~e], pid: 0, #pred: 1, succ: 17 
bool deps: 6 
event[19]: assign: e := false, pid: 0, #pred: 1, succ: 25 
event[20]: assign: c := ~c, pid: 0, #pred: 1, succ: 19 
event[21]: null: null, pid: 0, #pred: 1, succ: 20 
event[22]: assign: c := c, pid: 0, #pred: 1, succ: 21 
event[23]: assign: c := c, pid: 0, #pred: 1, succ: 21 
event[24]: select: [ a -> ... [] b -> ... ], pid: 0, #pred: 1, succ: 22 23 
bool deps: 3 4 
event[25]: wait: [e], pid: 0, #pred: 1, succ: 24 
bool deps: 6 
event[26]: join: , pid: 0, #pred: 2, succ: 2 
event[27]: assign: c := false, pid: 0, #pred: 1, succ: 26 
event[28]: assign: e := false, pid: 0, #pred: 1, succ: 26 

