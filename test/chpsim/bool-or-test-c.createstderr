
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	76
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	26
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procdefn	0	#HEAD#	#TAIL#	124
	9	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	21	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	22	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	24	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	31	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	32	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	33	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	36	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	37	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	38	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	39	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	40	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	41	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	42	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	44	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	45	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	46	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	47	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	49	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	50	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	51	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	52	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	nlgclpex	0	#HEAD#	#TAIL#	26
	54	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	55	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	58	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	60	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	62	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	63	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	64	##ADDR##	footprnt	0	#HEAD#	#TAIL#	526
	65	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	66	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	67	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	68	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	70	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	28
	71	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	72	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	79	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	86	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	88	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	89	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	91	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	92	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	93	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	94	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	95	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	99	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	102	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	103	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	104	##ADDR##	procdefn	0	#HEAD#	#TAIL#	126
	105	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	106	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	107	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	108	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	109	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	110	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	111	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	112	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	113	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	114	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	115	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	116	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	117	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	118	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	119	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	120	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	121	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	122	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	123	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	124	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	125	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	126	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	127	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	128	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	129	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	130	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	131	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	22
	132	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	133	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	134	##ADDR##	procdefn	0	#HEAD#	#TAIL#	102
	135	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	136	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	137	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	138	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	139	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	140	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	141	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	142	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	143	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	144	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	146	##ADDR##	footprnt	0	#HEAD#	#TAIL#	309
	147	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	148	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	150	##ADDR##	procdefn	0	#HEAD#	#TAIL#	108
	151	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	152	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	153	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	154	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	155	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	156	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	157	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	158	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	159	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	160	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	161	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	162	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	163	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	164	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	165	##ADDR##	procdefn	0	#HEAD#	#TAIL#	107
	166	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	167	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	168	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	169	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	170	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	171	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	172	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	173	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	174	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	175	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	176	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	177	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	178	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	179	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	180	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	181	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	182	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	183	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	184	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	185	##ADDR##	procdefn	0	#HEAD#	#TAIL#	152
	186	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	187	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	188	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	189	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	190	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	191	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	192	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	193	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	194	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	195	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	196	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	197	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	198	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	199	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	200	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	201	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	202	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	203	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	204	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	205	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	206	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	207	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	208	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	209	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	210	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	211	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	212	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	213	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	214	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	25
	215	##ADDR##	footprnt	0	#HEAD#	#TAIL#	328
	216	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	217	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	218	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	20
	219	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	220	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	221	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	222	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	27
	223	##ADDR##	footprnt	0	#HEAD#	#TAIL#	370
	224	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	225	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	226	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	28
	227	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	228	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	229	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	230	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	231	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	232	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	233	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	234	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	28
	235	##ADDR##	footprnt	0	#HEAD#	#TAIL#	391
	236	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	237	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	238	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	32
	239	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	240	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	241	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	242	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	243	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	244	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	245	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	246	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	247	##ADDR##	procdefn	0	#HEAD#	#TAIL#	105
	248	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	249	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	250	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	251	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	252	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	253	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	254	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	255	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	256	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	257	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	258	##ADDR##	procdefn	0	#HEAD#	#TAIL#	118
	259	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	260	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	261	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	262	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	263	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	264	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	265	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	266	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	267	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	268	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	269	##ADDR##	prealplh	0	#HEAD#	#TAIL#	29
	270	##ADDR##	prealins	0	#HEAD#	#TAIL#	16
	271	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	272	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	273	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	274	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	275	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	276	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	277	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	278	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	279	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	280	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	281	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	282	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	283	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	284	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	16
	285	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	286	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	287	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	288	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	289	##ADDR##	procdefn	0	#HEAD#	#TAIL#	109
	290	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	291	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	292	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	293	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	294	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	295	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	296	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	297	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	298	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	299	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	300	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	301	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	302	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	303	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	304	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	305	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	306	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	307	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	308	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	309	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	310	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	311	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	312	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	313	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	314	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	315	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	316	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	317	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	318	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	319	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	320	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	321	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	322	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	323	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	324	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	325	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	326	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	327	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	328	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	329	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	330	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	331	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	332	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	333	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	334	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	335	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	336	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	337	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	338	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	17
	339	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	340	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	341	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	342	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	343	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	344	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	345	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	25
	346	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	347	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	348	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	349	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	350	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	351	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	352	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	353	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	354	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	29
	355	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	356	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	357	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	358	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	359	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	360	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	361	##ADDR##	cnstrng_	0	#HEAD#	#TAIL#	16
	362	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	363	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	364	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	365	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	366	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	367	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	368	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	369	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	370	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	371	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	20
	372	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	373	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	374	##ADDR##	footprnt	0	#HEAD#	#TAIL#	716
	375	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	376	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	377	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	378	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	379	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	380	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  9 definitions
  0 typedefs
  Definitions:
    bool_or = process-definition (defined) bool_or<
      pint<> N
      >(
        chan?(bool<>) A[0..N-1]
        chan!(bool<>) O
      )
      In definition "bool_or", we have: {
      Parameters:
        N = pint<> bool_or::N
      Instances:
        A = chan?(bool<>) bool_or::A^1
        O = chan!(bool<>) bool_or::O
        a = bool<> bool_or::a^1
      unroll sequence: 
        chan?(bool<>) A[0..N-1]
        chan!(bool<>) O
        bool<> a[0..N-1]
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent i:[0..N-1]: {
                A[$i]?(a[$i])
              }
              O!((||:i:[0..N-1]: a[$i]))
            }
          ]
        }
      footprint collection: {
        <3> {
          A = channel chan?(bool<>)^1
            {
              [0] = bool_or::A[0] (2) 
              [1] = bool_or::A[1] (3) 
              [2] = bool_or::A[2] (4) 
            }
          N = pint^0 value: 3
          O = channel chan!(bool<>)^0 = bool_or::O (1) 
          a = bool^1
            {
              [0] = bool_or::a[0] (1) 
              [1] = bool_or::a[1] (2) 
              [2] = bool_or::a[2] (3) 
            }
          Created state:
          channel instance pool:
          1	bool_or::O
          2	bool_or::A[0]
          3	bool_or::A[1]
          4	bool_or::A[2]
          bool instance pool:
          1	bool_or::a[0]
          2	bool_or::a[1]
          3	bool_or::a[2]
          resolved concurrent actions:
            *[
              sequential: {
                concurrent: {
                  A[0]?(a[0])
                  A[1]?(a[1])
                  A[2]?(a[2])
                }
                O!(a[0]||a[1]||a[2])
              }
            ]
          chp events: {
            event[0]: fork: , #pred: 1, succ: 3 4 5 
            event[1]: send: O!(a[0]||a[1]||a[2]), #pred: 1, succ: 0 
            event[2]: join: , #pred: 3, succ: 1 
            event[3]: receive: A[0]?(a[0]), #pred: 1, succ: 2 
            event[4]: receive: A[1]?(a[1]), #pred: 1, succ: 2 
            event[5]: receive: A[2]?(a[2]), #pred: 1, succ: 2 
          }
        }
      }
      }

    bool_or_2 = process-definition (defined) bool_or_2(
        chan?(bool<>) A
        chan?(bool<>) B
        chan!(bool<>) O
      )
      In definition "bool_or_2", we have: {
      Instances:
        A = chan?(bool<>) bool_or_2::A
        B = chan?(bool<>) bool_or_2::B
        O = chan!(bool<>) bool_or_2::O
        a = bool<> bool_or_2::a
        b = bool<> bool_or_2::b
      unroll sequence: 
        chan?(bool<>) A
        chan?(bool<>) B
        chan!(bool<>) O
        bool<> a
        bool<> b
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
              }
              O!(a||b)
            }
          ]
        }
      }

    bool_sink = process-definition (defined) bool_sink(
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        B = channel chan?(bool<>)^0 = bool_sink::B (1) 
        b = bool^0 = bool_sink::b (1) 
        Created state:
        channel instance pool:
        1	bool_sink::B
        bool instance pool:
        1	bool_sink::b
        resolved concurrent actions:
          *[
            B?(b)
          ]
        chp events: {
          event[0]: receive: B?(b), #pred: 1, succ: 0 
        }
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <1, {0}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 0
            }
          N = pint^0 value: 1
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(false)
              }
            ]
          chp events: {
            event[0]: send: S!(false), #pred: 1, succ: 0 
          }
        }
        <3, {0,0,1}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 0
              1 = 0
              2 = 1
            }
          N = pint^0 value: 3
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(false)
                S!(false)
                S!(true)
              }
            ]
          chp events: {
            event[0]: send: S!(false), #pred: 1, succ: 2 
            event[1]: send: S!(true), #pred: 1, succ: 0 
            event[2]: send: S!(false), #pred: 1, succ: 1 
          }
        }
        <4, {1,0,0,0}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
              2 = 0
              3 = 0
            }
          N = pint^0 value: 4
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(false)
                S!(false)
                S!(false)
              }
            ]
          chp events: {
            event[0]: send: S!(true), #pred: 1, succ: 3 
            event[1]: send: S!(false), #pred: 1, succ: 0 
            event[2]: send: S!(false), #pred: 1, succ: 1 
            event[3]: send: S!(false), #pred: 1, succ: 2 
          }
        }
      }
      }

    bool_source_constant = process-definition (defined) bool_source_constant<>
<
      pbool<> V
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_constant", we have: {
      Parameters:
        V = pbool<> bool_source_constant::V
      Instances:
        S = chan!(bool<>) bool_source_constant::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    bool_source_delay = process-definition (defined) bool_source_delay<>
<
      pint<> N
      pbool<> B[0..N-1]
      preal<> D
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_delay", we have: {
      Parameters:
        B = pbool<> bool_source_delay::B^1
        D = preal<> bool_source_delay::D
        N = pint<> bool_source_delay::N
      Instances:
        S = chan!(bool<>) bool_source_delay::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              [after=D] S!(B[$i])
            }
          ]
        }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

  Instances:
    A = bool_or<3> A
    In = chan(bool<>) In^1
    Out = chan(bool<>) Out
    S = bool_source<> S^1
    Z = bool_sink<> Z
}

footprint: {
  A = process bool_or<3>^0 = A (1) (
    A = channel chan?(bool<>)^1
      {
        [0] = In[0] (1) 
        [1] = In[1] (2) 
        [2] = In[2] (3) 
      }
    O = channel chan!(bool<>)^0 = Out (4) 
  )
  In = channel chan(bool<>)^1
    {
      [0] = In[0] (1) 
      [1] = In[1] (2) 
      [2] = In[2] (3) 
    }
  Out = channel chan(bool<>)^0 = Out (4) 
  S = process bool_source<>^1
    {
      [0]<1, {0}> = S[0] (3) (
        S = channel chan!(bool<>)^0 = In[0] (1) 
      )
      [1]<3, {0,0,1}> = S[1] (4) (
        S = channel chan!(bool<>)^0 = In[1] (2) 
      )
      [2]<4, {1,0,0,0}> = S[2] (5) (
        S = channel chan!(bool<>)^0 = In[2] (3) 
      )
    }
  Z = process bool_sink<>^0 = Z (2) (
    B = channel chan?(bool<>)^0 = Out (4) 
  )
  Created state:
  process instance pool:
  1	A
  2	Z
  3	S[0]<1, {0}>
  4	S[1]<3, {0,0,1}>
  5	S[2]<4, {1,0,0,0}>
  channel instance pool:
  1	In[0]
  2	In[1]
  3	In[2]
  4	Out
}
