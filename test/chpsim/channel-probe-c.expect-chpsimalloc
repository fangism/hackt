Variables: 
bool[1]: "!GND" 
bool[2]: "!Vdd" 
bool[3]: "a" 
bool[4]: "x" 
bool[5]: "z" 
bool[6]: "snk0.b" 
bool[7]: "sink1.b" 
chan[1]: "A" 
chan[2]: "X" 
chan[3]: "B" 
chan[4]: "Z" 
chan[5]: "Y" 

Event graph: 
event[0]: fork: null, #pred: 0, succ: 1 11 13 15 16 

# process[0]:
event[1]: fork: , pid: 0, #pred: 1, succ: 4 2 
event[2]: wait: [#A&&#Y], pid: 0, #pred: 1, succ: 10 
channel deps: 1 5 
event[3]: send: Y!(x), pid: 0, #pred: 1, succ: 4 
channel deps: 5 
event[4]: receive: X?(x), pid: 0, #pred: 1, succ: 3 
channel deps: 2 
event[5]: join: , pid: 0, #pred: 2, succ: 2 
event[6]: send: B!(a), pid: 0, #pred: 1, succ: 5 
channel deps: 3 
event[7]: receive: A?(a), pid: 0, #pred: 1, succ: 6 
channel deps: 1 
event[8]: send: Z!(z), pid: 0, #pred: 1, succ: 5 
channel deps: 4 
event[9]: receive: Y?(z), pid: 0, #pred: 1, succ: 8 
channel deps: 5 
event[10]: fork: , pid: 0, #pred: 1, succ: 7 9 

# process[1]:
event[11]: send: bs.S!(true), pid: 1, #pred: 1, succ: 12 
channel deps: 1 
event[12]: send: bs.S!(false), pid: 1, #pred: 1, succ: 11 
channel deps: 1 

# process[2]:
event[13]: send: xs.S!(true), pid: 2, #pred: 1, succ: 14 
channel deps: 2 
event[14]: send: xs.S!(false), pid: 2, #pred: 1, succ: 13 
channel deps: 2 

# process[3]:
event[15]: receive: snk0.B?(snk0.b), pid: 3, #pred: 1, succ: 15 
channel deps: 3 

# process[4]:
event[16]: receive: sink1.B?(sink1.b), pid: 4, #pred: 1, succ: 16 
channel deps: 4 

