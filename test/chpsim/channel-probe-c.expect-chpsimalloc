Variables: 
bool[1]: "a" 
bool[2]: "x" 
bool[3]: "z" 
bool[4]: "snk0.b" 
bool[5]: "sink1.b" 
chan[1]: "A" 
chan[2]: "X" 
chan[3]: "B" 
chan[4]: "Z" 
chan[5]: "Y" 

Event graph: 
event[0]: fork: null, pid: 0, #pred: 0, succ: 11 12 14 16 17 
event[1]: null: , pid: 0, #pred: 2, succ: 
event[2]: receive: X?(x), pid: 0, #pred: 1, succ: 3 
channel deps: 2 
event[3]: send: Y!(x), pid: 0, #pred: 1, succ: 2 
channel deps: 5 
event[4]: null: [#A&&#Y], pid: 0, #pred: 1, succ: 10 
channel deps: 1 5 
event[5]: null: , pid: 0, #pred: 2, succ: 4 
event[6]: send: B!(a), pid: 0, #pred: 1, succ: 5 
channel deps: 3 
event[7]: receive: A?(a), pid: 0, #pred: 1, succ: 6 
channel deps: 1 
event[8]: send: Z!(z), pid: 0, #pred: 1, succ: 5 
channel deps: 4 
event[9]: receive: Y?(z), pid: 0, #pred: 1, succ: 8 
channel deps: 5 
event[10]: fork: , pid: 0, #pred: 1, succ: 7 9 
event[11]: fork: , pid: 0, #pred: 1, succ: 2 4 
event[12]: send: bool_source::S!(true), pid: 1, #pred: 1, succ: 13 
channel deps: 1 
event[13]: send: bool_source::S!(false), pid: 1, #pred: 1, succ: 12 
channel deps: 1 
event[14]: send: bool_source::S!(true), pid: 2, #pred: 1, succ: 15 
channel deps: 2 
event[15]: send: bool_source::S!(false), pid: 2, #pred: 1, succ: 14 
channel deps: 2 
event[16]: receive: bool_sink::B?(bool_sink::b), pid: 3, #pred: 1, succ: 16 
channel deps: 3 
event[17]: receive: bool_sink::B?(bool_sink::b), pid: 4, #pred: 1, succ: 17 
channel deps: 4 

