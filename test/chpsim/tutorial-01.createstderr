
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	68
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	10	##ADDR##	procdefn	0	#HEAD#	#TAIL#	129
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	13	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	16	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	23	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	24	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	29	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	30	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	31	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	32	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	35	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	37	##ADDR##	footprnt	0	#HEAD#	#TAIL#	392
	38	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	20
	39	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	40	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	41	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	43	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	44	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	45	##ADDR##	procdefn	0	#HEAD#	#TAIL#	134
	46	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	47	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	48	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	49	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	50	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	51	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	52	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	53	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	54	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	55	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	56	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	59	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	60	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	61	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	62	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	63	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	65	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	66	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	67	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	69	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	71	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	72	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	75	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	procdefn	0	#HEAD#	#TAIL#	122
	78	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	80	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	81	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	82	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	83	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	86	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	87	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	88	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	89	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	91	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	92	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	93	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	footprnt	0	#HEAD#	#TAIL#	355
	96	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	97	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	98	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	25
	99	##ADDR##	procdefn	0	#HEAD#	#TAIL#	140
	100	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	101	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	102	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	103	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	104	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	105	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	106	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	107	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	108	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	109	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	110	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	111	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	112	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	113	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	114	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	115	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	116	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	117	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	118	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	119	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	120	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	121	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	122	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	123	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	124	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	125	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	126	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	127	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	128	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	129	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	130	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	131	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	132	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	133	##ADDR##	footprnt	0	#HEAD#	#TAIL#	435
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	28
	136	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	137	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	138	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	32
	139	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	140	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	141	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	142	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	143	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	144	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	145	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	146	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	147	##ADDR##	procdefn	0	#HEAD#	#TAIL#	129
	148	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	149	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	150	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	29
	151	##ADDR##	pboolins	0	#HEAD#	#TAIL#	16
	152	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	153	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	154	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	155	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	156	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	157	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	158	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	159	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	160	##ADDR##	chanplch	0	#HEAD#	#TAIL#	25
	161	##ADDR##	portscop	0	#HEAD#	#TAIL#	24
	162	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	163	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	164	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	165	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	166	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	167	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	168	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	25
	169	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	170	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	171	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	172	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	173	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	174	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	175	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	24
	176	##ADDR##	schnnref	0	#HEAD#	#TAIL#	16
	177	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	16
	178	##ADDR##	nindlist	0	#HEAD#	#TAIL#	16
	179	##ADDR##	spinref_	0	#HEAD#	#TAIL#	16
	180	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	181	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	182	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	183	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	184	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	25
	185	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	186	##ADDR##	chaninst	0	#HEAD#	#TAIL#	20
	187	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	188	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	189	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	190	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	191	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	192	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	29
	193	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	194	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	195	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	196	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	197	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	198	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	199	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	200	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	201	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	202	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	203	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	204	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	205	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	206	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	207	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	208	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	209	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	210	##ADDR##	schnmref	0	#HEAD#	#TAIL#	16
	211	##ADDR##	footprnt	0	#HEAD#	#TAIL#	704
	212	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	213	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	214	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	215	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  0 sub-namespaces
  5 definitions
  0 typedefs
  Definitions:
    bool_buf = process-definition (defined) bool_buf(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) L
        chan!(bool<>) R
      )
      In definition "bool_buf", we have: {
      Instances:
        !GND = bool<> bool_buf::!GND
        !Vdd = bool<> bool_buf::!Vdd
        L = chan?(bool<>) bool_buf::L
        R = chan!(bool<>) bool_buf::R
        x = bool<> bool_buf::x
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) L
          chan!(bool<>) R
        )
        bool<> x
      chp:
        concurrent: {
          *[
            sequential: {
              L?(x)
              R!(x)
            }
          ]
        }
      footprint: {
        !GND = bool^0 = bool_buf<>::!GND (1) 
        !Vdd = bool^0 = bool_buf<>::!Vdd (2) 
        L = channel chan?(bool<>)^0 = bool_buf<>::L (1) 
        R = channel chan!(bool<>)^0 = bool_buf<>::R (2) 
        x = bool^0 = bool_buf<>::x (3) 
        Created state:
        channel instance pool: (2 ports, 0 local, 0 mapped)
        1	bool_buf<>::L	
        2	bool_buf<>::R	
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	bool_buf<>::!GND	
        2	bool_buf<>::!Vdd	
        3	bool_buf<>::x	
        resolved concurrent actions:
          *[
            sequential: {
              L?(x)
              R!(x)
            }
          ]
        chp events: {
          event[0]: receive: L?(x), #pred: 1, succ: 1 
          event[1]: send: R!(x), #pred: 1, succ: 0 
        }
      }
      }

    bool_buf_init = process-definition (defined) bool_buf_init<
      pbool<> B
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) L
        chan!(bool<>) R
      )
      In definition "bool_buf_init", we have: {
      Parameters:
        B = pbool<> bool_buf_init::B
      Instances:
        !GND = bool<> bool_buf_init::!GND
        !Vdd = bool<> bool_buf_init::!Vdd
        L = chan?(bool<>) bool_buf_init::L
        R = chan!(bool<>) bool_buf_init::R
        x = bool<> bool_buf_init::x
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) L
          chan!(bool<>) R
        )
        bool<> x
      chp:
        concurrent: {
          sequential: {
            x := B
            *[
              sequential: {
                R!(x)
                L?(x)
              }
            ]
          }
        }
      }

    bool_sink = process-definition (defined) bool_sink(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        !GND = bool<> bool_sink::!GND
        !Vdd = bool<> bool_sink::!Vdd
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        !GND = bool^0 = bool_sink<>::!GND (1) 
        !Vdd = bool^0 = bool_sink<>::!Vdd (2) 
        B = channel chan?(bool<>)^0 = bool_sink<>::B (1) 
        b = bool^0 = bool_sink<>::b (3) 
        Created state:
        channel instance pool: (1 ports, 0 local, 0 mapped)
        1	bool_sink<>::B	
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	bool_sink<>::!GND	
        2	bool_sink<>::!Vdd	
        3	bool_sink<>::b	
        resolved concurrent actions:
          *[
            B?(b)
          ]
        chp events: {
          event[0]: receive: B?(b), #pred: 1, succ: 0 
        }
      }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        !GND = bool<> bool_source::!GND
        !Vdd = bool<> bool_source::!Vdd
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <4, {0,0,1,1}> {
          !GND = bool^0 = bool_source<4, {0,0,1,1}>::!GND (1) 
          !Vdd = bool^0 = bool_source<4, {0,0,1,1}>::!Vdd (2) 
          B = pbool^1
            unrolled index-value pairs: {
              0 = 0
              1 = 0
              2 = 1
              3 = 1
            }
          N = pint^0 value: 4
          S = channel chan!(bool<>)^0 = bool_source<4, {0,0,1,1}>::S (1) 
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	bool_source<4, {0,0,1,1}>::S	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	bool_source<4, {0,0,1,1}>::!GND	
          2	bool_source<4, {0,0,1,1}>::!Vdd	
          resolved concurrent actions:
            *[
              sequential: {
                S!(false)
                S!(false)
                S!(true)
                S!(true)
              }
            ]
          chp events: {
            event[0]: send: S!(false), #pred: 1, succ: 3 
            event[1]: send: S!(true), #pred: 1, succ: 0 
            event[2]: send: S!(true), #pred: 1, succ: 1 
            event[3]: send: S!(false), #pred: 1, succ: 2 
          }
        }
      }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        !GND = bool<> bool_source_once::!GND
        !Vdd = bool<> bool_source_once::!Vdd
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(bool<>) S
        )
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    B = bool_buf<> B
    L = chan(bool<>) L
    R = chan(bool<>) R
    SNK = bool_sink<> SNK
    SRC = bool_source<> SRC
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  B = process bool_buf<>^0 = B (2) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    L = channel chan?(bool<>)^0 = L (1) 
    R = channel chan!(bool<>)^0 = R (2) 
  )
  L = channel chan(bool<>)^0 = L (1) 
  R = channel chan(bool<>)^0 = R (2) 
  SNK = process bool_sink<>^0 = SNK (3) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    B = channel chan?(bool<>)^0 = R (2) 
  )
  SRC = process bool_source<>^0<4, {0,0,1,1}> = SRC (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    S = channel chan!(bool<>)^0 = L (1) 
  )
  Created state:
  process instance pool: (0 ports, 3 local, 0 mapped)
  1	SRC<4, {0,0,1,1}>	bool_source<4, {0,0,1,1}>
    channel: 1
    bool: 1,2
  2	B	bool_buf<>
    channel: 1,2
    bool: 1,2
  3	SNK	bool_sink<>
    channel: 2
    bool: 1,2
  channel instance pool: (0 ports, 2 local, 0 mapped)
  1	L	
  2	R	
  bool instance pool: (0 ports, 2 local, 2 mapped)
  1	!GND	
  2	!Vdd	
  private sub-bool index map:
    (2 -> 0)
    (3 -> 1)
    (4 -> 2)
}
