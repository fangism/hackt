
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	40
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	7	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	9	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	11	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	12	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	13	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	14	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	15	##ADDR##	procplch	0	#HEAD#	#TAIL#	49
	16	##ADDR##	procdefn	0	#HEAD#	#TAIL#	254
	17	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	19	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	21	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	23	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	24	##ADDR##	datadefn	0	#HEAD#	#TAIL#	133
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	26	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	27	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	28	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	29	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	31	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	33	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	34	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	35	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	38	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	39	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	40	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	41	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	42	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	43	##ADDR##	footprnt	0	#HEAD#	#TAIL#	659
	44	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	41
	45	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	46	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	40
	47	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	48	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	49	##ADDR##	procdefn	0	#HEAD#	#TAIL#	260
	50	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	51	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	52	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	53	##ADDR##	prealplh	0	#HEAD#	#TAIL#	57
	54	##ADDR##	prealins	0	#HEAD#	#TAIL#	32
	55	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	56	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	57	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	58	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	59	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	60	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	61	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	62	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	63	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	64	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	65	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	67	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	69	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	71	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	72	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	73	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	74	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	75	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	32
	76	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	77	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	78	##ADDR##	procdefn	0	#HEAD#	#TAIL#	243
	79	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	80	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	81	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	82	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	83	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	84	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	85	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	86	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	87	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	88	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	89	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	90	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	91	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	92	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	93	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	94	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	95	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	96	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	98	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	99	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	100	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	101	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	102	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	103	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	104	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	105	##ADDR##	CHPfcall	0	#HEAD#	#TAIL#	24
	106	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	37
	107	##ADDR##	nexplist	0	#HEAD#	#TAIL#	40
	108	##ADDR##	cnstps__	0	#HEAD#	#TAIL#	35
	109	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	110	##ADDR##	procdefn	0	#HEAD#	#TAIL#	259
	111	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	112	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	113	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	114	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	115	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	116	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	117	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	118	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	119	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	120	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	121	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	122	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	123	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	124	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	125	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	126	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	127	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	128	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	129	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	130	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	132	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	133	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	134	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	135	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	136	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	137	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	138	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	139	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	140	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	141	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	142	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	143	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	144	##ADDR##	procdefn	0	#HEAD#	#TAIL#	261
	145	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	146	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	147	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	148	##ADDR##	chanplch	0	#HEAD#	#TAIL#	51
	149	##ADDR##	chanplch	0	#HEAD#	#TAIL#	52
	150	##ADDR##	portscop	0	#HEAD#	#TAIL#	64
	151	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	152	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	153	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	154	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	155	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	41
	156	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	157	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	41
	158	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	159	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	160	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	161	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	162	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	163	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	164	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	165	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	166	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	167	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	168	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	169	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	170	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	56
	171	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	41
	172	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	173	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	41
	174	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	175	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	40
	176	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	177	##ADDR##	procdefn	0	#HEAD#	#TAIL#	431
	178	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	179	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	180	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	181	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	182	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	183	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	184	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	185	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	186	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	187	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	188	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	189	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	190	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	191	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	192	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	193	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	194	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	195	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	196	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	197	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	198	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	199	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	200	##ADDR##	datadefn	0	#HEAD#	#TAIL#	132
	201	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	202	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	203	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	204	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	205	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	206	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	207	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	208	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	209	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	210	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	211	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	212	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	213	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	214	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	215	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	216	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	217	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	218	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	219	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	220	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	221	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	222	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	223	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	224	##ADDR##	footprnt	0	#HEAD#	#TAIL#	849
	225	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	226	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	227	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	72
	228	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	41
	229	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	32
	230	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	231	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	40
	232	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	233	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	56
	234	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	235	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	236	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	237	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	238	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	239	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	240	##ADDR##	footprnt	0	#HEAD#	#TAIL#	901
	241	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	242	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	80
	243	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	40
	244	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	245	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	64
	246	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	247	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	248	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	249	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	250	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	251	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	252	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	253	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	254	##ADDR##	footprnt	0	#HEAD#	#TAIL#	953
	255	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	256	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	88
	257	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	40
	258	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	259	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	72
	260	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	261	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	262	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	263	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	264	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	265	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	266	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	267	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	268	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	269	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	270	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1005
	271	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	272	##ADDR##	cnstpic_	1	#HEAD#	#TAIL#	96
	273	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	40
	274	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	275	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	80
	276	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	277	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	278	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	279	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	280	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	281	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	282	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	283	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	284	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	285	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	286	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	287	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	288	##ADDR##	procdefn	0	#HEAD#	#TAIL#	264
	289	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	290	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	291	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	292	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	293	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	294	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	295	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	296	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	297	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	298	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	299	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	300	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	301	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	302	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	303	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	304	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	305	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	306	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	307	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	308	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	309	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	310	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	311	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	312	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	313	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	314	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	315	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	316	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	317	##ADDR##	procdefn	0	#HEAD#	#TAIL#	276
	318	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	319	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	320	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	321	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	322	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	323	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	324	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	325	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	326	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	327	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	328	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	329	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	330	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	331	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	332	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	333	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	334	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	335	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	336	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	337	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	338	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	339	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	340	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	341	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	342	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	343	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	344	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	345	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	346	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	347	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	348	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	349	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	350	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	351	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	352	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	353	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	354	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	355	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	356	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	357	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	358	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	359	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	360	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	361	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	362	##ADDR##	procdefn	0	#HEAD#	#TAIL#	246
	363	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	364	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	365	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	366	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	367	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	368	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	369	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	370	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	371	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	372	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	373	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	374	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	375	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	376	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	377	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	378	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	379	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	380	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	381	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	382	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	383	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	384	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	385	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	386	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	387	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	388	##ADDR##	narithex	0	#HEAD#	#TAIL#	33
	389	##ADDR##	iretcast	0	#HEAD#	#TAIL#	24
	390	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	39
	391	##ADDR##	nexplist	0	#HEAD#	#TAIL#	24
	392	##ADDR##	narithex	0	#HEAD#	#TAIL#	33
	393	##ADDR##	narithex	0	#HEAD#	#TAIL#	33
	394	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	395	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	396	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	397	##ADDR##	procdefn	0	#HEAD#	#TAIL#	267
	398	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	399	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	400	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	401	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	402	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	403	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	404	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	405	##ADDR##	portscop	0	#HEAD#	#TAIL#	48
	406	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	407	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	408	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	409	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	410	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	411	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	412	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	413	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	414	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	415	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	416	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	417	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	418	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	419	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	420	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	421	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	422	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	423	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	424	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	425	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	426	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	427	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	428	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	429	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	430	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	431	##ADDR##	narithex	0	#HEAD#	#TAIL#	33
	432	##ADDR##	iretcast	0	#HEAD#	#TAIL#	24
	433	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	39
	434	##ADDR##	nexplist	0	#HEAD#	#TAIL#	24
	435	##ADDR##	narithex	0	#HEAD#	#TAIL#	33
	436	##ADDR##	narithex	0	#HEAD#	#TAIL#	33
	437	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	438	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	439	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	440	##ADDR##	procdefn	0	#HEAD#	#TAIL#	310
	441	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	442	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	443	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	444	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	445	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	446	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	447	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	448	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	449	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	450	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	451	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	452	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	453	##ADDR##	chanplch	0	#HEAD#	#TAIL#	51
	454	##ADDR##	chanplch	0	#HEAD#	#TAIL#	52
	455	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	456	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	457	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	458	##ADDR##	portscop	0	#HEAD#	#TAIL#	64
	459	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	460	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	461	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	462	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	463	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	41
	464	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	465	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	41
	466	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	467	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	468	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	469	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	470	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	471	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	472	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	473	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	474	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	475	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	476	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	477	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	478	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	479	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	480	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	56
	481	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	41
	482	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	483	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	484	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	485	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	486	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	487	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	488	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	489	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	490	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	491	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	492	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	493	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	494	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	495	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	40
	496	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	497	##ADDR##	procdefn	0	#HEAD#	#TAIL#	363
	498	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	499	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	500	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	501	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	502	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	503	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	504	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	505	##ADDR##	dintplch	0	#HEAD#	#TAIL#	49
	506	##ADDR##	dintplch	0	#HEAD#	#TAIL#	49
	507	##ADDR##	dintplch	0	#HEAD#	#TAIL#	49
	508	##ADDR##	dintplch	0	#HEAD#	#TAIL#	49
	509	##ADDR##	portscop	0	#HEAD#	#TAIL#	80
	510	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	511	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	512	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	513	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	514	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	515	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	516	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	517	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	518	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	519	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	520	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	521	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	522	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	523	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	524	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	525	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	526	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	527	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	528	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	529	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	530	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	531	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	532	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	533	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	534	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	535	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	536	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	537	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	538	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	539	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	64
	540	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	541	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	542	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	543	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	544	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	545	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	546	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	547	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	548	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	549	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	550	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	551	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	552	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	553	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	554	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	42
	555	##ADDR##	bretcast	0	#HEAD#	#TAIL#	24
	556	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	38
	557	##ADDR##	nexplist	0	#HEAD#	#TAIL#	40
	558	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	559	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	560	##ADDR##	bretcast	0	#HEAD#	#TAIL#	24
	561	##ADDR##	nfuncexp	0	#HEAD#	#TAIL#	38
	562	##ADDR##	nexplist	0	#HEAD#	#TAIL#	40
	563	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	564	##ADDR##	sdinref_	0	#HEAD#	#TAIL#	32
	565	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1085
	566	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	40
	567	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	568	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	569	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	64
	570	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	571	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	572	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	573	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	574	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	575	##ADDR##	procdefn	0	#HEAD#	#TAIL#	324
	576	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	577	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	578	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	579	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	580	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	581	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	582	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	583	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	584	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	585	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	586	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	587	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	588	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	589	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	590	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	591	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	592	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	593	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	594	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	595	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	596	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	597	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	598	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	599	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	600	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	601	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	602	##ADDR##	portscop	0	#HEAD#	#TAIL#	56
	603	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	604	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	605	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	606	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	607	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	608	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	609	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	610	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	611	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	612	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	613	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	614	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	615	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	616	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	617	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	618	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	619	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	620	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	621	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	622	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	623	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	624	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	625	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	626	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	627	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	628	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	629	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	630	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	631	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	632	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	633	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	634	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	635	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	48
	636	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	637	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	638	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	639	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	640	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	641	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	642	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	643	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	644	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	645	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	646	##ADDR##	procdefn	0	#HEAD#	#TAIL#	329
	647	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	648	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	52
	649	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	650	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	651	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	652	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	653	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	654	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	655	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	656	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	657	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	658	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	659	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	660	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	661	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	662	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	663	##ADDR##	pintplch	0	#HEAD#	#TAIL#	58
	664	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	665	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	666	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	667	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	668	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	669	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	670	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	671	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	672	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	673	##ADDR##	portscop	0	#HEAD#	#TAIL#	56
	674	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	675	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	676	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	677	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	678	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	679	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	680	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	681	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	682	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	683	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	684	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	685	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	686	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	687	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	688	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	689	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	690	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	691	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	692	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	693	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	694	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	695	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	696	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	697	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	698	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	699	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	700	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	701	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	702	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	703	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	704	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	705	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	48
	706	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	707	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	708	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	709	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	710	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	711	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	712	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	713	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	714	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	715	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	716	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	717	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	718	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	719	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	720	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	721	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	722	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	723	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	54
	724	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	32
	725	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	726	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	727	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	728	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	729	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	730	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	731	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	732	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	733	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	734	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	735	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	736	##ADDR##	datatprf	0	#HEAD#	#TAIL#	41
	737	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	738	##ADDR##	proctprf	0	#HEAD#	#TAIL#	41
	739	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	88
	740	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	741	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	742	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	743	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	744	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	745	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	746	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	747	##ADDR##	proctprf	0	#HEAD#	#TAIL#	41
	748	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	749	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	750	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	751	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	752	##ADDR##	apimvref	0	#HEAD#	#TAIL#	57
	753	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	754	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	755	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	756	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	757	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	56
	758	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	759	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	760	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	761	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	762	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	763	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	764	##ADDR##	apimvref	0	#HEAD#	#TAIL#	65
	765	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	766	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	767	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	768	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	769	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	770	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	56
	771	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	772	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	773	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	774	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	775	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	776	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	777	##ADDR##	apimvref	0	#HEAD#	#TAIL#	49
	778	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	779	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	780	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	781	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	56
	782	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	783	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	784	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	785	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	786	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	787	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	788	##ADDR##	apimvref	0	#HEAD#	#TAIL#	73
	789	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	790	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	791	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	792	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	793	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	794	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	795	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	56
	796	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	797	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	798	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	799	##ADDR##	proctprf	0	#HEAD#	#TAIL#	41
	800	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	56
	801	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	802	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	803	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1913
	804	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	805	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	32
	806	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	807	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	32
	808	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	809	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	32
	810	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	811	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	32
	812	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	813	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  13 instantiation-collections
  0 sub-namespaces
  14 definitions
  0 typedefs
  Definitions:
    bool_sink = process-definition (defined) bool_sink(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        !GND = bool<> bool_sink::!GND
        !Vdd = bool<> bool_sink::!Vdd
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        !GND = bool^0 = bool_sink<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bool_sink<>::!Vdd (2) @[ supply_high port-alias ] 
        B = channel chan?(bool<>)^0 = bool_sink<>::B (1) @[ port! chp? meta? ] 
        b = bool^0 = bool_sink<>::b (3) 
        Created state:
        channel instance pool: (1 ports, 0 local, 0 mapped)
        1	bool_sink<>::B @[ port! chp? meta? ]	
        bool instance pool: (2 ports, 1 local, 0 mapped)
        1	bool_sink<>::!GND @[ supply_low port-alias ]	
        2	bool_sink<>::!Vdd @[ supply_high port-alias ]	
        3	bool_sink<>::b	
        resolved concurrent actions:
          *[
            B?(b)
          ]
        chp events: {
          event[0]: receive: B?(b), #pred: 1, succ: 0 
        }
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        !GND = bool<> bool_sink_delay::!GND
        !Vdd = bool<> bool_sink_delay::!Vdd
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_echo = process-definition (defined) bool_sink_echo(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_echo", we have: {
      Instances:
        !GND = bool<> bool_sink_echo::!GND
        !Vdd = bool<> bool_sink_echo::!Vdd
        B = chan?(bool<>) bool_sink_echo::B
        b = bool<> bool_sink_echo::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          *[
            sequential: {
              B?(b)
              print("bool-sink: ",b)
            }
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        !GND = bool<> bool_sink_once::!GND
        !Vdd = bool<> bool_sink_once::!Vdd
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_sink_shared = process-definition (defined) bool_sink_shared(
        bool<> !GND
        bool<> !Vdd
        chan?() Cin
        chan!() Cout
        chan??(bool<>) B
      )
      In definition "bool_sink_shared", we have: {
      Instances:
        !GND = bool<> bool_sink_shared::!GND
        !Vdd = bool<> bool_sink_shared::!Vdd
        B = chan??(bool<>) bool_sink_shared::B
        Cin = chan?() bool_sink_shared::Cin
        Cout = chan!() bool_sink_shared::Cout
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?() Cin
          chan!() Cout
          chan??(bool<>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              B?
              Cout!
            }
          ]
        }
      }

    int_source = process-definition (defined) int_source<
      pint<> W
      ><
      pint<> N
      pint<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<int_source::W>) S
      )
      In definition "int_source", we have: {
      Parameters:
        B = pint<> int_source::B^1
        N = pint<> int_source::N
        W = pint<> int_source::W
      Instances:
        !GND = bool<> int_source::!GND
        !Vdd = bool<> int_source::!Vdd
        S = chan!(int<int_source::W>) int_source::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<int_source::W>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <32, 3, {6,8,9}> {
          !GND = bool^0 = int_source<32, 3, {6,8,9}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = int_source<32, 3, {6,8,9}>::!Vdd (2) @[ supply_high port-alias ] 
          B = pint^1
            unrolled index-value pairs: {
              0 = 6
              1 = 8
              2 = 9
            }
          N = pint^0 value: 3
          S = channel chan!(int<32>)^0 = int_source<32, 3, {6,8,9}>::S (1) @[ chp! meta! port? ] 
          W = pint^0 value: 32
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	int_source<32, 3, {6,8,9}>::S @[ chp! meta! port? ]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	int_source<32, 3, {6,8,9}>::!GND @[ supply_low port-alias ]	
          2	int_source<32, 3, {6,8,9}>::!Vdd @[ supply_high port-alias ]	
          resolved concurrent actions:
            *[
              sequential: {
                S!(6)
                S!(8)
                S!(9)
              }
            ]
          chp events: {
            event[0]: send: S!(6), #pred: 1, succ: 2 
            event[1]: send: S!(9), #pred: 1, succ: 0 
            event[2]: send: S!(8), #pred: 1, succ: 1 
          }
        }
        <32, 4, {3,4,5,6}> {
          !GND = bool^0 = int_source<32, 4, {3,4,5,6}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = int_source<32, 4, {3,4,5,6}>::!Vdd (2) @[ supply_high port-alias ] 
          B = pint^1
            unrolled index-value pairs: {
              0 = 3
              1 = 4
              2 = 5
              3 = 6
            }
          N = pint^0 value: 4
          S = channel chan!(int<32>)^0 = int_source<32, 4, {3,4,5,6}>::S (1) @[ chp! meta! port? ] 
          W = pint^0 value: 32
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	int_source<32, 4, {3,4,5,6}>::S @[ chp! meta! port? ]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	int_source<32, 4, {3,4,5,6}>::!GND @[ supply_low port-alias ]	
          2	int_source<32, 4, {3,4,5,6}>::!Vdd @[ supply_high port-alias ]	
          resolved concurrent actions:
            *[
              sequential: {
                S!(3)
                S!(4)
                S!(5)
                S!(6)
              }
            ]
          chp events: {
            event[0]: send: S!(3), #pred: 1, succ: 3 
            event[1]: send: S!(6), #pred: 1, succ: 0 
            event[2]: send: S!(5), #pred: 1, succ: 1 
            event[3]: send: S!(4), #pred: 1, succ: 2 
          }
        }
        <32, 5, {4,5,6,7,8}> {
          !GND = bool^0 = int_source<32, 5, {4,5,6,7,8}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = int_source<32, 5, {4,5,6,7,8}>::!Vdd (2) @[ supply_high port-alias ] 
          B = pint^1
            unrolled index-value pairs: {
              0 = 4
              1 = 5
              2 = 6
              3 = 7
              4 = 8
            }
          N = pint^0 value: 5
          S = channel chan!(int<32>)^0 = int_source<32, 5, {4,5,6,7,8}>::S (1) @[ chp! meta! port? ] 
          W = pint^0 value: 32
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	int_source<32, 5, {4,5,6,7,8}>::S @[ chp! meta! port? ]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	int_source<32, 5, {4,5,6,7,8}>::!GND @[ supply_low port-alias ]	
          2	int_source<32, 5, {4,5,6,7,8}>::!Vdd @[ supply_high port-alias ]	
          resolved concurrent actions:
            *[
              sequential: {
                S!(4)
                S!(5)
                S!(6)
                S!(7)
                S!(8)
              }
            ]
          chp events: {
            event[0]: send: S!(4), #pred: 1, succ: 4 
            event[1]: send: S!(8), #pred: 1, succ: 0 
            event[2]: send: S!(7), #pred: 1, succ: 1 
            event[3]: send: S!(6), #pred: 1, succ: 2 
            event[4]: send: S!(5), #pred: 1, succ: 3 
          }
        }
        <32, 6, {2,5,3,6,4,7}> {
          !GND = bool^0 = int_source<32, 6, {2,5,3,6,4,7}>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = int_source<32, 6, {2,5,3,6,4,7}>::!Vdd (2) @[ supply_high port-alias ] 
          B = pint^1
            unrolled index-value pairs: {
              0 = 2
              1 = 5
              2 = 3
              3 = 6
              4 = 4
              5 = 7
            }
          N = pint^0 value: 6
          S = channel chan!(int<32>)^0 = int_source<32, 6, {2,5,3,6,4,7}>::S (1) @[ chp! meta! port? ] 
          W = pint^0 value: 32
          Created state:
          channel instance pool: (1 ports, 0 local, 0 mapped)
          1	int_source<32, 6, {2,5,3,6,4,7}>::S @[ chp! meta! port? ]	
          bool instance pool: (2 ports, 0 local, 0 mapped)
          1	int_source<32, 6, {2,5,3,6,4,7}>::!GND @[ supply_low port-alias ]	
          2	int_source<32, 6, {2,5,3,6,4,7}>::!Vdd @[ supply_high port-alias ]	
          resolved concurrent actions:
            *[
              sequential: {
                S!(2)
                S!(5)
                S!(3)
                S!(6)
                S!(4)
                S!(7)
              }
            ]
          chp events: {
            event[0]: send: S!(2), #pred: 1, succ: 5 
            event[1]: send: S!(7), #pred: 1, succ: 0 
            event[2]: send: S!(4), #pred: 1, succ: 1 
            event[3]: send: S!(6), #pred: 1, succ: 2 
            event[4]: send: S!(3), #pred: 1, succ: 3 
            event[5]: send: S!(5), #pred: 1, succ: 4 
          }
        }
      }
      }

    int_source_constant = process-definition (defined) int_source_constant<
      pint<> W
      ><
      pint<> V
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<int_source_constant::W>) S
      )
      In definition "int_source_constant", we have: {
      Parameters:
        V = pint<> int_source_constant::V
        W = pint<> int_source_constant::W
      Instances:
        !GND = bool<> int_source_constant::!GND
        !Vdd = bool<> int_source_constant::!Vdd
        S = chan!(int<int_source_constant::W>) int_source_constant::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<int_source_constant::W>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    int_source_once = process-definition (defined) int_source_once<
      pint<> W
      ><
      pint<> N
      pint<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<int_source_once::W>) S
      )
      In definition "int_source_once", we have: {
      Parameters:
        B = pint<> int_source_once::B^1
        N = pint<> int_source_once::N
        W = pint<> int_source_once::W
      Instances:
        !GND = bool<> int_source_once::!GND
        !Vdd = bool<> int_source_once::!Vdd
        S = chan!(int<int_source_once::W>) int_source_once::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<int_source_once::W>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

    int_source_random = process-definition (defined) int_source_random<
      pint<> W
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<int_source_random::W>) S
      )
      In definition "int_source_random", we have: {
      Parameters:
        W = pint<> int_source_random::W
      Instances:
        !GND = bool<> int_source_random::!GND
        !Vdd = bool<> int_source_random::!Vdd
        S = chan!(int<int_source_random::W>) int_source_random::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<int_source_random::W>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            S!(int(lrand48())&(1<<W)-1)
          ]
        }
      }

    int_source_random_once = process-definition (defined) int_source_random_once<
      pint<> W
      ><
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<int_source_random_once::W>) S
      )
      In definition "int_source_random_once", we have: {
      Parameters:
        N = pint<> int_source_random_once::N
        W = pint<> int_source_random_once::W
      Instances:
        !GND = bool<> int_source_random_once::!GND
        !Vdd = bool<> int_source_random_once::!Vdd
        S = chan!(int<int_source_random_once::W>) int_source_random_once::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<int_source_random_once::W>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(int(lrand48())&(1<<W)-1)
          }
        }
      }

    int_source_shared = process-definition (defined) int_source_shared<
      pint<> W
      ><
      pint<> N
      pint<> B[0..N-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan?() Cin
        chan!() Cout
        chan!!(int<int_source_shared::W>) S
      )
      In definition "int_source_shared", we have: {
      Parameters:
        B = pint<> int_source_shared::B^1
        N = pint<> int_source_shared::N
        W = pint<> int_source_shared::W
      Instances:
        !GND = bool<> int_source_shared::!GND
        !Vdd = bool<> int_source_shared::!Vdd
        Cin = chan?() int_source_shared::Cin
        Cout = chan!() int_source_shared::Cout
        S = chan!!(int<int_source_shared::W>) int_source_shared::S
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?() Cin
          chan!() Cout
          chan!!(int<int_source_shared::W>) S
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            sequential: {
              Cin?
              concurrent i:[0..N-1]: {
                S!(B[$i])
              }
              Cout!
            }
          ]
        }
      }

    my_foo = process-definition (defined) my_foo(
        bool<> !GND
        bool<> !Vdd
        chan?(int<32>) A
        chan?(int<32>) B
        chan?(int<32>) C
        chan?(int<32>) D
        chan!(bool<>) G
      )
      In definition "my_foo", we have: {
      Instances:
        !GND = bool<> my_foo::!GND
        !Vdd = bool<> my_foo::!Vdd
        A = chan?(int<32>) my_foo::A
        B = chan?(int<32>) my_foo::B
        C = chan?(int<32>) my_foo::C
        D = chan?(int<32>) my_foo::D
        G = chan!(bool<>) my_foo::G
        a = int<32> my_foo::a
        b = int<32> my_foo::b
        c = int<32> my_foo::c
        d = int<32> my_foo::d
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan?(int<32>) A
          chan?(int<32>) B
          chan?(int<32>) C
          chan?(int<32>) D
          chan!(bool<>) G
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        int<32> a
        int<32> b
        int<32> c
        int<32> d
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
                C?(c)
                D?(d)
              }
              G!(bool(my_gcd(a,b))||bool(my_gcd(c,d)))
            }
          ]
        }
      footprint: {
        !GND = bool^0 = my_foo<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = my_foo<>::!Vdd (2) @[ supply_high port-alias ] 
        A = channel chan?(int<32>)^0 = my_foo<>::A (1) @[ port! chp? meta? ] 
        B = channel chan?(int<32>)^0 = my_foo<>::B (2) @[ port! chp? meta? ] 
        C = channel chan?(int<32>)^0 = my_foo<>::C (3) @[ port! chp? meta? ] 
        D = channel chan?(int<32>)^0 = my_foo<>::D (4) @[ port! chp? meta? ] 
        G = channel chan!(bool<>)^0 = my_foo<>::G (5) @[ chp! meta! port? ] 
        a = int<32>^0 = my_foo<>::a (1) 
        b = int<32>^0 = my_foo<>::b (2) 
        c = int<32>^0 = my_foo<>::c (3) 
        d = int<32>^0 = my_foo<>::d (4) 
        Created state:
        channel instance pool: (5 ports, 0 local, 0 mapped)
        1	my_foo<>::A @[ port! chp? meta? ]	
        2	my_foo<>::B @[ port! chp? meta? ]	
        3	my_foo<>::C @[ port! chp? meta? ]	
        4	my_foo<>::D @[ port! chp? meta? ]	
        5	my_foo<>::G @[ chp! meta! port? ]	
        int instance pool: (0 ports, 4 local, 0 mapped)
        1	my_foo<>::a	
        2	my_foo<>::b	
        3	my_foo<>::c	
        4	my_foo<>::d	
        bool instance pool: (2 ports, 0 local, 0 mapped)
        1	my_foo<>::!GND @[ supply_low port-alias ]	
        2	my_foo<>::!Vdd @[ supply_high port-alias ]	
        resolved concurrent actions:
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
                C?(c)
                D?(d)
              }
              G!(bool(my_gcd(a,b))||bool(my_gcd(c,d)))
            }
          ]
        chp events: {
          event[0]: fork: , #pred: 1, succ: 3 4 5 6 
          event[1]: send: G!(bool(my_gcd(a,b))||bool(my_gcd(c,d))), #pred: 1, succ: 0 
          event[2]: join: , #pred: 4, succ: 1 
          event[3]: receive: A?(a), #pred: 1, succ: 2 
          event[4]: receive: B?(b), #pred: 1, succ: 2 
          event[5]: receive: C?(c), #pred: 1, succ: 2 
          event[6]: receive: D?(d), #pred: 1, succ: 2 
        }
      }
      }

    twin_int_source = process-definition (defined) twin_int_source<
      pint<> W
      ><
      pint<> N1
      pint<> V1[0..N1-1]
      pint<> N2
      pint<> V2[0..N2-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<twin_int_source::W>) A
        chan!(int<twin_int_source::W>) B
      )
      In definition "twin_int_source", we have: {
      Parameters:
        N1 = pint<> twin_int_source::N1
        N2 = pint<> twin_int_source::N2
        V1 = pint<> twin_int_source::V1^1
        V2 = pint<> twin_int_source::V2^1
        W = pint<> twin_int_source::W
      Instances:
        !GND = bool<> twin_int_source::!GND
        !Vdd = bool<> twin_int_source::!Vdd
        A = chan!(int<twin_int_source::W>) twin_int_source::A
        B = chan!(int<twin_int_source::W>) twin_int_source::B
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<twin_int_source::W>) A
          chan!(int<twin_int_source::W>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          *[
            concurrent i:[0..N1-1]: {
              concurrent j:[0..N2-1]: {
                concurrent: {
                  A!(V1[$i])
                  B!(V2[$j])
                }
              }
            }
          ]
        }
      }

    twin_int_source_once = process-definition (defined) twin_int_source_once<
      pint<> W
      ><
      pint<> N1
      pint<> V1[0..N1-1]
      pint<> N2
      pint<> V2[0..N2-1]
      >(
        bool<> !GND
        bool<> !Vdd
        chan!(int<twin_int_source_once::W>) A
        chan!(int<twin_int_source_once::W>) B
      )
      In definition "twin_int_source_once", we have: {
      Parameters:
        N1 = pint<> twin_int_source_once::N1
        N2 = pint<> twin_int_source_once::N2
        V1 = pint<> twin_int_source_once::V1^1
        V2 = pint<> twin_int_source_once::V2^1
        W = pint<> twin_int_source_once::W
      Instances:
        !GND = bool<> twin_int_source_once::!GND
        !Vdd = bool<> twin_int_source_once::!Vdd
        A = chan!(int<twin_int_source_once::W>) twin_int_source_once::A
        B = chan!(int<twin_int_source_once::W>) twin_int_source_once::B
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          chan!(int<twin_int_source_once::W>) A
          chan!(int<twin_int_source_once::W>) B
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      chp:
        concurrent: {
          concurrent i:[0..N1-1]: {
            concurrent j:[0..N2-1]: {
              concurrent: {
                A!(V1[$i])
                B!(V2[$j])
              }
            }
          }
        }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    A = chan(int<32>) A
    AS = int_source<32> AS
    B = chan(int<32>) B
    BS = int_source<32> BS
    C = chan(int<32>) C
    CS = int_source<32> CS
    D = chan(int<32>) D
    DS = int_source<32> DS
    G = chan(bool<>) G
    GS = bool_sink<> GS
    X = my_foo<> X
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  A = channel chan(int<32>)^0 = A (1) @[ sub! chp! meta! sub? chp? meta? ] 
  AS = process int_source<32>^0<4, {3,4,5,6}> = AS (2) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(int<32>)^0 = A (1) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  B = channel chan(int<32>)^0 = B (2) @[ sub! chp! meta! sub? chp? meta? ] 
  BS = process int_source<32>^0<5, {4,5,6,7,8}> = BS (3) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(int<32>)^0 = B (2) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  C = channel chan(int<32>)^0 = C (3) @[ sub! chp! meta! sub? chp? meta? ] 
  CS = process int_source<32>^0<3, {6,8,9}> = CS (4) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(int<32>)^0 = C (3) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  D = channel chan(int<32>)^0 = D (4) @[ sub! chp! meta! sub? chp? meta? ] 
  DS = process int_source<32>^0<6, {2,5,3,6,4,7}> = DS (5) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    S = channel chan!(int<32>)^0 = D (4) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  G = channel chan(bool<>)^0 = G (5) @[ sub! chp! meta! sub? chp? meta? ] 
  GS = process bool_sink<>^0 = GS (6) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    B = channel chan?(bool<>)^0 = G (5) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  X = process my_foo<>^0 = X (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    A = channel chan?(int<32>)^0 = A (1) @[ sub! chp! meta! sub? chp? meta? ] 
    B = channel chan?(int<32>)^0 = B (2) @[ sub! chp! meta! sub? chp? meta? ] 
    C = channel chan?(int<32>)^0 = C (3) @[ sub! chp! meta! sub? chp? meta? ] 
    D = channel chan?(int<32>)^0 = D (4) @[ sub! chp! meta! sub? chp? meta? ] 
    G = channel chan!(bool<>)^0 = G (5) @[ sub! chp! meta! sub? chp? meta? ] 
  )
  Created state:
  process instance pool: (0 ports, 6 local, 0 mapped)
  1	X	my_foo<>
    channel: 1,2,3,4,5
    bool: 1,2
  2	AS<4, {3,4,5,6}>	int_source<32, 4, {3,4,5,6}>
    channel: 1
    bool: 1,2
  3	BS<5, {4,5,6,7,8}>	int_source<32, 5, {4,5,6,7,8}>
    channel: 2
    bool: 1,2
  4	CS<3, {6,8,9}>	int_source<32, 3, {6,8,9}>
    channel: 3
    bool: 1,2
  5	DS<6, {2,5,3,6,4,7}>	int_source<32, 6, {2,5,3,6,4,7}>
    channel: 4
    bool: 1,2
  6	GS	bool_sink<>
    channel: 5
    bool: 1,2
  channel instance pool: (0 ports, 5 local, 0 mapped)
  1	A @[ sub! chp! meta! sub? chp? meta? ]	
  2	B @[ sub! chp! meta! sub? chp? meta? ]	
  3	C @[ sub! chp! meta! sub? chp? meta? ]	
  4	D @[ sub! chp! meta! sub? chp? meta? ]	
  5	G @[ sub! chp! meta! sub? chp? meta? ]	
  private sub-int index map:
    (1 -> 0)
    (7 -> 4)
  bool instance pool: (0 ports, 2 local, 1 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  private sub-bool index map:
    (6 -> 0)
    (7 -> 1)
}
