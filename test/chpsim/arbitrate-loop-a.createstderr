
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	10	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	13	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	14	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	15	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	16	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	17	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	18	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	25	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	28	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	CHPndtsl	0	#HEAD#	#TAIL#	28
	30	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	33	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	36	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	37	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	38	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	40	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	41	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	43	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	44	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	45	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	46	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	47	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	49	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	50	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	51	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	53	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	54	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	56	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	57	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	58	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	59	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	60	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	61	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	62	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	63	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	64	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	66	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	67	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	69	##ADDR##	footprnt	0	#HEAD#	#TAIL#	660
	70	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	71	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	72	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	73	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	CHPndtsl	0	#HEAD#	#TAIL#	28
	75	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	76	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	77	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	78	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	79	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	80	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	81	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	82	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	83	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	84	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	85	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	86	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	87	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	88	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	89	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	90	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	91	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	92	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  0 definitions
  0 typedefs
  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = bool<> a
    b = bool<> b
    c = bool<> c
}

top-level chp:
  concurrent: {
    sequential: {
      a := true
      *[
        nondeterministic: {
          a -> sequential: {
            a := false
            concurrent: {
              b := true
              c := true
            }
          }
          b -> sequential: {
            b := false
            concurrent: {
              c := true
              a := true
            }
          }
          c -> sequential: {
            c := false
            concurrent: {
              a := true
              b := true
            }
          }
        }
      ]
    }
  }
footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  a = bool^0 = a (3) 
  b = bool^0 = b (4) 
  c = bool^0 = c (5) 
  Created state:
  bool instance pool: (0 ports, 5 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	a	
  4	b	
  5	c	
  resolved concurrent actions:
    sequential: {
      a := true
      *[
        nondeterministic: {
          a -> sequential: {
            a := false
            concurrent: {
              b := true
              c := true
            }
          }
          b -> sequential: {
            b := false
            concurrent: {
              c := true
              a := true
            }
          }
          c -> sequential: {
            c := false
            concurrent: {
              a := true
              b := true
            }
          }
        }
      ]
    }
  chp events: {
    event[0]: assign: a := true, #pred: 1, succ: 17 
    event[1]: null: null, #pred: 1, succ: 17 
    event[2]: join: , #pred: 2, succ: 1 
    event[3]: assign: b := true, #pred: 1, succ: 2 
    event[4]: assign: c := true, #pred: 1, succ: 2 
    event[5]: fork: , #pred: 1, succ: 3 4 
    event[6]: assign: a := false, #pred: 1, succ: 5 
    event[7]: join: , #pred: 2, succ: 1 
    event[8]: assign: c := true, #pred: 1, succ: 7 
    event[9]: assign: a := true, #pred: 1, succ: 7 
    event[10]: fork: , #pred: 1, succ: 8 9 
    event[11]: assign: b := false, #pred: 1, succ: 10 
    event[12]: join: , #pred: 2, succ: 1 
    event[13]: assign: a := true, #pred: 1, succ: 12 
    event[14]: assign: b := true, #pred: 1, succ: 12 
    event[15]: fork: , #pred: 1, succ: 13 14 
    event[16]: assign: c := false, #pred: 1, succ: 15 
    event[17]: select: [ a -> ... : b -> ... : c -> ... ], #pred: 1, succ: 6 11 16 
  }
}
