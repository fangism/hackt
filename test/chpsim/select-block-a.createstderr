
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	36
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	7	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	8	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	9	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	10	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	16	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	17	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	18	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	19	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	20	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	21	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	23	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	24	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	25	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	26	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	nbnotex_	0	#HEAD#	#TAIL#	12
	28	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	29	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	30	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	31	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	33	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	34	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	36	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	37	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	39	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	40	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	41	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	42	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	43	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	45	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	46	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	48	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	49	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	51	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	52	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	55	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	56	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	58	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	59	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	61	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	62	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	63	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	64	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	65	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	66	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	67	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	68	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	69	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	32
	71	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	74	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	75	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	77	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	79	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	80	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	82	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	85	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	nbnotex_	0	#HEAD#	#TAIL#	12
	87	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	88	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	89	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	91	##ADDR##	footprnt	0	#HEAD#	#TAIL#	790
	92	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	93	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	94	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	95	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	96	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	97	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	98	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	99	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	100	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	101	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	24
	102	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	103	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	104	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	105	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	106	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	107	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	108	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	109	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	110	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	111	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	112	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	113	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	114	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	115	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	116	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	117	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	118	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	119	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	32
	120	##ADDR##	CHPwait_	0	#HEAD#	#TAIL#	16
	121	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	122	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	123	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	124	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	125	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	126	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	127	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  4 instantiation-collections
  0 sub-namespaces
  0 definitions
  0 typedefs
  Instances:
    a = bool<> a
    b = bool<> b
    c = bool<> c
    e = bool<> e
}

top-level chp:
  concurrent: {
    sequential: {
      concurrent: {
        c := false
        e := false
      }
      concurrent: {
        *[
          sequential: {
            [~e]
            concurrent: {
              a := false
              b := false
            }
            e := true
            a := false
            b := false
            a := false
            b := false
            deterministic: {
              c -> sequential: {
                a := false
                b := true
              }
              else -> sequential: {
                b := false
                a := true
              }
            }
          }
        ]
        *[
          sequential: {
            [e]
            deterministic: {
              a -> c := c
              b -> c := c
            }
            c := ~c
            e := false
          }
        ]
      }
    }
  }
footprint: {
  a = bool^0 = a (1) 
  b = bool^0 = b (2) 
  c = bool^0 = c (3) 
  e = bool^0 = e (4) 
  Created state:
  bool instance pool:
  1	a
  2	b
  3	c
  4	e
  resolved concurrent actions:
    sequential: {
      concurrent: {
        c := false
        e := false
      }
      concurrent: {
        *[
          sequential: {
            [~e]
            concurrent: {
              a := false
              b := false
            }
            e := true
            a := false
            b := false
            a := false
            b := false
            deterministic: {
              c -> sequential: {
                a := false
                b := true
              }
              else -> sequential: {
                b := false
                a := true
              }
            }
          }
        ]
        *[
          sequential: {
            [e]
            deterministic: {
              a -> c := c
              b -> c := c
            }
            c := ~c
            e := false
          }
        ]
      }
    }
  chp events: {
    event[0]: fork: , #pred: 1, succ: 26 27 
    event[1]: fork: , #pred: 1, succ: 17 24 
    event[2]: null: null, #pred: 1, succ: 17 
    event[3]: assign: b := true, #pred: 1, succ: 2 
    event[4]: assign: a := false, #pred: 1, succ: 3 
    event[5]: assign: a := true, #pred: 1, succ: 2 
    event[6]: assign: b := false, #pred: 1, succ: 5 
    event[7]: select: [ c -> ... [] else -> ... ], #pred: 1, succ: 4 6 
    event[8]: assign: b := false, #pred: 1, succ: 7 
    event[9]: assign: a := false, #pred: 1, succ: 8 
    event[10]: assign: b := false, #pred: 1, succ: 9 
    event[11]: assign: a := false, #pred: 1, succ: 10 
    event[12]: assign: e := true, #pred: 1, succ: 11 
    event[13]: join: , #pred: 2, succ: 12 
    event[14]: assign: a := false, #pred: 1, succ: 13 
    event[15]: assign: b := false, #pred: 1, succ: 13 
    event[16]: fork: , #pred: 1, succ: 14 15 
    event[17]: wait: [~e], #pred: 1, succ: 16 
    event[18]: assign: e := false, #pred: 1, succ: 24 
    event[19]: assign: c := ~c, #pred: 1, succ: 18 
    event[20]: null: null, #pred: 1, succ: 19 
    event[21]: assign: c := c, #pred: 1, succ: 20 
    event[22]: assign: c := c, #pred: 1, succ: 20 
    event[23]: select: [ a -> ... [] b -> ... ], #pred: 1, succ: 21 22 
    event[24]: wait: [e], #pred: 1, succ: 23 
    event[25]: join: , #pred: 2, succ: 1 
    event[26]: assign: c := false, #pred: 1, succ: 25 
    event[27]: assign: e := false, #pred: 1, succ: 25 
  }
}
