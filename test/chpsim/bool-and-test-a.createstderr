
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	176
	3	##ADDR##	procplch	0	#HEAD#	#TAIL#	49
	4	##ADDR##	chanplch	0	#HEAD#	#TAIL#	50
	5	##ADDR##	chanplch	0	#HEAD#	#TAIL#	51
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	50
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	49
	11	##ADDR##	procdefn	0	#HEAD#	#TAIL#	241
	12	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	13	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	14	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	15	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	16	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	17	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	18	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	19	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	20	##ADDR##	datadefn	0	#HEAD#	#TAIL#	133
	21	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	22	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	23	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	24	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	25	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	27	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	28	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	29	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	30	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	31	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	32	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	33	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	35	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	36	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	38	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	39	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	40	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	41	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	42	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	43	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	44	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	45	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	46	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	47	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	48	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	49	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	50	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	51	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	52	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	53	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	54	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	55	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	56	##ADDR##	nlgclpex	0	#HEAD#	#TAIL#	50
	57	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	58	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	59	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	60	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	63	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	64	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	65	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	67	##ADDR##	footprnt	0	#HEAD#	#TAIL#	844
	68	##ADDR##	fndchntp	0	#HEAD#	#TAIL#	40
	69	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	70	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	71	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	72	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	64
	73	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	74	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	75	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	77	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	78	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	79	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	80	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	81	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	82	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	84	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	85	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	87	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	88	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	89	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	91	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	92	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	93	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	94	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	95	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	96	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	98	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	99	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	101	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	102	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	42
	103	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	42
	104	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	42
	105	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	106	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	108	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	109	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	110	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	111	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	112	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	113	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	114	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	115	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	116	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	117	##ADDR##	procdefn	0	#HEAD#	#TAIL#	243
	118	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	119	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	120	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	121	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	122	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	123	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	124	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	125	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	126	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	127	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	128	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	129	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	130	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	131	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	132	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	133	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	134	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	48
	135	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	48
	136	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	137	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	138	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	139	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	140	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	141	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	142	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	143	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	144	##ADDR##	nlogicex	0	#HEAD#	#TAIL#	42
	145	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	146	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	147	##ADDR##	procdefn	0	#HEAD#	#TAIL#	194
	148	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	149	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	150	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	151	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	152	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	153	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	154	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	155	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	156	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	157	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	158	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	159	##ADDR##	footprnt	0	#HEAD#	#TAIL#	569
	160	##ADDR##	procdefn	0	#HEAD#	#TAIL#	200
	161	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	162	##ADDR##	prealplh	0	#HEAD#	#TAIL#	57
	163	##ADDR##	prealins	0	#HEAD#	#TAIL#	32
	164	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	165	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	166	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	167	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	168	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	169	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	170	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	171	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	172	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	32
	173	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	174	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	175	##ADDR##	procdefn	0	#HEAD#	#TAIL#	199
	176	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	177	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	178	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	179	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	49
	180	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	181	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	182	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	183	##ADDR##	datainst	0	#HEAD#	#TAIL#	40
	184	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	185	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	186	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	187	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	188	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	189	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	190	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	191	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	192	##ADDR##	CHPrecv_	0	#HEAD#	#TAIL#	49
	193	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	194	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	32
	195	##ADDR##	procdefn	0	#HEAD#	#TAIL#	292
	196	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	197	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	198	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	199	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	200	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	201	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	202	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	203	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	204	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	205	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	206	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	207	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	208	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	209	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	210	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	211	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	212	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	213	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	214	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	215	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	216	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	217	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	218	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	219	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	220	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	221	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	222	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	223	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	224	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	49
	225	##ADDR##	footprnt	0	#HEAD#	#TAIL#	612
	226	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	227	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	40
	228	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	229	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	230	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	231	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	51
	232	##ADDR##	footprnt	0	#HEAD#	#TAIL#	630
	233	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	234	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	56
	235	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	236	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	237	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	238	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	239	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	240	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	241	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	242	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	52
	243	##ADDR##	footprnt	0	#HEAD#	#TAIL#	639
	244	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	245	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	64
	246	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	247	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	248	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	249	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	250	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	251	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	252	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	253	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	254	##ADDR##	procdefn	0	#HEAD#	#TAIL#	189
	255	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	256	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	257	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	258	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	259	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	260	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	261	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	262	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	263	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	264	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	265	##ADDR##	procdefn	0	#HEAD#	#TAIL#	218
	266	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	267	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	268	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	269	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	270	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	271	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	272	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	273	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	274	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	275	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	276	##ADDR##	prealplh	0	#HEAD#	#TAIL#	57
	277	##ADDR##	prealins	0	#HEAD#	#TAIL#	32
	278	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	279	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	280	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	281	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	282	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	32
	283	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	284	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	285	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	286	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	287	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	288	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	289	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	290	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	291	##ADDR##	sprmvref	0	#HEAD#	#TAIL#	32
	292	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	293	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	294	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	295	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	296	##ADDR##	procdefn	0	#HEAD#	#TAIL#	201
	297	##ADDR##	pboolplh	0	#HEAD#	#TAIL#	57
	298	##ADDR##	pboolins	0	#HEAD#	#TAIL#	32
	299	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	32
	300	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	301	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	302	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	303	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	304	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	305	##ADDR##	pintinst	0	#HEAD#	#TAIL#	32
	306	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	307	##ADDR##	chanplch	0	#HEAD#	#TAIL#	49
	308	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	309	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	310	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	311	##ADDR##	CHPlopac	0	#HEAD#	#TAIL#	49
	312	##ADDR##	pintplch	0	#HEAD#	#TAIL#	57
	313	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	32
	314	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	315	##ADDR##	piarthex	0	#HEAD#	#TAIL#	33
	316	##ADDR##	spimvref	0	#HEAD#	#TAIL#	32
	317	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	318	##ADDR##	CHPsend_	0	#HEAD#	#TAIL#	48
	319	##ADDR##	schnnref	0	#HEAD#	#TAIL#	32
	320	##ADDR##	spbnref_	0	#HEAD#	#TAIL#	32
	321	##ADDR##	nindlist	0	#HEAD#	#TAIL#	32
	322	##ADDR##	spinref_	0	#HEAD#	#TAIL#	32
	323	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	324	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	325	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	326	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	40
	327	##ADDR##	chaninst	0	#HEAD#	#TAIL#	40
	328	##ADDR##	bchntprf	0	#HEAD#	#TAIL#	49
	329	##ADDR##	datatprf	0	#HEAD#	#TAIL#	40
	330	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	331	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	332	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	32
	333	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	48
	334	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	335	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	336	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	337	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	338	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	339	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	340	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	341	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	342	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	33
	343	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	344	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	345	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	346	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	347	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	32
	348	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	349	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	350	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	351	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	352	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	353	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	354	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	49
	355	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	356	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	357	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	358	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	359	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	360	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	361	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	32
	362	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	363	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	364	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	365	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	366	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	367	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	368	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	57
	369	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	370	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	371	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	372	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	373	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	374	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	375	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	376	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	32
	377	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	378	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	379	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	380	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	32
	381	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	382	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	40
	383	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	384	##ADDR##	apbmvref	0	#HEAD#	#TAIL#	33
	385	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	17
	386	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	387	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	388	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	389	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	32
	390	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	24
	391	##ADDR##	procinst	0	#HEAD#	#TAIL#	40
	392	##ADDR##	proctprf	0	#HEAD#	#TAIL#	40
	393	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	394	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	32
	395	##ADDR##	schnmref	0	#HEAD#	#TAIL#	32
	396	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1373
	397	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	32
	398	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	399	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	400	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	401	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	402	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	403	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	404	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24
	405	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	40
	406	##ADDR##	cnstpbc_	1	#HEAD#	#TAIL#	49
	407	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	24

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  8 instantiation-collections
  0 sub-namespaces
  9 definitions
  0 typedefs
  Definitions:
    bool_and = process-definition (defined) bool_and<
      pint<> N
      >(
        chan?(bool<>) A[0..N-1]
        chan!(bool<>) O
      )
      In definition "bool_and", we have: {
      Parameters:
        N = pint<> bool_and::N
      Instances:
        A = chan?(bool<>) bool_and::A^1
        O = chan!(bool<>) bool_and::O
        a = bool<> bool_and::a^1
      unroll sequence: 
        chan?(bool<>) A[0..N-1]
        chan!(bool<>) O
        bool<> a[0..N-1]
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent i:[0..N-1]: {
                A[$i]?(a[$i])
              }
              O!((&&:i:[0..N-1]: a[$i]))
            }
          ]
        }
      footprint collection: {
        <4> {
          A = channel chan?(bool<>)^1
            {
              [0] = bool_and::A[0] (2) 
              [1] = bool_and::A[1] (3) 
              [2] = bool_and::A[2] (4) 
              [3] = bool_and::A[3] (5) 
            }
          N = pint^0 value: 4
          O = channel chan!(bool<>)^0 = bool_and::O (1) 
          a = bool^1
            {
              [0] = bool_and::a[0] (1) 
              [1] = bool_and::a[1] (2) 
              [2] = bool_and::a[2] (3) 
              [3] = bool_and::a[3] (4) 
            }
          Created state:
          channel instance pool:
          1	bool_and::O
          2	bool_and::A[0]
          3	bool_and::A[1]
          4	bool_and::A[2]
          5	bool_and::A[3]
          bool instance pool:
          1	bool_and::a[0]
          2	bool_and::a[1]
          3	bool_and::a[2]
          4	bool_and::a[3]
          resolved concurrent actions:
            *[
              sequential: {
                concurrent: {
                  A[0]?(a[0])
                  A[1]?(a[1])
                  A[2]?(a[2])
                  A[3]?(a[3])
                }
                O!(a[0]&&a[1]&&a[2]&&a[3])
              }
            ]
        }
      }
      }

    bool_and_2 = process-definition (defined) bool_and_2(
        chan?(bool<>) A
        chan?(bool<>) B
        chan!(bool<>) O
      )
      In definition "bool_and_2", we have: {
      Instances:
        A = chan?(bool<>) bool_and_2::A
        B = chan?(bool<>) bool_and_2::B
        O = chan!(bool<>) bool_and_2::O
        a = bool<> bool_and_2::a
        b = bool<> bool_and_2::b
      unroll sequence: 
        chan?(bool<>) A
        chan?(bool<>) B
        chan!(bool<>) O
        bool<> a
        bool<> b
      chp:
        concurrent: {
          *[
            sequential: {
              concurrent: {
                A?(a)
                B?(b)
              }
              O!(a&&b)
            }
          ]
        }
      }

    bool_sink = process-definition (defined) bool_sink(
        chan?(bool<>) B
      )
      In definition "bool_sink", we have: {
      Instances:
        B = chan?(bool<>) bool_sink::B
        b = bool<> bool_sink::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            B?(b)
          ]
        }
      footprint: {
        B = channel chan?(bool<>)^0 = bool_sink::B (1) 
        b = bool^0 = bool_sink::b (1) 
        Created state:
        channel instance pool:
        1	bool_sink::B
        bool instance pool:
        1	bool_sink::b
        resolved concurrent actions:
          *[
            B?(b)
          ]
      }
      }

    bool_sink_delay = process-definition (defined) bool_sink_delay<
      preal<> D
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_delay", we have: {
      Parameters:
        D = preal<> bool_sink_delay::D
      Instances:
        B = chan?(bool<>) bool_sink_delay::B
        b = bool<> bool_sink_delay::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          *[
            [after=D] B?(b)
          ]
        }
      }

    bool_sink_once = process-definition (defined) bool_sink_once<
      pint<> N
      >(
        chan?(bool<>) B
      )
      In definition "bool_sink_once", we have: {
      Parameters:
        N = pint<> bool_sink_once::N
      Instances:
        B = chan?(bool<>) bool_sink_once::B
        b = bool<> bool_sink_once::b
      unroll sequence: 
        chan?(bool<>) B
        bool<> b
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            B?(b)
          }
        }
      }

    bool_source = process-definition (defined) bool_source<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source", we have: {
      Parameters:
        B = pbool<> bool_source::B^1
        N = pint<> bool_source::N
      Instances:
        S = chan!(bool<>) bool_source::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              S!(B[$i])
            }
          ]
        }
      footprint collection: {
        <1, {1}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
            }
          N = pint^0 value: 1
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
              }
            ]
        }
        <3, {1,1,0}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 1
              2 = 0
            }
          N = pint^0 value: 3
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(true)
                S!(false)
              }
            ]
        }
        <4, {1,0,1,1}> {
          B = pbool^1
            unrolled index-value pairs: {
              0 = 1
              1 = 0
              2 = 1
              3 = 1
            }
          N = pint^0 value: 4
          S = channel chan!(bool<>)^0 = bool_source::S (1) 
          Created state:
          channel instance pool:
          1	bool_source::S
          resolved concurrent actions:
            *[
              sequential: {
                S!(true)
                S!(false)
                S!(true)
                S!(true)
              }
            ]
        }
      }
      }

    bool_source_constant = process-definition (defined) bool_source_constant<>
<
      pbool<> V
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_constant", we have: {
      Parameters:
        V = pbool<> bool_source_constant::V
      Instances:
        S = chan!(bool<>) bool_source_constant::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            S!(V)
          ]
        }
      }

    bool_source_delay = process-definition (defined) bool_source_delay<>
<
      pint<> N
      pbool<> B[0..N-1]
      preal<> D
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_delay", we have: {
      Parameters:
        B = pbool<> bool_source_delay::B^1
        D = preal<> bool_source_delay::D
        N = pint<> bool_source_delay::N
      Instances:
        S = chan!(bool<>) bool_source_delay::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          *[
            concurrent i:[0..N-1]: {
              [after=D] S!(B[$i])
            }
          ]
        }
      }

    bool_source_once = process-definition (defined) bool_source_once<>
<
      pint<> N
      pbool<> B[0..N-1]
      >(
        chan!(bool<>) S
      )
      In definition "bool_source_once", we have: {
      Parameters:
        B = pbool<> bool_source_once::B^1
        N = pint<> bool_source_once::N
      Instances:
        S = chan!(bool<>) bool_source_once::S
      unroll sequence: 
        chan!(bool<>) S
      chp:
        concurrent: {
          concurrent i:[0..N-1]: {
            S!(B[$i])
          }
        }
      }

  Instances:
    A = bool_and<4> A
    In = chan(bool<>) In^1
    Out = chan(bool<>) Out
    S0 = bool_source<> S0
    S1 = bool_source<> S1
    S2 = bool_source<> S2
    S3 = bool_source<> S3
    Z = bool_sink<> Z
}

footprint: {
  A = process bool_and<4>^0 = A (1) (
    A = channel chan?(bool<>)^1
      {
        [0] = In[0] (1) 
        [1] = In[1] (2) 
        [2] = In[2] (3) 
        [3] = In[3] (4) 
      }
    O = channel chan!(bool<>)^0 = Out (5) 
  )
  In = channel chan(bool<>)^1
    {
      [0] = In[0] (1) 
      [1] = In[1] (2) 
      [2] = In[2] (3) 
      [3] = In[3] (4) 
    }
  Out = channel chan(bool<>)^0 = Out (5) 
  S0 = process bool_source<>^0<1, {1}> = S0 (2) (
    S = channel chan!(bool<>)^0 = In[0] (1) 
  )
  S1 = process bool_source<>^0<3, {1,1,0}> = S1 (3) (
    S = channel chan!(bool<>)^0 = In[1] (2) 
  )
  S2 = process bool_source<>^0<4, {1,0,1,1}> = S2 (4) (
    S = channel chan!(bool<>)^0 = In[2] (3) 
  )
  S3 = process bool_source<>^0<1, {1}> = S3 (5) (
    S = channel chan!(bool<>)^0 = In[3] (4) 
  )
  Z = process bool_sink<>^0 = Z (6) (
    B = channel chan?(bool<>)^0 = Out (5) 
  )
  Created state:
  process instance pool:
  1	A
  2	S0<1, {1}>
  3	S1<3, {1,1,0}>
  4	S2<4, {1,0,1,1}>
  5	S3<1, {1}>
  6	Z
  channel instance pool:
  1	In[0]
  2	In[1]
  3	In[2]
  4	In[3]
  5	Out
}
