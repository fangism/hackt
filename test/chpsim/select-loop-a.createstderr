
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	28
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	5	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	6	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	7	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	8	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	9	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	10	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	11	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	12	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	13	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	14	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	15	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	16	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	17	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	18	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	19	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	20	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	21	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	22	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	23	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	24	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	25	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	26	##ADDR##	sdbnref_	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpb__	0	#HEAD#	#TAIL#	9
	28	##ADDR##	footprnt	0	#HEAD#	#TAIL#	394
	29	##ADDR##	CHPconcr	0	#HEAD#	#TAIL#	20
	30	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	31	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	32	##ADDR##	CHPloop_	0	#HEAD#	#TAIL#	16
	33	##ADDR##	CHPdetsl	0	#HEAD#	#TAIL#	24
	34	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	35	##ADDR##	CHPseqnc	0	#HEAD#	#TAIL#	24
	36	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	37	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20
	38	##ADDR##	CHPguard	0	#HEAD#	#TAIL#	16
	39	##ADDR##	CHPassgn	0	#HEAD#	#TAIL#	20

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  2 instantiation-collections
  0 sub-namespaces
  0 definitions
  0 typedefs
  Instances:
    a = bool<> a
    b = bool<> b
}

top-level chp:
  concurrent: {
    sequential: {
      a := false
      *[
        deterministic: {
          a -> sequential: {
            b := true
            a := false
          }
          else -> a := true
        }
      ]
    }
  }
footprint: {
  a = bool^0 = a (1) 
  b = bool^0 = b (2) 
  Created state:
  bool instance pool:
  1	a
  2	b
  resolved concurrent actions:
    sequential: {
      a := false
      *[
        deterministic: {
          a -> sequential: {
            b := true
            a := false
          }
          else -> a := true
        }
      ]
    }
  chp events: {
    event[0]: assign: a := false, #pred: 1, succ: 5 
    event[1]: null: null, #pred: 1, succ: 5 
    event[2]: assign: a := false, #pred: 1, succ: 1 
    event[3]: assign: b := true, #pred: 1, succ: 2 
    event[4]: assign: a := true, #pred: 1, succ: 1 
    event[5]: select: [ a -> ... [] else -> ... ], #pred: 1, succ: 3 4 
  }
}
