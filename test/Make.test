# "test/Make.test"
# a template makefile for testing, to be included in recursive invocations
#	$Id: Make.test,v 1.12 2005/07/20 21:01:03 fang Exp $

include $(top_srcdir)/Make.stddef

ARTC_EXE = $(top_builddir)/src/artc
ART2OBJ_EXE = $(top_builddir)/src/art++2obj
ARTOBJDUMP_EXE = $(top_builddir)/src/artobjdump
ARTOBJUNROLL_EXE = $(top_builddir)/src/artobjunroll

ARTC_TEST_SH = $(top_srcdir)/test/artc-expect.sh
ARTOBJ_TEST_SH = $(top_srcdir)/test/artobj-diff.sh
ARTOBJUNROLL_TEST_SH = $(top_srcdir)/test/artobjunroll-expect.sh

STATE_ENUM_FILTER = $(AWK) -f $(top_srcdir)/test/state_enum_filter.awk
POM_HEADER_FILTER = $(AWK) -f $(top_srcdir)/test/POM-header-filter.awk
HEX_ADDRESS_FILTER = $(SED) -f $(top_srcdir)/test/address_filter.sed
ARTOBJ_DIFF_FILTER = $(POM_HEADER_FILTER)

TEST_REPORT = $(top_builddir)/test/test-report.txt

# This needs to be specified in Makefile.am to take effect
# SUFFIXES = .in .artctest .artobjtest .artobjunrolltest

.in.stderr:
	@$(TOUCH) $@

subdir.not_a_test:
	@$(ECHO) "#!$(SHELL)" > $@
	@$(ECHO) "echo \"In $(subdir):\" >> $(TEST_REPORT)" >> $@
	@$(CHMOD) +x $@

.in.artctest:
	@$(ECHO) "#!$(SHELL)" > $@
	@$(ECHO) "# \"$@\"" >> $@
	@$(ECHO) $(ARTC_TEST_SH) $(ARTC_EXE) $(srcdir) $* \
		"\"$(STATE_ENUM_FILTER)\"" $(TEST_REPORT) >> $@
	@$(CHMOD) +x $@

.in.artobjtest:
	@$(ECHO) "#!$(SHELL)" > $@
	@$(ECHO) "# \"$@\"" >> $@
	@$(ECHO) $(ARTOBJ_TEST_SH) $(ART2OBJ_EXE) $(ARTOBJDUMP_EXE) $(srcdir) \
		$* "\"$(ARTOBJ_DIFF_FILTER)\"" $(TEST_REPORT) >> $@
	@$(CHMOD) +x $@

.in.artobjunrolltest:
	@$(ECHO) "#!$(SHELL)" > $@
	@$(ECHO) "# \"$@\"" >> $@
	@$(ECHO) $(ARTOBJUNROLL_TEST_SH) $(ARTOBJUNROLL_EXE) $(ARTOBJDUMP_EXE) \
		$(srcdir) $* "\"$(ARTOBJ_DIFF_FILTER)\"" $(TEST_REPORT) >> $@
	@$(CHMOD) +x $@

# must be previously defined to use +=
# assuming ARTOBJ_TEST_SUBJECTS is subset of ARTC_TEST_SUBJECTS
EXTRA_DIST += $(ARTC_TEST_SUBJECTS:=.in) \
	$(ARTC_TEST_FAILURES:=.stderr) \
	$(BISON_OUTPUTS:=.stderr.bison) \
	$(ARTOBJUNROLL_TEST_SUBJECTS:=.unrollstderr)

# filter-out is GNUMake feature
#	$($(filter-out $(ARTC_TEST_PASSES), $(ARTC_TEST_SUBJECTS)):=.stderr)

# must be previously defined
CLEANFILES += $(TESTS) \
	$(ARTC_TEST_SUBJECTS:=.diff) \
	$(ARTC_TEST_SUBJECTS:=.test) \
	$(ARTC_TEST_SUBJECTS:=.test.filter) \
	$(ARTC_TEST_SUBJECTS:=.stderr.filter) \
	$(ARTC_TEST_PASSES:=.stderr) \
	$(BISON_OUTPUTS:=.stderr.bison.filter) \
	$(BISON_OUTPUTS:=.bison.diff) \
	$(ARTOBJ_TEST_SUBJECTS:=.outdump) \
	$(ARTOBJ_TEST_SUBJECTS:=.indump) \
	$(ARTOBJ_TEST_SUBJECTS:=.outdump.filter) \
	$(ARTOBJ_TEST_SUBJECTS:=.indump.filter) \
	$(ARTOBJ_TEST_SUBJECTS:=.artobj) \
	$(ARTOBJ_TEST_SUBJECTS:=.objdiff) \
	$(ARTOBJUNROLL_TEST_SUBJECTS:=.artobjunroll) \
	$(ARTOBJUNROLL_TEST_SUBJECTS:=.unrolldump) \
	$(ARTOBJUNROLL_TEST_SUBJECTS:=.unrolldump.filter) \
	$(ARTOBJUNROLL_TEST_SUBJECTS:=.unrolldiff) \
	check.log

DISTCLEANFILES += .cvsignore subdir.not_a_test

all-local: .cvsignore subdir.not_a_test \
	$(ARTC_TEST_PASSES:=.stderr) $(TESTS)

# doesn't work, but would like it to
# .PRECIOUS: check.log

# -k option allows continuation past directories with failed tests
check.log: force
	@$(ECHO) "Logging results of \"make -k check\" in $@ ..."
	@$(ECHO) Tests started `$(DATE)` > $@.tmp
	$(MAKE) -k check 2>&1 | cat >> $@.tmp
	-$(MV) $@.tmp $@
	-$(GREP) -v ^PASS $@
	@$(ECHO) Total of `$(GREP) ^FAIL $@ | wc -l` failures encountered.

# consider using CLEANFILES
AUTO_IGNORE = $(ARTC_TEST_PASSES:=.stderr) \
	$(ARTOBJUNROLL_TEST_SUBJECTS:=.artobjunrolltest)

SPACES_TO_NEWLINE = $(AWK) -f $(top_srcdir)/test/spacestonewline.awk

# might as well include this for non-maintainers too
# again, can't append to file with cat redirection because distclean
# sets permissions of new files as read-only
.cvsignore: $(top_srcdir)/test/test.cvsignore
	@$(ECHO) $(AUTO_IGNORE) | $(SPACES_TO_NEWLINE) > $@.temp
	$(CAT) $< $@.temp > $@
	-$(RM) $@.temp

.cvsignore: Makefile.am Makefile.in $(top_srcdir)/test/Make.test

# extra prefix ". " needed for shell script interpretation
# note: cd $$d; make ... will not work!
clean-cvsignore:
	-$(RM) .cvsignore
	@for d in $(SUBDIRS) ; do \
		if [ $$d != . ] ; then \
			if [ -d $$d ] ; then \
				$(MAKE) -C $$d clean-cvsignore ; \
			fi ; \
		fi ; \
	done


# automatically removes $(CLEANFILES)
clean-local:
	-$(RM) *.core core.*

# really remove these files!
cleaner: clean cleaner-recursive
	-$(RM) *.filter *.diff *.artobj
	-$(RM) *.artctest *.artobjtest *.artobjunrolltest
	-$(RM) *.indump *.outdump *.objdiff
	-$(RM) *.artobjunroll *.unrolldump *.unrolldiff

cleaner-recursive:
	@for d in $(SUBDIRS) ; do \
		if [ $$d != . ] ; then \
			if [ -d $$d ] ; then \
				$(MAKE) -C $$d cleaner ; \
			fi ; \
		fi ; \
	done
	

# some stderr files don't exist, because empty output files are optional
# this shouldn't really be necessary...
# dist-hook-extra:
#	$(RM) $(distdir)/subdir.not_a_test

# this cheat is only needed to create auto-generated (empty) distribution files
# dist-hook-missing: $(EXTRA_DIST)
#	@for f in $(EXTRA_DIST); do \
#		if ! [ -f $$f ] ; then \
#			$(TOUCH) $$f ; \
#		fi ; \
#	done

force:

