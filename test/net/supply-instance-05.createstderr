
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	80
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	16	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	17	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	19	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	28	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	29	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	30	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	31	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	33	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	35	##ADDR##	footprnt	0	#HEAD#	#TAIL#	443
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	37	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	38	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	46	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	47	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	48	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	49	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	50	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	53	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	54	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	55	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	57	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	58	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	59	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	60	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	63	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	64	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	65	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	67	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	68	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	69	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	70	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	71	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	72	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	74	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	75	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	76	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	78	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	79	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	82	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	83	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	84	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	85	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	86	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	89	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	91	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	92	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	93	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	95	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	96	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	98	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	99	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	100	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	101	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	102	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	103	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	104	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1592
	106	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	107	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	108	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	109	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	110	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	111	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	112	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	113	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	114	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  14 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        x = bool<> inv::x
        y = bool<> inv::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
        )
      prs:
        {
        x -> y-
        ~x -> y+
        }
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) 
        !Vdd = bool^0 = inv<>::!Vdd (2) 
        x = bool^0 = inv<>::x (3) 
        y = bool^0 = inv<>::y (4) 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	inv<>::!GND	
        2	inv<>::!Vdd	
        3	inv<>::x	
        4	inv<>::y	
        resolved prs:
        x -> y-
        ~x -> y+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = inv<> a
    b = inv<> b
    c = inv<> c
    d = inv<> d
    d2 = inv<> d2
    e = inv<> e
    f = inv<> f
    f2 = inv<> f2
    g = inv<> g
    myGND = bool<> myGND
    myVdd = bool<> myVdd
    x = bool<> x
}

footprint: {
  !GND = bool^0 = !GND (1) 
  !Vdd = bool^0 = !Vdd (2) 
  a = process inv<>^0 = a (1) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = x (3) 
    y = bool^0 = a.y (4) 
  )
  b = process inv<>^0 = b (2) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = x (3) 
    y = bool^0 = b.y (5) 
  )
  c = process inv<>^0 = c (3) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = x (3) 
    y = bool^0 = c.y (6) 
  )
  d = process inv<>^0 = d (4) (
    !GND = bool^0 = myGND (7) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = x (3) 
    y = bool^0 = d.y (8) 
  )
  d2 = process inv<>^0 = d2 (5) (
    !GND = bool^0 = myGND (7) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = x (3) 
    y = bool^0 = d2.y (9) 
  )
  e = process inv<>^0 = e (6) (
    !GND = bool^0 = myGND (7) 
    !Vdd = bool^0 = !Vdd (2) 
    x = bool^0 = x (3) 
    y = bool^0 = e.y (10) 
  )
  f = process inv<>^0 = f (7) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = myVdd (11) 
    x = bool^0 = x (3) 
    y = bool^0 = f.y (12) 
  )
  f2 = process inv<>^0 = f2 (8) (
    !GND = bool^0 = !GND (1) 
    !Vdd = bool^0 = myVdd (11) 
    x = bool^0 = x (3) 
    y = bool^0 = f2.y (13) 
  )
  g = process inv<>^0 = g (9) (
    !GND = bool^0 = myGND (7) 
    !Vdd = bool^0 = myVdd (11) 
    x = bool^0 = x (3) 
    y = bool^0 = g.y (14) 
  )
  myGND = bool^0 = myGND (7) 
  myVdd = bool^0 = myVdd (11) 
  x = bool^0 = x (3) 
  Created state:
  process instance pool: (0 ports, 9 local, 0 mapped)
  1	a	inv<>
    bool: 1,2,3,4
  2	b	inv<>
    bool: 1,2,3,5
  3	c	inv<>
    bool: 1,2,3,6
  4	d	inv<>
    bool: 7,2,3,8
  5	d2	inv<>
    bool: 7,2,3,9
  6	e	inv<>
    bool: 7,2,3,10
  7	f	inv<>
    bool: 1,11,3,12
  8	f2	inv<>
    bool: 1,11,3,13
  9	g	inv<>
    bool: 7,11,3,14
  bool instance pool: (0 ports, 14 local, 0 mapped)
  1	!GND	
  2	!Vdd	
  3	x	
  4	a.y	
  5	b.y	
  6	c.y	
  7	myGND	
  8	d.y	
  9	d2.y	
  10	e.y	
  11	myVdd	
  12	f.y	
  13	f2.y	
  14	g.y	
}
