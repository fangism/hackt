
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	160
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	10	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	11	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	12	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	13	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	14	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	15	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	16	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	17	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	18	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	20	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	21	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	22	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	23	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	25	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	27	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	28	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	29	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	30	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	31	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	32	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	33	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	35	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	36	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	37	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	PRSrloop	0	#HEAD#	#TAIL#	24
	40	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	41	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	42	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	43	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	44	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	47	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	30
	48	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	49	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	50	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	54	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	57	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	58	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	59	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	62	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	30
	63	##ADDR##	PRSand__	0	#HEAD#	#TAIL#	24
	64	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	66	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	68	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1294
	69	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	70	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	71	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	74	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	75	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	78	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	79	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	80	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	81	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	82	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	83	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	84	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	85	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	88	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	89	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	90	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	91	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	93	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	94	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	95	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	96	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	99	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	100	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	101	##ADDR##	proctpcp	0	#HEAD#	#TAIL#	16
	102	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	103	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	104	##ADDR##	footprnt	0	#HEAD#	#TAIL#	536
	105	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	106	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  1 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo<
      pint<> N
      ><
      pint<> K
      >(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
        bool<> z[0..N-1]
      )
      In definition "foo", we have: {
      Parameters:
        K = pint<> foo::K
        N = pint<> foo::N
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        x = bool<> foo::x
        y = bool<> foo::y
        z = bool<> foo::z^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
          bool<> z[0..N-1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        (:i:[0..N-1]:
          {
          x & y -> z[$i]- [W=($i+1)*K]
          ~x & ~y -> z[$i]+ [W=($i+1)*K]
          }
        )
      footprint collection: {
        <4, 5> {
          !GND = bool^0 = foo<4, 5>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = foo<4, 5>::!Vdd (2) @[ supply_high port-alias ] 
          K = pint^0 value: 5
          N = pint^0 value: 4
          x = bool^0 = foo<4, 5>::x (3) @[ port-alias loc-FO- loc-FO+ ] 
          y = bool^0 = foo<4, 5>::y (4) @[ port-alias loc-FO- loc-FO+ ] 
          z = bool^1
            {
              [0] = foo<4, 5>::z[0] (5) @[ port-alias loc-FI- loc-FI+ ] 
              [1] = foo<4, 5>::z[1] (6) @[ port-alias loc-FI- loc-FI+ ] 
              [2] = foo<4, 5>::z[2] (7) @[ port-alias loc-FI- loc-FI+ ] 
              [3] = foo<4, 5>::z[3] (8) @[ port-alias loc-FI- loc-FI+ ] 
            }
          Created state:
          bool instance pool: (8 ports, 0 local, 0 mapped)
          1	foo<4, 5>::!GND @[ supply_low port-alias ]	
          2	foo<4, 5>::!Vdd @[ supply_high port-alias ]	
          3	foo<4, 5>::x @[ port-alias loc-FO- loc-FO+ ]	
          4	foo<4, 5>::y @[ port-alias loc-FO- loc-FO+ ]	
          5	foo<4, 5>::z[0] @[ port-alias loc-FI- loc-FI+ ]	
          6	foo<4, 5>::z[1] @[ port-alias loc-FI- loc-FI+ ]	
          7	foo<4, 5>::z[2] @[ port-alias loc-FI- loc-FI+ ]	
          8	foo<4, 5>::z[3] @[ port-alias loc-FI- loc-FI+ ]	
          resolved prs:
          x & y -> z[0]- [W=5]
          ~x & ~y -> z[0]+ [W=5]
          x & y -> z[1]- [W=10]
          ~x & ~y -> z[1]+ [W=10]
          x & y -> z[2]- [W=15]
          ~x & ~y -> z[2]+ [W=15]
          x & y -> z[3]- [W=20]
          ~x & ~y -> z[3]+ [W=20]
          rule supply map: (rules, macros, @nodes : Vdd, GND)
          0..1 none none : 2, 1 | 2, 1
          2..3 none none : 2, 1 | 2, 1
          4..5 none none : 2, 1 | 2, 1
          6..7 none none : 2, 1 | 2, 1
        }
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<4> bar
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bar = process foo<4>^0<5> = bar (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    x = bool^0 = bar.x (3) @[ sub-FO- sub-FO+ ] 
    y = bool^0 = bar.y (4) @[ sub-FO- sub-FO+ ] 
    z = bool^1
      {
        [0] = bar.z[0] (5) @[ sub-FI- sub-FI+ ] 
        [1] = bar.z[1] (6) @[ sub-FI- sub-FI+ ] 
        [2] = bar.z[2] (7) @[ sub-FI- sub-FI+ ] 
        [3] = bar.z[3] (8) @[ sub-FI- sub-FI+ ] 
      }
  )
  Created state:
  process instance pool: (0 ports, 1 local, 0 mapped)
  1	bar<5>	foo<4, 5>
    bool: 1,2,3,4,5,6,7,8
  bool instance pool: (0 ports, 8 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	bar.x @[ sub-FO- sub-FO+ ]	
  4	bar.y @[ sub-FO- sub-FO+ ]	
  5	bar.z[0] @[ sub-FI- sub-FI+ ]	
  6	bar.z[1] @[ sub-FI- sub-FI+ ]	
  7	bar.z[2] @[ sub-FI- sub-FI+ ]	
  8	bar.z[3] @[ sub-FI- sub-FI+ ]	
}
