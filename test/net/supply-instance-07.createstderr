
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	252
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	12	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	14	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	15	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	16	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	17	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	18	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	19	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	20	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	21	##ADDR##	portscop	0	#HEAD#	#TAIL#	32
	22	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	23	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	24	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	27	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	28	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	31	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	32	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	37	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	28
	45	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	46	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	47	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	50	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	52	##ADDR##	footprnt	0	#HEAD#	#TAIL#	435
	53	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	54	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	55	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	57	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	58	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	59	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	60	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	61	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	62	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	63	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	64	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	65	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	66	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	68	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	69	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	72	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	73	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	75	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	76	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	77	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	78	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	79	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	80	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	81	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	82	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	83	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	86	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	87	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	88	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	89	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	90	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	91	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	93	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	95	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	96	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	97	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	100	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	101	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	102	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	103	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	104	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	105	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	108	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	109	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1592
	110	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	111	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	112	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	113	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	114	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	115	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	116	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	117	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	118	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	119	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	120	##ADDR##	procdefn	0	#HEAD#	#TAIL#	116
	121	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	122	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	123	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	124	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	125	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	126	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	127	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	128	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	129	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	130	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	131	##ADDR##	footprnt	0	#HEAD#	#TAIL#	334
	132	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	133	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	134	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	135	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	136	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	137	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	138	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	139	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	140	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	141	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	142	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	36
	143	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	145	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	146	##ADDR##	mdbolref	0	#HEAD#	#TAIL#	20
	147	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	148	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	149	##ADDR##	footprnt	0	#HEAD#	#TAIL#	621
	150	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	151	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  5 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> myVdd
        bool<> myGND
        bool<> in
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        a = inv<> foo::a
        b = inv<> foo::b
        c = inv<> foo::c
        d = inv<> foo::d
        d2 = inv<> foo::d2
        e = inv<> foo::e
        f = inv<> foo::f
        f2 = inv<> foo::f2
        g = inv<> foo::g
        in = bool<> foo::in
        myGND = bool<> foo::myGND
        myVdd = bool<> foo::myVdd
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> myVdd
          bool<> myGND
          bool<> in
        )
        inv<> a
        a ( , , in, );
        inv<> b
        b ( , , in, );
        inv<> c
        c ( , , in, );
        inv<> d
        d $( , myGND);
        d ( , , in, );
        inv<> d2
        d2 $( , myGND);
        d2 ( , , in, );
        inv<> e
        e $( , myGND);
        e ( , , in, );
        inv<> f
        f $(myVdd, );
        f ( , , in, );
        inv<> f2
        f2 $(myVdd, );
        f2 ( , , in, );
        inv<> g
        g $(myVdd, myGND);
        g ( , , in, );
      footprint: {
        !GND = bool^0 = foo<>::!GND (1) 
        !Vdd = bool^0 = foo<>::!Vdd (2) 
        a = process inv<>^0 = foo<>::a (1) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::a.y (4) 
        )
        b = process inv<>^0 = foo<>::b (2) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::b.y (5) 
        )
        c = process inv<>^0 = foo<>::c (3) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::c.y (6) 
        )
        d = process inv<>^0 = foo<>::d (4) (
          !GND = bool^0 = foo<>::myGND (7) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::d.y (8) 
        )
        d2 = process inv<>^0 = foo<>::d2 (5) (
          !GND = bool^0 = foo<>::myGND (7) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::d2.y (9) 
        )
        e = process inv<>^0 = foo<>::e (6) (
          !GND = bool^0 = foo<>::myGND (7) 
          !Vdd = bool^0 = foo<>::!Vdd (2) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::e.y (10) 
        )
        f = process inv<>^0 = foo<>::f (7) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::myVdd (11) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::f.y (12) 
        )
        f2 = process inv<>^0 = foo<>::f2 (8) (
          !GND = bool^0 = foo<>::!GND (1) 
          !Vdd = bool^0 = foo<>::myVdd (11) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::f2.y (13) 
        )
        g = process inv<>^0 = foo<>::g (9) (
          !GND = bool^0 = foo<>::myGND (7) 
          !Vdd = bool^0 = foo<>::myVdd (11) 
          x = bool^0 = foo<>::in (3) 
          y = bool^0 = foo<>::g.y (14) 
        )
        in = bool^0 = foo<>::in (3) 
        myGND = bool^0 = foo<>::myGND (7) 
        myVdd = bool^0 = foo<>::myVdd (11) 
        Created state:
        process instance pool:
        1	foo<>::a
        2	foo<>::b
        3	foo<>::c
        4	foo<>::d
        5	foo<>::d2
        6	foo<>::e
        7	foo<>::f
        8	foo<>::f2
        9	foo<>::g
        bool instance pool:
        1	foo<>::!GND
        2	foo<>::!Vdd
        3	foo<>::in
        4	foo<>::a.y
        5	foo<>::b.y
        6	foo<>::c.y
        7	foo<>::myGND
        8	foo<>::d.y
        9	foo<>::d2.y
        10	foo<>::e.y
        11	foo<>::myVdd
        12	foo<>::f.y
        13	foo<>::f2.y
        14	foo<>::g.y
      }
      }

    globals = process-definition (defined) globals(
        bool<> Vdd_1
        bool<> GND_1
        bool<> Vdd_2
        bool<> GND_2
      )
      In definition "globals", we have: {
      Instances:
        GND_1 = bool<> globals::GND_1
        GND_2 = bool<> globals::GND_2
        Vdd_1 = bool<> globals::Vdd_1
        Vdd_2 = bool<> globals::Vdd_2
      unroll sequence: 
        ports: (
          bool<> Vdd_1
          bool<> GND_1
          bool<> Vdd_2
          bool<> GND_2
        )
      footprint: {
        GND_1 = bool^0 = globals<>::GND_1 (2) 
        GND_2 = bool^0 = globals<>::GND_2 (4) 
        Vdd_1 = bool^0 = globals<>::Vdd_1 (1) 
        Vdd_2 = bool^0 = globals<>::Vdd_2 (3) 
        Created state:
        bool instance pool:
        1	globals<>::Vdd_1
        2	globals<>::GND_1
        3	globals<>::Vdd_2
        4	globals<>::GND_2
      }
      }

    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        x = bool<> inv::x
        y = bool<> inv::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
        )
      prs:
        {
        x -> y-
        ~x -> y+
        }
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) 
        !Vdd = bool^0 = inv<>::!Vdd (2) 
        x = bool^0 = inv<>::x (3) 
        y = bool^0 = inv<>::y (4) 
        Created state:
        bool instance pool:
        1	inv<>::!GND
        2	inv<>::!Vdd
        3	inv<>::x
        4	inv<>::y
        resolved prs:
        x -> y-
        ~x -> y+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bar = foo<> bar
    gg = globals<> gg
    x = bool<> x
}

footprint: {
  !GND = bool^0 = !GND (5) 
  !Vdd = bool^0 = !Vdd (6) 
  bar = process foo<>^0 = bar (2) (
    !GND = bool^0 = !GND (5) 
    !Vdd = bool^0 = !Vdd (6) 
    myVdd = bool^0 = gg.Vdd_1 (1) 
    myGND = bool^0 = gg.GND_1 (2) 
    in = bool^0 = x (7) 
  )
  gg = process globals<>^0 = gg (1) (
    Vdd_1 = bool^0 = gg.Vdd_1 (1) 
    GND_1 = bool^0 = gg.GND_1 (2) 
    Vdd_2 = bool^0 = gg.Vdd_2 (3) 
    GND_2 = bool^0 = gg.GND_2 (4) 
  )
  x = bool^0 = x (7) 
  Created state:
  process instance pool:
  1	gg
  2	bar
  bool instance pool:
  1	gg.Vdd_1
  2	gg.GND_1
  3	gg.Vdd_2
  4	gg.GND_2
  5	!GND
  6	!Vdd
  7	x
}
