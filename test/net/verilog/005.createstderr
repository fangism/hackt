
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	6	##ADDR##	procdefn	0	#HEAD#	#TAIL#	150
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	11	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	12	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	13	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	14	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	20	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	21	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	22	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	23	##ADDR##	procdefn	0	#HEAD#	#TAIL#	117
	24	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	25	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	26	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	27	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	28	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	29	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	30	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	31	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	32	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	33	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	34	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	35	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	37	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	38	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	34
	39	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	40	##ADDR##	footprnt	0	#HEAD#	#TAIL#	378
	41	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	42	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	43	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	45	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	46	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	47	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	50	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	51	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	52	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	53	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	54	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	55	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	58	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	62	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	63	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	67	##ADDR##	procdefn	0	#HEAD#	#TAIL#	135
	68	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	69	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	70	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	71	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	72	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	73	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	74	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	75	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	76	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	78	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	80	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	83	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	85	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	86	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	87	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	88	##ADDR##	procdird	0	#HEAD#	#TAIL#	13
	89	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	procdird	0	#HEAD#	#TAIL#	13
	91	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	footprnt	0	#HEAD#	#TAIL#	528
	93	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	95	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	96	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	97	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	98	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	99	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	100	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	101	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	102	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	103	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	106	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	109	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	111	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	114	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	115	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	116	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	117	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	118	##ADDR##	footprnt	0	#HEAD#	#TAIL#	1457
	119	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	120	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	121	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	122	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	123	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	124	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	125	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	126	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	127	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	128	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	129	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	131	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	132	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	133	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	136	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	137	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	138	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	139	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	140	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	143	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	145	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	146	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	147	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	148	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	footprnt	0	#HEAD#	#TAIL#	845
	150	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  4 typedefs
  Definitions:
    array = process-definition (defined) array<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? I[0..N-1]
        e1of2<>! O[0..N-1]
      )
      In definition "array", we have: {
      Parameters:
        N = pint<> array::N
      Instances:
        !GND = bool<> array::!GND
        !Vdd = bool<> array::!Vdd
        I = e1of2<>? array::I^1
        O = e1of2<>! array::O^1
        b = buffer<> array::b^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? I[0..N-1]
          e1of2<>! O[0..N-1]
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        buffer<> b[0..N-1]
        (;j:[0..N-1]:
          b[$j] ( , , I[$j], O[$j]);
        )
      footprint collection: {
        <2> {
          !GND = bool^0 = array<2>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = array<2>::!Vdd (2) @[ supply_high port-alias ] 
          I = process e1of<2>^1
            {
              [0] = array<2>::I[0] (1) @[ port? sub? port-alias ] (
                d = bool^1
                  {
                    [0] = array<2>::I[0].d[0] (3) @[ port-alias ] 
                    [1] = array<2>::I[0].d[1] (4) @[ port-alias ] 
                  }
                e = bool^0 = array<2>::I[0].e (5) @[ port-alias ] 
              )
              [1] = array<2>::I[1] (3) @[ port? sub? port-alias ] (
                d = bool^1
                  {
                    [0] = array<2>::I[1].d[0] (9) @[ port-alias ] 
                    [1] = array<2>::I[1].d[1] (10) @[ port-alias ] 
                  }
                e = bool^0 = array<2>::I[1].e (11) @[ port-alias ] 
              )
            }
          N = pint^0 value: 2
          O = process e1of<2>^1
            {
              [0] = array<2>::O[0] (2) @[ sub! port! port-alias ] (
                d = bool^1
                  {
                    [0] = array<2>::O[0].d[0] (6) @[ port-alias ] 
                    [1] = array<2>::O[0].d[1] (7) @[ port-alias ] 
                  }
                e = bool^0 = array<2>::O[0].e (8) @[ port-alias ] 
              )
              [1] = array<2>::O[1] (4) @[ sub! port! port-alias ] (
                d = bool^1
                  {
                    [0] = array<2>::O[1].d[0] (12) @[ port-alias ] 
                    [1] = array<2>::O[1].d[1] (13) @[ port-alias ] 
                  }
                e = bool^0 = array<2>::O[1].e (14) @[ port-alias ] 
              )
            }
          b = process buffer<>^1
            {
              [0] = array<2>::b[0] (5) (
                !GND = bool^0 = array<2>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = array<2>::!Vdd (2) @[ supply_high port-alias ] 
                I = process e1of<2>^0 = array<2>::I[0] (1) @[ port? sub? port-alias ] (
                  d = bool^1
                    {
                      [0] = array<2>::I[0].d[0] (3) @[ port-alias ] 
                      [1] = array<2>::I[0].d[1] (4) @[ port-alias ] 
                    }
                  e = bool^0 = array<2>::I[0].e (5) @[ port-alias ] 
                )
                O = process e1of<2>^0 = array<2>::O[0] (2) @[ sub! port! port-alias ] (
                  d = bool^1
                    {
                      [0] = array<2>::O[0].d[0] (6) @[ port-alias ] 
                      [1] = array<2>::O[0].d[1] (7) @[ port-alias ] 
                    }
                  e = bool^0 = array<2>::O[0].e (8) @[ port-alias ] 
                )
              )
              [1] = array<2>::b[1] (6) (
                !GND = bool^0 = array<2>::!GND (1) @[ supply_low port-alias ] 
                !Vdd = bool^0 = array<2>::!Vdd (2) @[ supply_high port-alias ] 
                I = process e1of<2>^0 = array<2>::I[1] (3) @[ port? sub? port-alias ] (
                  d = bool^1
                    {
                      [0] = array<2>::I[1].d[0] (9) @[ port-alias ] 
                      [1] = array<2>::I[1].d[1] (10) @[ port-alias ] 
                    }
                  e = bool^0 = array<2>::I[1].e (11) @[ port-alias ] 
                )
                O = process e1of<2>^0 = array<2>::O[1] (4) @[ sub! port! port-alias ] (
                  d = bool^1
                    {
                      [0] = array<2>::O[1].d[0] (12) @[ port-alias ] 
                      [1] = array<2>::O[1].d[1] (13) @[ port-alias ] 
                    }
                  e = bool^0 = array<2>::O[1].e (14) @[ port-alias ] 
                )
              )
            }
          Created state:
          process instance pool: (4 ports, 2 local, 0 mapped)
          1	array<2>::I[0] @[ port? sub? port-alias ]	e1of<2>
            bool: 5,3,4
          2	array<2>::O[0] @[ sub! port! port-alias ]	e1of<2>
            bool: 8,6,7
          3	array<2>::I[1] @[ port? sub? port-alias ]	e1of<2>
            bool: 11,9,10
          4	array<2>::O[1] @[ sub! port! port-alias ]	e1of<2>
            bool: 14,12,13
          5	array<2>::b[0]	buffer<>
            process: 1,2
            bool: 3,4,5,6,7,8,1,2
          6	array<2>::b[1]	buffer<>
            process: 3,4
            bool: 9,10,11,12,13,14,1,2
          bool instance pool: (14 ports, 0 local, 0 mapped)
          1	array<2>::!GND @[ supply_low port-alias ]	
          2	array<2>::!Vdd @[ supply_high port-alias ]	
          3	array<2>::I[0].d[0] @[ port-alias ]	
          4	array<2>::I[0].d[1] @[ port-alias ]	
          5	array<2>::I[0].e @[ port-alias ]	
          6	array<2>::O[0].d[0] @[ port-alias ]	
          7	array<2>::O[0].d[1] @[ port-alias ]	
          8	array<2>::O[0].e @[ port-alias ]	
          9	array<2>::I[1].d[0] @[ port-alias ]	
          10	array<2>::I[1].d[1] @[ port-alias ]	
          11	array<2>::I[1].e @[ port-alias ]	
          12	array<2>::O[1].d[0] @[ port-alias ]	
          13	array<2>::O[1].d[1] @[ port-alias ]	
          14	array<2>::O[1].e @[ port-alias ]	
        }
      }
      }

    buffer = process-definition (defined) buffer(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? I
        e1of2<>! O
      )
      In definition "buffer", we have: {
      Instances:
        !GND = bool<> buffer::!GND
        !Vdd = bool<> buffer::!Vdd
        I = e1of2<>? buffer::I
        O = e1of2<>! buffer::O
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? I
          e1of2<>! O
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        I?
        O!
      footprint: {
        !GND = bool^0 = buffer<>::!GND (7) @[ supply_low port-alias ] 
        !Vdd = bool^0 = buffer<>::!Vdd (8) @[ supply_high port-alias ] 
        I = process e1of<2>^0 = buffer<>::I (1) @[ port? loc? port-alias ] (
          d = bool^1
            {
              [0] = buffer<>::I.d[0] (1) @[ port-alias ] 
              [1] = buffer<>::I.d[1] (2) @[ port-alias ] 
            }
          e = bool^0 = buffer<>::I.e (3) @[ port-alias ] 
        )
        O = process e1of<2>^0 = buffer<>::O (2) @[ loc! port! port-alias ] (
          d = bool^1
            {
              [0] = buffer<>::O.d[0] (4) @[ port-alias ] 
              [1] = buffer<>::O.d[1] (5) @[ port-alias ] 
            }
          e = bool^0 = buffer<>::O.e (6) @[ port-alias ] 
        )
        Created state:
        process instance pool: (2 ports, 0 local, 0 mapped)
        1	buffer<>::I @[ port? loc? port-alias ]	e1of<2>
          bool: 3,1,2
        2	buffer<>::O @[ loc! port! port-alias ]	e1of<2>
          bool: 6,4,5
        bool instance pool: (8 ports, 0 local, 0 mapped)
        1	buffer<>::I.d[0] @[ port-alias ]	
        2	buffer<>::I.d[1] @[ port-alias ]	
        3	buffer<>::I.e @[ port-alias ]	
        4	buffer<>::O.d[0] @[ port-alias ]	
        5	buffer<>::O.d[1] @[ port-alias ]	
        6	buffer<>::O.e @[ port-alias ]	
        7	buffer<>::!GND @[ supply_low port-alias ]	
        8	buffer<>::!Vdd @[ supply_high port-alias ]	
      }
      }

    e1of = process-definition (defined) e1of<
      pint<> N
      >(
        bool<> d[0..N-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        N = pint<> e1of::N
      Instances:
        d = bool<> e1of::d^1
        e = bool<> e1of::e
      unroll sequence: 
        ports: (
          bool<> d[0..N-1]
          bool<> e
        )
      spec:
        exclhi(d)
      footprint collection: {
        <2> {
          N = pint^0 value: 2
          d = bool^1
            {
              [0] = e1of<2>::d[0] (2) @[ port-alias ] 
              [1] = e1of<2>::d[1] (3) @[ port-alias ] 
            }
          e = bool^0 = e1of<2>::e (1) @[ port-alias ] 
          Created state:
          bool instance pool: (3 ports, 0 local, 0 mapped)
          1	e1of<2>::e @[ port-alias ]	
          2	e1of<2>::d[0] @[ port-alias ]	
          3	e1of<2>::d[1] @[ port-alias ]	
          resolved specs:
          exclhi({d[0],d[1]})
        }
      }
      }

  Typedefs:
    e1of1 = process-definition-alias: e1of1
      = e1of<1>
    e1of2 = process-definition-alias: e1of2
      = e1of<2>
    e1of3 = process-definition-alias: e1of3
      = e1of<3>
    e1of4 = process-definition-alias: e1of4
      = e1of<4>
  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    a = array<2> a
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  a = process array<2>^0 = a (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    I = process e1of<2>^1
      {
        [0] = a.I[0] (2) @[ sub? ] (
          d = bool^1
            {
              [0] = a.I[0].d[0] (3) 
              [1] = a.I[0].d[1] (4) 
            }
          e = bool^0 = a.I[0].e (5) 
        )
        [1] = a.I[1] (3) @[ sub? ] (
          d = bool^1
            {
              [0] = a.I[1].d[0] (6) 
              [1] = a.I[1].d[1] (7) 
            }
          e = bool^0 = a.I[1].e (8) 
        )
      }
    O = process e1of<2>^1
      {
        [0] = a.O[0] (4) @[ sub! ] (
          d = bool^1
            {
              [0] = a.O[0].d[0] (9) 
              [1] = a.O[0].d[1] (10) 
            }
          e = bool^0 = a.O[0].e (11) 
        )
        [1] = a.O[1] (5) @[ sub! ] (
          d = bool^1
            {
              [0] = a.O[1].d[0] (12) 
              [1] = a.O[1].d[1] (13) 
            }
          e = bool^0 = a.O[1].e (14) 
        )
      }
  )
  Created state:
  process instance pool: (0 ports, 5 local, 2 mapped)
  1	a	array<2>
    process: 2,4,3,5
    bool: 1,2,3,4,5,9,10,11,6,7,8,12,13,14
  2	a.I[0] @[ sub? ]	e1of<2>
    bool: 5,3,4
  3	a.I[1] @[ sub? ]	e1of<2>
    bool: 8,6,7
  4	a.O[0] @[ sub! ]	e1of<2>
    bool: 11,9,10
  5	a.O[1] @[ sub! ]	e1of<2>
    bool: 14,12,13
  private sub-process index map:
    (1 -> 0)
    (6 -> 2)
  bool instance pool: (0 ports, 14 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	a.I[0].d[0]	
  4	a.I[0].d[1]	
  5	a.I[0].e	
  6	a.I[1].d[0]	
  7	a.I[1].d[1]	
  8	a.I[1].e	
  9	a.O[0].d[0]	
  10	a.O[0].d[1]	
  11	a.O[0].e	
  12	a.O[1].d[0]	
  13	a.O[1].d[1]	
  14	a.O[1].e	
}
