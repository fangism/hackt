
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	127
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	9	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	10	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	11	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	12	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	13	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	14	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	15	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	17	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	18	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	19	##ADDR##	procdefn	0	#HEAD#	#TAIL#	117
	20	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	21	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	22	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	23	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	24	##ADDR##	portscop	0	#HEAD#	#TAIL#	20
	25	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	26	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	27	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	28	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	29	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	30	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	31	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	32	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	33	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	34	##ADDR##	SPCdrctv	0	#HEAD#	#TAIL#	34
	35	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	36	##ADDR##	footprnt	0	#HEAD#	#TAIL#	378
	37	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	38	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	39	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	40	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	41	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	42	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	43	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	46	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	48	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	49	##ADDR##	procdird	0	#HEAD#	#TAIL#	13
	50	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	51	##ADDR##	procdird	0	#HEAD#	#TAIL#	13
	52	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	54	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	55	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	56	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	57	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	58	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	59	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	60	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	61	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	62	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	63	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	64	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	65	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	66	##ADDR##	procdefn	0	#HEAD#	#TAIL#	149
	67	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	68	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	69	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	70	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	71	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	72	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	73	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	74	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	75	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	76	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	77	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	78	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	79	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	80	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	81	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	82	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	83	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	84	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	85	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	86	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	87	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	88	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	90	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	91	##ADDR##	condscop	0	#HEAD#	#TAIL#	56
	92	##ADDR##	pireltex	0	#HEAD#	#TAIL#	22
	93	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	94	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	95	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	96	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	97	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	98	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	99	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	100	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	101	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	102	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	103	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	106	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	cindlst_	0	#HEAD#	#TAIL#	16
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	111	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	113	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	114	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	115	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	116	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	117	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	118	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	119	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	120	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	121	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	122	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	123	##ADDR##	loopscop	0	#HEAD#	#TAIL#	24
	124	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	125	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	126	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	127	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	128	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	129	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	130	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	131	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	132	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	133	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	134	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	135	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	136	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	137	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	138	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	139	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	140	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	141	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	142	##ADDR##	prcalias	0	#HEAD#	#TAIL#	20
	143	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	144	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	145	##ADDR##	footprnt	0	#HEAD#	#TAIL#	544
	146	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	147	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	148	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	150	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	151	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	152	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	153	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	154	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	155	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	156	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	157	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	158	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	159	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	160	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	161	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	162	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	163	##ADDR##	footprnt	0	#HEAD#	#TAIL#	625
	164	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  4 typedefs
  Definitions:
    buffer = process-definition (defined) buffer(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? I
        e1of2<>! O
      )
      In definition "buffer", we have: {
      Instances:
        !GND = bool<> buffer::!GND
        !Vdd = bool<> buffer::!Vdd
        I = e1of2<>? buffer::I
        O = e1of2<>! buffer::O
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? I
          e1of2<>! O
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        I?
        O!
      }

    e1of = process-definition (defined) e1of<
      pint<> N
      >(
        bool<> d[0..N-1]
        bool<> e
      )
      In definition "e1of", we have: {
      Parameters:
        N = pint<> e1of::N
      Instances:
        d = bool<> e1of::d^1
        e = bool<> e1of::e
      unroll sequence: 
        ports: (
          bool<> d[0..N-1]
          bool<> e
        )
      spec:
        exclhi(d)
      footprint collection: {
        <2> {
          N = pint^0 value: 2
          d = bool^1
            {
              [0] = e1of<2>::d[0] (2) @[ port-alias ] 
              [1] = e1of<2>::d[1] (3) @[ port-alias ] 
            }
          e = bool^0 = e1of<2>::e (1) @[ port-alias ] 
          Created state:
          bool instance pool: (3 ports, 0 local, 0 mapped)
          1	e1of<2>::e @[ port-alias ]	
          2	e1of<2>::d[0] @[ port-alias ]	
          3	e1of<2>::d[1] @[ port-alias ]	
          resolved specs:
          exclhi({d[0],d[1]})
        }
      }
      }

    fifo = process-definition (defined) fifo<
      pint<> N
      >(
        bool<> !GND
        bool<> !Vdd
        e1of2<>? I
        e1of2<>! O
      )
      In definition "fifo", we have: {
      Parameters:
        N = pint<> fifo::N
      Instances:
        !GND = bool<> fifo::!GND
        !Vdd = bool<> fifo::!Vdd
        I = e1of2<>? fifo::I
        M = e1of2<> fifo::M^1
        O = e1of2<>! fifo::O
        b = buffer<> fifo::b^1
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          e1of2<>? I
          e1of2<>! O
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        [ N>=1 ->
          e1of2<> M[0..N+1-1]
          M[0] = I;
          M[N] = O;
          buffer<> b[0..N-1]
          (;j:[0..N-1]:
            b[$j] ( , , M[$j], M[$j+1]);
          )
        [] else ->
          I = O;
        ]
      footprint collection: {
        <0> {
          !GND = bool^0 = fifo<0>::!GND (4) @[ supply_low port-alias ] 
          !Vdd = bool^0 = fifo<0>::!Vdd (5) @[ supply_high port-alias ] 
          I = process e1of<2>^0 = fifo<0>::I (1) @[ port? port! port-alias ] (
            d = bool^1
              {
                [0] = fifo<0>::I.d[0] (1) @[ port-alias ] 
                [1] = fifo<0>::I.d[1] (2) @[ port-alias ] 
              }
            e = bool^0 = fifo<0>::I.e (3) @[ port-alias ] 
          )
          N = pint^0 value: 0
          O = process e1of<2>^0 = fifo<0>::I (1) @[ port? port! port-alias ] (
            d = bool^1
              {
                [0] = fifo<0>::I.d[0] (1) @[ port-alias ] 
                [1] = fifo<0>::I.d[1] (2) @[ port-alias ] 
              }
            e = bool^0 = fifo<0>::I.e (3) @[ port-alias ] 
          )
          Created state:
          process instance pool: (1 ports, 0 local, 0 mapped)
          1	fifo<0>::I @[ port? port! port-alias ]	e1of<2>
            bool: 3,1,2
          bool instance pool: (5 ports, 0 local, 0 mapped)
          1	fifo<0>::I.d[0] @[ port-alias ]	
          2	fifo<0>::I.d[1] @[ port-alias ]	
          3	fifo<0>::I.e @[ port-alias ]	
          4	fifo<0>::!GND @[ supply_low port-alias ]	
          5	fifo<0>::!Vdd @[ supply_high port-alias ]	
          process port aliases:
          1: fifo<0>::I = fifo<0>::O @[ port? port! port-alias ]
          bool port aliases:
          1: fifo<0>::I.d[0] = fifo<0>::O.d[0] @[ port-alias ]
          2: fifo<0>::I.d[1] = fifo<0>::O.d[1] @[ port-alias ]
          3: fifo<0>::I.e = fifo<0>::O.e @[ port-alias ]
        }
      }
      }

  Typedefs:
    e1of1 = process-definition-alias: e1of1
      = e1of<1>
    e1of2 = process-definition-alias: e1of2
      = e1of<2>
    e1of3 = process-definition-alias: e1of3
      = e1of<3>
    e1of4 = process-definition-alias: e1of4
      = e1of<4>
  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    f = fifo<0> f
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  f = process fifo<0>^0 = f (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    I = process e1of<2>^0 = f.I (2) (
      d = bool^1
        {
          [0] = f.I.d[0] (3) 
          [1] = f.I.d[1] (4) 
        }
      e = bool^0 = f.I.e (5) 
    )
    O = process e1of<2>^0 = f.I (2) (
      d = bool^1
        {
          [0] = f.I.d[0] (3) 
          [1] = f.I.d[1] (4) 
        }
      e = bool^0 = f.I.e (5) 
    )
  )
  Created state:
  process instance pool: (0 ports, 2 local, 0 mapped)
  1	f	fifo<0>
    process: 2
    bool: 3,4,5,1,2
  2	f.I	e1of<2>
    bool: 5,3,4
  bool instance pool: (0 ports, 5 local, 0 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	f.I.d[0]	
  4	f.I.d[1]	
  5	f.I.e	
}
