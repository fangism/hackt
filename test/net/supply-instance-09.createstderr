
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	20
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	5	##ADDR##	procdefn	0	#HEAD#	#TAIL#	136
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	7	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	8	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	9	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	10	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	11	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	12	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	13	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	14	##ADDR##	datadefn	0	#HEAD#	#TAIL#	69
	15	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	17	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	18	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	19	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	22	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	24	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	25	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	26	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	27	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	28	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	29	##ADDR##	procdefn	0	#HEAD#	#TAIL#	156
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	31	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	32	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	33	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	34	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	35	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	29
	36	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	27
	37	##ADDR##	portscop	0	#HEAD#	#TAIL#	36
	38	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	39	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	40	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	41	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	42	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	43	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	44	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	45	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	46	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	47	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	48	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	49	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	50	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	51	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	54	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	55	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	56	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	57	##ADDR##	procdefn	0	#HEAD#	#TAIL#	128
	58	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	59	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	28
	60	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	61	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	62	##ADDR##	portscop	0	#HEAD#	#TAIL#	28
	63	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	64	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	65	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	66	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	67	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	68	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	69	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	70	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	71	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	72	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	73	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	74	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	75	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	76	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	77	##ADDR##	PRSrnest	0	#HEAD#	#TAIL#	36
	78	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	79	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	80	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	81	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	82	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	83	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	84	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	20
	85	##ADDR##	footprnt	0	#HEAD#	#TAIL#	471
	86	##ADDR##	iprtovrd	0	#HEAD#	#TAIL#	24
	87	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	88	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	89	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	90	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	32
	91	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	92	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	93	##ADDR##	footprnt	0	#HEAD#	#TAIL#	521
	94	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	95	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	40
	96	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	97	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	99	##ADDR##	footprnt	0	#HEAD#	#TAIL#	543
	100	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12
	101	##ADDR##	procplch	0	#HEAD#	#TAIL#	26
	102	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	103	##ADDR##	datatprf	0	#HEAD#	#TAIL#	21
	104	##ADDR##	datainst	0	#HEAD#	#TAIL#	20
	105	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	106	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	108	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	109	##ADDR##	dboolatt	0	#HEAD#	#TAIL#	30
	110	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	111	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	112	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	113	##ADDR##	procinst	0	#HEAD#	#TAIL#	20
	114	##ADDR##	proctprf	0	#HEAD#	#TAIL#	21
	115	##ADDR##	footprnt	0	#HEAD#	#TAIL#	449
	116	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	12

In module created from: ##FILE## (unrolled) (created)
In namespace "", we have: {
  0 parameter-collections
  3 instantiation-collections
  0 sub-namespaces
  3 definitions
  0 typedefs
  Definitions:
    bar = process-definition (defined) bar(
        bool<> !GND
        bool<> !Vdd
        bool<> a
        bool<> b
      )
      In definition "bar", we have: {
      Instances:
        !GND = bool<> bar::!GND
        !Vdd = bool<> bar::!Vdd
        a = bool<> bar::a
        b = bool<> bar::b
        f = foo<> bar::f
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> a
          bool<> b
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        foo<> f
        f ( , , , , a, b);
      footprint: {
        !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
        a = bool^0 = bar<>::a (3) @[ port-alias sub-FO- sub-FO+ ] 
        b = bool^0 = bar<>::b (4) @[ port-alias sub-FI- sub-FI+ ] 
        f = process foo<>^0 = bar<>::f (1) (
          !GND = bool^0 = bar<>::!GND (1) @[ supply_low port-alias ] 
          !Vdd = bool^0 = bar<>::!Vdd (2) @[ supply_high port-alias ] 
          myVdd = bool^0 = bar<>::f.myVdd (5) 
          myGND = bool^0 = bar<>::f.myGND (6) 
          in = bool^0 = bar<>::a (3) @[ port-alias sub-FO- sub-FO+ ] 
          out = bool^0 = bar<>::b (4) @[ port-alias sub-FI- sub-FI+ ] 
        )
        Created state:
        process instance pool: (0 ports, 1 local, 1 mapped)
        1	bar<>::f	foo<>
          bool: 6,5,3,4,1,2
        private sub-process index map:
          (1 -> 0)
          (2 -> 1)
        bool instance pool: (4 ports, 2 local, 0 mapped)
        1	bar<>::!GND @[ supply_low port-alias ]	
        2	bar<>::!Vdd @[ supply_high port-alias ]	
        3	bar<>::a @[ port-alias sub-FO- sub-FO+ ]	
        4	bar<>::b @[ port-alias sub-FI- sub-FI+ ]	
        5	bar<>::f.myVdd	
        6	bar<>::f.myGND	
      }
      }

    foo = process-definition (defined) foo(
        bool<> !GND
        bool<> !Vdd
        bool<> myVdd
        bool<> myGND
        bool<> in
        bool<> out
      )
      In definition "foo", we have: {
      Instances:
        !GND = bool<> foo::!GND
        !Vdd = bool<> foo::!Vdd
        a = inv<> foo::a
        in = bool<> foo::in
        myGND = bool<> foo::myGND
        myVdd = bool<> foo::myVdd
        out = bool<> foo::out
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> myVdd
          bool<> myGND
          bool<> in
          bool<> out
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
        inv<> a
        a $(myVdd, myGND);
        a ( , , in, out);
      footprint: {
        !GND = bool^0 = foo<>::!GND (5) @[ supply_low port-alias ] 
        !Vdd = bool^0 = foo<>::!Vdd (6) @[ supply_high port-alias ] 
        a = process inv<>^0 = foo<>::a (1) (
          !GND = bool^0 = foo<>::myGND (1) @[ port-alias ] 
          !Vdd = bool^0 = foo<>::myVdd (2) @[ port-alias ] 
          x = bool^0 = foo<>::in (3) @[ port-alias sub-FO- sub-FO+ ] 
          y = bool^0 = foo<>::out (4) @[ port-alias sub-FI- sub-FI+ ] 
        )
        in = bool^0 = foo<>::in (3) @[ port-alias sub-FO- sub-FO+ ] 
        myGND = bool^0 = foo<>::myGND (1) @[ port-alias ] 
        myVdd = bool^0 = foo<>::myVdd (2) @[ port-alias ] 
        out = bool^0 = foo<>::out (4) @[ port-alias sub-FI- sub-FI+ ] 
        Created state:
        process instance pool: (0 ports, 1 local, 0 mapped)
        1	foo<>::a	inv<>
          bool: 1,2,3,4
        bool instance pool: (6 ports, 0 local, 0 mapped)
        1	foo<>::myGND @[ port-alias ]	
        2	foo<>::myVdd @[ port-alias ]	
        3	foo<>::in @[ port-alias sub-FO- sub-FO+ ]	
        4	foo<>::out @[ port-alias sub-FI- sub-FI+ ]	
        5	foo<>::!GND @[ supply_low port-alias ]	
        6	foo<>::!Vdd @[ supply_high port-alias ]	
      }
      }

    inv = process-definition (defined) inv(
        bool<> !GND
        bool<> !Vdd
        bool<> x
        bool<> y
      )
      In definition "inv", we have: {
      Instances:
        !GND = bool<> inv::!GND
        !Vdd = bool<> inv::!Vdd
        x = bool<> inv::x
        y = bool<> inv::y
      unroll sequence: 
        ports: (
          bool<> !GND
          bool<> !Vdd
          bool<> x
          bool<> y
        )
        !GND@[supply=0]
        !Vdd@[supply=1]
      prs:
        {
        x -> y-
        ~x -> y+
        }
      footprint: {
        !GND = bool^0 = inv<>::!GND (1) @[ supply_low port-alias ] 
        !Vdd = bool^0 = inv<>::!Vdd (2) @[ supply_high port-alias ] 
        x = bool^0 = inv<>::x (3) @[ port-alias loc-FO- loc-FO+ ] 
        y = bool^0 = inv<>::y (4) @[ port-alias loc-FI- loc-FI+ ] 
        Created state:
        bool instance pool: (4 ports, 0 local, 0 mapped)
        1	inv<>::!GND @[ supply_low port-alias ]	
        2	inv<>::!Vdd @[ supply_high port-alias ]	
        3	inv<>::x @[ port-alias loc-FO- loc-FO+ ]	
        4	inv<>::y @[ port-alias loc-FI- loc-FI+ ]	
        resolved prs:
        x -> y-
        ~x -> y+
        rule supply map: (rules, macros, @nodes : Vdd, GND)
        0..1 none none : 2, 1 | 2, 1
      }
      }

  Instances:
    !GND = bool<> !GND
    !Vdd = bool<> !Vdd
    bq = bar<> bq
}

footprint: {
  !GND = bool^0 = !GND (1) @[ supply_low ] 
  !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
  bq = process bar<>^0 = bq (1) (
    !GND = bool^0 = !GND (1) @[ supply_low ] 
    !Vdd = bool^0 = !Vdd (2) @[ supply_high ] 
    a = bool^0 = bq.a (3) @[ sub-FO- sub-FO+ ] 
    b = bool^0 = bq.b (4) @[ sub-FI- sub-FI+ ] 
  )
  Created state:
  process instance pool: (0 ports, 1 local, 2 mapped)
  1	bq	bar<>
    bool: 1,2,3,4
  private sub-process index map:
    (1 -> 0)
    (2 -> 2)
  bool instance pool: (0 ports, 4 local, 2 mapped)
  1	!GND @[ supply_low ]	
  2	!Vdd @[ supply_high ]	
  3	bq.a @[ sub-FO- sub-FO+ ]	
  4	bq.b @[ sub-FI- sub-FI+ ]	
  private sub-bool index map:
    (1 -> 0)
    (2 -> 2)
}
