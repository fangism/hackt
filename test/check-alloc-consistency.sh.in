#!@SH_PATH@
# "check-alloc-consistency.sh.in"
#	$Id: 
# run this test AFTER the corresponding alloc-test has been run

# $1 is the executable for the creator (hackt alloc), expecting 2 arguments
# $2 is the executable for reading in the object file, (probably hackt objdump)
#	and producing a textual dump to stderr.

# $3 is the path to the source directory, which is not necessarily ./
#	during distcheck uses _build
# $4 is the input file name WITHOUT the .in extension
# $5 is the filter for ignoring certain difference in output
#	(for no filter, pass "cat")
# other subsequent arguments are ignored

# if test $# -lt 5 ; then exit 1 ; fi

alloc=$1
dump=$2
srcroot=$3/$4
bldroot=$4
filter=$5




inputs="$bldroot.haco $bldroot.haco-u $bldroot.haco-c $bldroot.haco-c-from-haco"
# exclude .haco-c which was already used to produce .haco-a
test_exts='haco haco-u haco-c-from-haco'

for i in $inputs
do
	if test ! -s $i
	then
		@ECHO@ "$i doesn't exist or is empty."
		exit 1
	fi
done

reference=$bldroot.allocdump-filter
if test ! -s $reference
then
	@ECHO@ "$bldroot.allocdump-filter doesn't exist or is empty."
	exit 1
fi

err=

for i in $test_exts
do
	outobj=$bldroot.haco-a-from-$i
	outdump=$bldroot.alloc-from-$i-dump
	outfilt=$outdump-filter
	outdiff=$bldroot.alloc-from-$i-diff
	$alloc $bldroot.$i $outobj > $outdump 2>&1
	case $? in
		0) $dump $outobj > $outdump 2>&1
			break ;;
		1) break ;;
		*) err=1 ;;
	esac

	@CAT@ $outdump | $filter > $outfilt

	# ignore whitespace differences
	@DIFF@ -buw $reference $outfilt > $outdiff 2>&1

	if test -s $outdiff
	then
		@ECHO@ "$outdiff is non-empty!"
		err=1
	fi
done

if test "$err"
then
	exit 1
fi

