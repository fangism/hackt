
Persistent Object Manager text dump: 
	i	addr		type		arg	head	tail	size
	0	##ADDR##	________	0	#HEAD#	#TAIL#	0
	1	##ADDR##	module__	0	#HEAD#	#TAIL#	##SIZE##
	2	##ADDR##	namespc_	0	#HEAD#	#TAIL#	52
	3	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	4	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	5	##ADDR##	procplch	0	#HEAD#	#TAIL#	27
	6	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	7	##ADDR##	procplch	0	#HEAD#	#TAIL#	30
	8	##ADDR##	namespc_	0	#HEAD#	#TAIL#	27
	9	##ADDR##	namespc_	0	#HEAD#	#TAIL#	129
	10	##ADDR##	procdefn	0	#HEAD#	#TAIL#	92
	11	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	12	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	13	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	14	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	15	##ADDR##	datadefn	0	#HEAD#	#TAIL#	61
	16	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	17	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	18	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	19	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	20	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	21	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	22	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	23	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	24	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	25	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	26	##ADDR##	procdefn	0	#HEAD#	#TAIL#	221
	27	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	28	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	29	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	30	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	31	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	32	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	33	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	34	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	35	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	36	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	37	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	38	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	39	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	40	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	41	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	42	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	43	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	44	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	45	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	46	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	47	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	48	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	49	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	50	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	51	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	52	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	53	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	54	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	55	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	56	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	57	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	58	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	59	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	60	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	61	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	62	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	63	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	64	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	65	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	66	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	67	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	68	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	69	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	70	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	71	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	72	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	73	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	74	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	75	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	76	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	77	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	78	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	79	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	80	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	81	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	82	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	42
	83	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	84	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	85	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	86	##ADDR##	procdefn	0	#HEAD#	#TAIL#	220
	87	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	88	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	89	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	90	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	91	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	92	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	93	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	94	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	95	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	96	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	97	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	98	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	99	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	100	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	101	##ADDR##	PRSorlp_	0	#HEAD#	#TAIL#	20
	102	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	103	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	104	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	105	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	106	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	107	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	108	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	109	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	110	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	111	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	112	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	113	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	114	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	115	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	116	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	117	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	118	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	119	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	120	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	121	##ADDR##	procdefn	0	#HEAD#	#TAIL#	233
	122	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	123	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	124	##ADDR##	procplch	0	#HEAD#	#TAIL#	25
	125	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	126	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	127	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	128	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	129	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	130	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	131	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	132	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	133	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	134	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	135	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	136	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	137	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	138	##ADDR##	procdefn	0	#HEAD#	#TAIL#	258
	139	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	140	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	26
	141	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	142	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	143	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	144	##ADDR##	pintinst	0	#HEAD#	#TAIL#	16
	145	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	146	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	147	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	148	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	149	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	150	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	151	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	152	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	153	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	154	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	155	##ADDR##	drnglst_	0	#HEAD#	#TAIL#	16
	156	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	157	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	158	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	159	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	160	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	161	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	162	##ADDR##	PRSpuldn	0	#HEAD#	#TAIL#	21
	163	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	164	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	165	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	166	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	167	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	168	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	169	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	170	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	171	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	172	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	173	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	174	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	175	##ADDR##	PRSpulup	0	#HEAD#	#TAIL#	21
	176	##ADDR##	PRSandlp	0	#HEAD#	#TAIL#	20
	177	##ADDR##	pintplch	0	#HEAD#	#TAIL#	29
	178	##ADDR##	dynrng__	0	#HEAD#	#TAIL#	16
	179	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	180	##ADDR##	piarthex	0	#HEAD#	#TAIL#	17
	181	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	182	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	183	##ADDR##	PRSnot__	0	#HEAD#	#TAIL#	12
	184	##ADDR##	PRSlitrl	0	#HEAD#	#TAIL#	16
	185	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	186	##ADDR##	dindlst_	0	#HEAD#	#TAIL#	16
	187	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	188	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	189	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	190	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	191	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	192	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	193	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	194	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	195	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	196	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	20
	197	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	198	##ADDR##	spimvref	0	#HEAD#	#TAIL#	16
	199	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	28
	200	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	201	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	202	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	203	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	204	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	205	##ADDR##	pintcoll	0	#HEAD#	#TAIL#	24
	206	##ADDR##	proccoll	0	#HEAD#	#TAIL#	49
	207	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	20
	208	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	100
	209	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	210	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	211	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	100
	212	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	213	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	214	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	215	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	216	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	217	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	218	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	219	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	220	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	221	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	222	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	223	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	224	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	225	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	226	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	227	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	228	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	229	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	230	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	231	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	232	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	233	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	234	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	235	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	236	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	41
	237	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	238	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	239	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	240	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	241	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	242	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	243	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	244	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	245	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	246	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	247	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	248	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	249	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	250	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	251	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	252	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	253	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	254	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	255	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	256	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	257	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	258	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	259	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	260	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	261	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	262	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	263	##ADDR##	proctpdf	0	#HEAD#	#TAIL#	46
	264	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	265	##ADDR##	dprmlst_	0	#HEAD#	#TAIL#	16
	266	##ADDR##	cnstpi__	0	#HEAD#	#TAIL#	12
	267	##ADDR##	procplch	0	#HEAD#	#TAIL#	29
	268	##ADDR##	dboolplh	0	#HEAD#	#TAIL#	25
	269	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	270	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	271	##ADDR##	crnglst_	0	#HEAD#	#TAIL#	20
	272	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	273	##ADDR##	datatprf	0	#HEAD#	#TAIL#	20
	274	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	275	##ADDR##	datainst	0	#HEAD#	#TAIL#	24
	276	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	277	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	278	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	279	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	280	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	281	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	282	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	283	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	284	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	285	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	286	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	287	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	288	##ADDR##	procinst	0	#HEAD#	#TAIL#	24
	289	##ADDR##	proctprf	0	#HEAD#	#TAIL#	20
	290	##ADDR##	prcprtcn	0	#HEAD#	#TAIL#	24
	291	##ADDR##	sprcmref	0	#HEAD#	#TAIL#	16
	292	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	293	##ADDR##	sdbmiref	0	#HEAD#	#TAIL#	16
	294	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	295	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	296	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	297	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	298	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	299	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	300	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	68
	301	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	21
	302	##ADDR##	dboolcol	0	#HEAD#	#TAIL#	25
	303	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	304	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	305	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	100
	306	##ADDR##	proccoll	0	#HEAD#	#TAIL#	45
	307	##ADDR##	cprmlst_	0	#HEAD#	#TAIL#	16
	308	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	100
	309	##ADDR##	dboolcol	1	#HEAD#	#TAIL#	100

In module created from: ##FILE## (unrolled)
In namespace "", we have: {
  0 parameter-collections
  7 instantiation-collections
  1 sub-namespaces
  0 definitions
  0 typedefs
  Namespaces:
    std =     In namespace "std", we have: {
      0 parameter-collections
      0 instantiation-collections
      1 sub-namespaces
      0 definitions
      0 typedefs
      Namespaces:
        logic =         In namespace "logic", we have: {
          0 parameter-collections
          0 instantiation-collections
          0 sub-namespaces
          5 definitions
          21 typedefs
          Definitions:
            celeminv = process-definition (defined) celeminv<
              pint<> N
              >(
                bool<> i[0..N-1]
                bool<> o
              )
              In definition "celeminv", we have: {
              Parameters:
                N = pint<> std::logic::celeminv::N
              Instances:
                c = std::logic::gceleminv<std::logic::celeminv::N, std::logic::celeminv::N> std::logic::celeminv::c
                i = bool<> std::logic::celeminv::i^1
                o = bool<> std::logic::celeminv::o
              unroll sequence: 
                bool<> i[0..N-1]
                bool<> o
                std::logic::gceleminv<std::logic::celeminv::N, std::logic::celeminv::N> c
                c (i, i, o);
              footprint collection: {
                <4> {
                  N = pint^0 value: 4
                  c = process std::logic::gceleminv<4, 4>^0 = std::logic::celeminv::c (
                    id = bool^1
                      {
                        0 = std::logic::celeminv::c.iu[0] 
                        1 = std::logic::celeminv::c.iu[1] 
                        2 = std::logic::celeminv::c.iu[2] 
                        3 = std::logic::celeminv::c.iu[3] 
                      }
                    iu = bool^1
                      {
                        0 = std::logic::celeminv::c.iu[0] 
                        1 = std::logic::celeminv::c.iu[1] 
                        2 = std::logic::celeminv::c.iu[2] 
                        3 = std::logic::celeminv::c.iu[3] 
                      }
                    o = bool^0 = std::logic::celeminv::c.o 
                  )
                  i = bool^1
                    {
                      0 = std::logic::celeminv::c.id[0] 
                      1 = std::logic::celeminv::c.id[1] 
                      2 = std::logic::celeminv::c.id[2] 
                      3 = std::logic::celeminv::c.id[3] 
                    }
                  o = bool^0 = std::logic::celeminv::c.o 
                }
              }
              }

            gceleminv = process-definition (defined) gceleminv<
              pint<> D
              pint<> U
              >(
                bool<> id[0..D-1]
                bool<> iu[0..U-1]
                bool<> o
              )
              In definition "gceleminv", we have: {
              Parameters:
                D = pint<> std::logic::gceleminv::D
                U = pint<> std::logic::gceleminv::U
              Instances:
                id = bool<> std::logic::gceleminv::id^1
                iu = bool<> std::logic::gceleminv::iu^1
                o = bool<> std::logic::gceleminv::o
              unroll sequence: 
                bool<> id[0..D-1]
                bool<> iu[0..U-1]
                bool<> o
              prs:
                (&:j:[0..D-1]: id[$j]) -> o-
                (&:j:[0..U-1]: ~iu[$j]) -> o+
              footprint collection: {
                <4, 4> {
                  D = pint^0 value: 4
                  U = pint^0 value: 4
                  id = bool^1
                    {
                      0 = std::logic::gceleminv::id[0] 
                      1 = std::logic::gceleminv::id[1] 
                      2 = std::logic::gceleminv::id[2] 
                      3 = std::logic::gceleminv::id[3] 
                    }
                  iu = bool^1
                    {
                      0 = std::logic::gceleminv::iu[0] 
                      1 = std::logic::gceleminv::iu[1] 
                      2 = std::logic::gceleminv::iu[2] 
                      3 = std::logic::gceleminv::iu[3] 
                    }
                  o = bool^0 = std::logic::gceleminv::o 
                }
              }
              }

            inv = process-definition (defined) inv(
                bool<> i
                bool<> o
              )
              In definition "inv", we have: {
              Instances:
                i = bool<> std::logic::inv::i
                o = bool<> std::logic::inv::o
              unroll sequence: 
                bool<> i
                bool<> o
              prs:
                i -> o-
                ~i -> o+
              }

            nand = process-definition (defined) nand<
              pint<> N
              >(
                bool<> i[0..N-1]
                bool<> o
              )
              In definition "nand", we have: {
              Parameters:
                N = pint<> std::logic::nand::N
              Instances:
                i = bool<> std::logic::nand::i^1
                o = bool<> std::logic::nand::o
              unroll sequence: 
                bool<> i[0..N-1]
                bool<> o
              prs:
                (&:j:[0..N-1]: i[$j]) -> o-
                (|:j:[0..N-1]: ~i[$j]) -> o+
              footprint collection: {
                <4> {
                  N = pint^0 value: 4
                  i = bool^1
                    {
                      0 = std::logic::nand::i[0] 
                      1 = std::logic::nand::i[1] 
                      2 = std::logic::nand::i[2] 
                      3 = std::logic::nand::i[3] 
                    }
                  o = bool^0 = std::logic::nand::o 
                }
              }
              }

            nor = process-definition (defined) nor<
              pint<> N
              >(
                bool<> i[0..N-1]
                bool<> o
              )
              In definition "nor", we have: {
              Parameters:
                N = pint<> std::logic::nor::N
              Instances:
                i = bool<> std::logic::nor::i^1
                o = bool<> std::logic::nor::o
              unroll sequence: 
                bool<> i[0..N-1]
                bool<> o
              prs:
                (|:j:[0..N-1]: i[$j]) -> o-
                (&:j:[0..N-1]: ~i[$j]) -> o+
              footprint collection: {
                <4> {
                  N = pint^0 value: 4
                  i = bool^1
                    {
                      0 = std::logic::nor::i[0] 
                      1 = std::logic::nor::i[1] 
                      2 = std::logic::nor::i[2] 
                      3 = std::logic::nor::i[3] 
                    }
                  o = bool^0 = std::logic::nor::o 
                }
              }
              }

          Typedefs:
            celeminv2 = process-definition-alias: celeminv2
              = std::logic::celeminv<2>
            celeminv3 = process-definition-alias: celeminv3
              = std::logic::celeminv<3>
            celeminv4 = process-definition-alias: celeminv4
              = std::logic::celeminv<4>
            celeminv5 = process-definition-alias: celeminv5
              = std::logic::celeminv<5>
            celeminv6 = process-definition-alias: celeminv6
              = std::logic::celeminv<6>
            celeminv7 = process-definition-alias: celeminv7
              = std::logic::celeminv<7>
            celeminv8 = process-definition-alias: celeminv8
              = std::logic::celeminv<8>
            nand2 = process-definition-alias: nand2
              = std::logic::nand<2>
            nand3 = process-definition-alias: nand3
              = std::logic::nand<3>
            nand4 = process-definition-alias: nand4
              = std::logic::nand<4>
            nand5 = process-definition-alias: nand5
              = std::logic::nand<5>
            nand6 = process-definition-alias: nand6
              = std::logic::nand<6>
            nand7 = process-definition-alias: nand7
              = std::logic::nand<7>
            nand8 = process-definition-alias: nand8
              = std::logic::nand<8>
            nor2 = process-definition-alias: nor2
              = std::logic::nor<2>
            nor3 = process-definition-alias: nor3
              = std::logic::nor<3>
            nor4 = process-definition-alias: nor4
              = std::logic::nor<4>
            nor5 = process-definition-alias: nor5
              = std::logic::nor<5>
            nor6 = process-definition-alias: nor6
              = std::logic::nor<6>
            nor7 = process-definition-alias: nor7
              = std::logic::nor<7>
            nor8 = process-definition-alias: nor8
              = std::logic::nor<8>
        }
    }
  Instances:
    _c4 = std::logic::celeminv4<> _c4
    _nand4 = std::logic::nand4<> _nand4
    _nor4 = std::logic::nor4<> _nor4
    i = bool<> i^1
    o1 = bool<> o1
    o2 = bool<> o2
    o3 = bool<> o3
}

footprint: {
  _c4 = process std::logic::celeminv<4>^0 = _c4 (
    i = bool^1
      {
        0 = _c4.i[0] 
        1 = _c4.i[1] 
        2 = _c4.i[2] 
        3 = _c4.i[3] 
      }
    o = bool^0 = _c4.o 
  )
  _nand4 = process std::logic::nand<4>^0 = _nand4 (
    i = bool^1
      {
        0 = _nor4.i[0] 
        1 = _nor4.i[1] 
        2 = _nor4.i[2] 
        3 = _nor4.i[3] 
      }
    o = bool^0 = _nand4.o 
  )
  _nor4 = process std::logic::nor<4>^0 = _nor4 (
    i = bool^1
      {
        0 = _c4.i[0] 
        1 = _c4.i[1] 
        2 = _c4.i[2] 
        3 = _c4.i[3] 
      }
    o = bool^0 = _nor4.o 
  )
  i = bool^1
    {
      0 = _nor4.i[0] 
      1 = _nor4.i[1] 
      2 = _nor4.i[2] 
      3 = _nor4.i[3] 
    }
  o1 = bool^0 = _nand4.o 
  o2 = bool^0 = _nor4.o 
  o3 = bool^0 = _c4.o 
}
