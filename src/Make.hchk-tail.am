# "src/Make.hchk-tail.am"
#	$Id: Make.hchk-tail.am,v 1.1.2.1 2005/08/04 17:26:12 fang Exp $
# Makefile footer for enforcing header checks.  
# Counterpart is "src/Make.hchk-head.am"

# This uses the following Makefile variables:
# ALL_HEADER_FILES -- list of all .h files to check
# ALL_TCC_FILES -- list of all .tcc files to check
# EMPTY_SOURCE -- dummy (empty) source file (not defined in the -head)

###############################################################################
# EMPTY_SOURCE = $(srcdir)/test/header_test.cc

# no need for -MT (already correct target)
# no need for -MP for phony targets, awk-script already does it, 
#	but redundant phony targets are ignored by it anyhow.
# expects name of temporary file after -MF
FAST_MAKEDEP_FLAGS = -MMD -MF
PROMOTE_HEADER_DEPS = $(AWK) -f $(srcdir)/scripts/promote_header_deps.awk \
	-v srcdir=$(srcdir)
FILTER_HEADER_DEPS = $(SED) 's|.*config\.h||g' | $(SED) 's|[^ ]*\.cc||g'
# some exceptions to checking

# cray-zee anal-retentive header checking with depdendence-tracking
.h.hchk:
	@$(ECHO) "Validating $< ... "
if am__fastdepCXX
	@depbase=`$(ECHO) $@ | $(SED) 's|[^/]*$$|$(DEPDIR)/&|;s|\.hchk$$||'`; \
	if $(CXXCOMPILE) -I$(srcdir) -include $< \
		$(FAST_MAKEDEP_FLAGS) "$$depbase.Thd" \
		$(EMPTY_SOURCE) -o $@; \
	then $(CAT) "$$depbase.Thd" | $(FILTER_HEADER_DEPS) | \
		$(PROMOTE_HEADER_DEPS) > "$$depbase.hchkd"; \
		$(RM) "$$depbase.Thd" ; \
	else $(RM) "$$depbase.Thd"; exit 1; fi
else
	@$(CXXCOMPILE) -I$(srcdir) -include $< $(EMPTY_SOURCE) -o $@
endif

.tcc.tccchk:
	@$(ECHO) "Validating $< ... "
if am__fastdepCXX
	@depbase=`$(ECHO) $@ | $(SED) 's|[^/]*$$|$(DEPDIR)/&|;s|\.tccchk$$||'`; \
	if $(CXXCOMPILE) -I$(srcdir) -include $< \
		$(FAST_MAKEDEP_FLAGS) "$$depbase.Ttccd" \
		$(EMPTY_SOURCE) -o $@; \
	then $(CAT) "$$depbase.Ttccd" | $(FILTER_HEADER_DEPS) | \
		$(PROMOTE_HEADER_DEPS) > "$$depbase.tccchkd"; \
		$(RM) "$$depbase.Ttccd" ; \
	else $(RM) "$$depbase.Ttccd"; exit 1; fi
else
	@$(CXXCOMPILE) -I$(srcdir) -include $< $(EMPTY_SOURCE) -o $@
endif


EXTRA_DIST += scripts/automake_include.awk \
	scripts/promote_header_deps.awk

# NOTE: subdirectories which will not have .o,.lo object files built
# will not be generated in the _build tree of the distcheck.
# This means we have to fake an object file in each subdirectory
# containing headers we want to check for standalone-ness.  
# Really, they should just be able to link to "test/header_test.cc"
HEADER_TCC_TESTS = $(ALL_HEADER_FILES:.h=.hchk) $(ALL_TCC_FILES:.tcc=.tccchk)
HEADER_TCC_DEPBASES = $(ALL_HEADER_FILES:.h=.hchkd) $(ALL_TCC_FILES:.tcc=.tccchkd)

check-headers: $(HEADER_TCC_TESTS)
	@$(ECHO) All header tests passed.

headers_deps.make: Makefile.am
	@$(ECHO) Regenerating $@ ...
	@$(ECHO) "# $@ -- generated by rule in Makefile.am" > $@
	@$(ECHO) "#	(This is not an automake feature, just a custom extension.)" >> $@
	@$(ECHO) $(HEADER_TCC_DEPBASES) | \
		$(AWK) -f $(srcdir)/scripts/automake_include.awk >> $@


# inlined into Makefile.in by automake
# really only needed for dynamic dependence-tracking
include headers_deps.make

all: check-headers

clean-header-tests:
	-$(RM) $(HEADER_TCC_TESTS)

# Incidentally, automake is smart enough to make initial dummy files
# for dependencies that are automatically generated.
# You never want to manually remove the .Po .Plo files
# (now including .hchkd, .tccchkd) from the .deps directories.  
# IF you do remove it, be sure to replace it with an empty placeholder
# before re-running make.  

clean-header-deps:
	@$(ECHO) "Resetting .deps/*chkd in all sub-directories..."
	@for f in $(HEADER_TCC_DEPBASES); do \
		$(ECHO) "# reset" > \
			`$(ECHO) $$f | $(SED) 's|[^/]*$$|$(DEPDIR)/&|'` ; \
	done

# cvsignore targets
AUTO_IGNORE += headers_deps.make

# standard targets
include $(top_srcdir)/Make.global

