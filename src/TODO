"TODO"
#	$Id: TODO,v 1.3.2.3 2005/10/13 01:26:50 fang Exp $

===============================================================================
loop development:

lookup and value resolution:
	needs consistent resolution (currently not maintainable, copy-pasted)
	needs to check the following:
		1) is loop variable?
		2) is reference to template formal?
		3) is definition/scope-local variable (need footprint)

param_expression needs dump context! for automatic parenthesization
	and omitting redundant parent scopes for local references.  

test cases for create/alloc phase of the parser/alloc directory

===============================================================================

PRS: in cflat
	3) test cases instantiating processes with PRS, hierarchically!!!

PRS parser needs to support rule loops...
	need to extend intermediate form in Object/lang/PRS.  

footprint pointer persistence may be complicated in footprint_frame.
	(partially done, for top-level state)
	possibly simplify by having each footprint contain back-reference?
	(not critical, can do later...)

creation: reject unique instances that are missing relaxed actuals
	(that should have them), only after complete hierarchical merge.
	can be classified as known bug.  

===============================================================================
new class_trait:
	has_private_internal_structure (process only)

===============================================================================
big stuff:

*** loops and conditionals ***
*** global and out-of-scope references? ***

CFLAT

compare memory usage between using flattened production rule arrays
	vs. arrays of definitions (like logic gates).

in general check memory usage of large arrays of things
	make benchmarks directory.

===============================================================================
Library stuff:
util: use new ptrs_functional_proposed.h with const_traits.h

===============================================================================
HACKT template stuff:
	In the case of redeclarations, 
	how do default parameter values translate from
	forward declaration to full prototype to definition?

===============================================================================
enhancements:

Library/Utilities:
stacktrace.h:
	add STACKTRACE_VERY_VERBOSE to include __FILE__ and __LINE__
ICE.h:
	add ICE_ASSERT combined INVARIANT with ICE macro

Error message:
	assigning already assigned variables could have more precise msg:
		(see parser/param/048.in case)

===============================================================================
Simulation:
	generate process_entries' unrolled production rules!
		only needed for simulation, not flattening [PUNT]
		state information of expressions not needed yet

===============================================================================
PRS and CHP

pass-gates:
	add to parser, and intermediate representation

===============================================================================
KNOWN BUGS

test cases:
parser/connect/120.in, 121.in
	regarding hierarchical propagation and checking of relaxed actuals
	(2005-08-18: punting)

