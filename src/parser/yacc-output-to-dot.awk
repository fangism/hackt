#!/usr/bin/awk -f
# from the human-readable LR parser state-machine output by yacc, 
# produce a graphical visualization in dot format.  

# options:
# -v state_labels=1
# -v edge_labels=1
# -v nonterminals_edges=1

# read until blank line
BEGIN {
	if (!length(state_labels)) {
		state_labels = 1;
	} else {
		state_labels = strtonum(state_labels);
	}
	if (!length(edge_labels)) {
		edge_labels = 1;
	} else {
		edge_labels = strtonum(edge_labels);
	}
	if (!length(nonterminal_edges)) {
		nonterminal_edges = 0;
	} else {
		nonterminal_edges = strtonum(nonterminal_edges);
	}
	print "# auto-generated by yacc-output-to-dot.awk";
	print "digraph G {";
}

/^state [0-9]*/ {
	state = $2;
	print "STATE_" state " [shape=box, label=\"" state "\"];";
	# rules section:
	label = "";
while (getline && length($0)) {
	label = label "\\n" $0;
}
	# terminals section:
while (getline && length($0)) {
	tok = $1;
	action = $2;
	dest = $3;
	if (action == "shift") {
	print "STATE_" state " -> STATE_" dest " [label=\"" tok "\"];";
	# style=bold?
	}
}
	# nonterminals section:
while (getline && length($0)) {
	tok = $1;
	action = $2;
	dest = $3;
	if (nonterminal_edges && (action == "goto")) {
	print "STATE_" state " -> STATE_" dest " [label=\"" tok "\", style=dotted];";
	}
}
	print "";
}

END {
	print "}";
}
