# Makefile.in generated by automake 1.9 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# "src/Makefile.am"

# "Make.stddef"
# make-independent definitions

# SHELL = /bin/sh
# add -v for verbose


SOURCES = $(libart___la_SOURCES) $(libbogus_la_SOURCES) $(art__2obj_SOURCES) $(artc_SOURCES) $(artobjdump_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Make.stddef lexer/art++-lex.cc \
	parser/art++-parse.cc parser/art++-parse.h
bin_PROGRAMS = artc$(EXEEXT) art++2obj$(EXEEXT) artobjdump$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libart___la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = AST/art_parser_base.lo AST/art_parser_expr.lo \
	AST/art_parser_token.lo AST/art_parser_definition.lo \
	AST/art_parser_instance.lo AST/art_parser_formal.lo \
	AST/art_parser_chp.lo AST/art_parser_hse.lo \
	AST/art_parser_prs.lo
am__objects_2 =
am__objects_3 = $(am__objects_2)
am__objects_4 = Object/art_context.lo Object/art_object_base.lo \
	Object/art_object_expr.lo Object/art_object_definition.lo \
	Object/art_object_type_ref.lo Object/art_object_instance.lo \
	Object/art_object_inst_ref.lo Object/art_object_connect.lo \
	Object/art_object_IO.lo Object/art_built_ins.lo
am_libart___la_OBJECTS = parser/art++-parse-prefix.lo \
	parser/art++-union.lo lexer/art++-lex-prefix.lo \
	$(am__objects_1) $(am__objects_3) $(am__objects_4) \
	$(am__objects_3) util/art_utils.lo $(am__objects_2)
libart___la_OBJECTS = $(am_libart___la_OBJECTS)
libbogus_la_LIBADD =
am_libbogus_la_OBJECTS = lexer/libbogus_la-art++-lex.lo \
	parser/libbogus_la-art++-parse.lo
libbogus_la_OBJECTS = $(am_libbogus_la_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_art__2obj_OBJECTS = art++2obj.$(OBJEXT)
art__2obj_OBJECTS = $(am_art__2obj_OBJECTS)
art__2obj_DEPENDENCIES = libart++.la
am_artc_OBJECTS = art_main.$(OBJEXT)
artc_OBJECTS = $(am_artc_OBJECTS)
artc_DEPENDENCIES = libart++.la
am_artobjdump_OBJECTS = artobjdump.$(OBJEXT)
artobjdump_OBJECTS = $(am_artobjdump_OBJECTS)
artobjdump_DEPENDENCIES = libart++.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) --mode=compile $(LEX) $(LFLAGS) $(AM_LFLAGS)
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) --mode=compile $(YACC) $(YFLAGS) \
	$(AM_YFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libart___la_SOURCES) $(libbogus_la_SOURCES) \
	$(art__2obj_SOURCES) $(artc_SOURCES) $(artobjdump_SOURCES)
DIST_SOURCES = $(libart___la_SOURCES) $(libbogus_la_SOURCES) \
	$(art__2obj_SOURCES) $(artc_SOURCES) $(artobjdump_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = cpp
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
# -B: ignore blank line diffs
ECHO = echo
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
HAVE_BISON_FALSE = @HAVE_BISON_FALSE@
HAVE_BISON_TRUE = @HAVE_BISON_TRUE@
HAVE_DOT_FALSE = @HAVE_DOT_FALSE@
HAVE_DOT_TRUE = @HAVE_DOT_TRUE@
HAVE_DOXYGEN_FALSE = @HAVE_DOXYGEN_FALSE@
HAVE_DOXYGEN_TRUE = @HAVE_DOXYGEN_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = 1.9 subdir-objects
SUFFIXES = .yy .l
CAT = cat
CHMOD = chmod
CVS = cvs
DIFF = diff -B
GREP = grep
HEAD = head
SED = sed
TAIL = tail
RM = rm -f
MV = mv -f
SYNC = sync
TOUCH = touch
# TAR = tar -czvf

# The following are detected by autoconf
# AR = ar
# ARFLAGS = -ru
# AWK = awk
# LN = ln -fs
# RANLIB = ranlib

# defined with intention of self-modification...
THISMAKEFILE = Makefile

###################### Are we using yacc or bison? ############################

# use autoconf-defined HAVE_BISON
GREP_FOR_BISON = $(GREP) "^YACC =" Makefile | $(GREP) -q bison
@HAVE_BISON_FALSE@YACC_UNION_SCRIPT = $(srcdir)/parser/yacc-union-type.awk
@HAVE_BISON_TRUE@YACC_UNION_SCRIPT = $(srcdir)/parser/bison-union-type.awk
@HAVE_BISON_FALSE@YACC_OUTPUT_H_SCRIPT = $(srcdir)/parser/yacc-output-to-C.awk
@HAVE_BISON_TRUE@YACC_OUTPUT_H_SCRIPT = $(srcdir)/parser/bison-output-to-C.awk

# need to list auto-generated header first to guarantee correct build
# order in parallel builds.  
artc_SOURCES = art_main.cc
artc_LDADD = libart++.la
art__2obj_SOURCES = art++2obj.cc
art__2obj_LDADD = libart++.la
artobjdump_SOURCES = artobjdump.cc
artobjdump_LDADD = libart++.la

# convenience libraries
noinst_LTLIBRARIES = libart++.la libbogus.la

# need these first!  (easy to just stick them here)
BUILT_SOURCES = parser/yacc_or_bison.h parser/art++-parse.h \
	parser/art++-parse.output.h


# libbogus.la is not actually used, hence the name.
# force use of lex/yacc suffix rules to generate the .c and .cc files
# the source files are post-processed via awk (below) into the real sources, 
# with symbol names with transformed prefixes.  
libbogus_la_SOURCES = \
	lexer/art++-lex.ll \
	parser/art++-parse.yy


# parser/libbogus_la-art++-parser.$(OBJEXT) \
#	parser/libbogus_la-art++-parser.lo \
#	parser/art++-parse.cc : parser/art++-parse.output.h

# parser/art++-parse-prefix.$(OBJEXT) \
#	parser/art++-parse-prefix.lo \
#	parser/art++-parse-prefix.cc : parser/art++-parse.output.h
AST_CC_FILES = \
	AST/art_parser_base.cc \
	AST/art_parser_expr.cc \
	AST/art_parser_token.cc \
	AST/art_parser_definition.cc \
	AST/art_parser_instance.cc \
	AST/art_parser_formal.cc \
	AST/art_parser_chp.cc \
	AST/art_parser_hse.cc \
	AST/art_parser_prs.cc

AST_H_FILES = $(AST_CC_FILES:.cc=.h) \
	AST/art_parser_debug.h

OBJECT_CC_FILES = \
	Object/art_context.cc \
	Object/art_object_base.cc \
	Object/art_object_expr.cc \
	Object/art_object_definition.cc \
	Object/art_object_type_ref.cc \
	Object/art_object_instance.cc \
	Object/art_object_inst_ref.cc \
	Object/art_object_connect.cc \
	Object/art_object_IO.cc \
	Object/art_built_ins.cc

OBJECT_H_FILES = $(OBJECT_CC_FILES:.cc=.h) \
	Object/art_object_IO_fwd.h

UTIL_HEADER_FILES = \
	util/art_debug.h \
	util/art_macros.h \
	util/art_switches.h \
	util/art_utils.h \
	util/art_utils.tcc \
	util/count_ptr.h \
	util/count_ptr_fwd.h \
	util/discrete_interval_set.h \
	util/discrete_interval_set_fwd.h \
	util/getopt_portable.h \
	util/hash_map.h \
	util/hash_qmap.h \
	util/hash_qmap_fwd.h \
	util/hash_specializations.h \
	util/multidimensional_qmap.h \
	util/multidimensional_sparse_set.h \
	util/multidimensional_sparse_set_fwd.h \
	util/ptrs.h \
	util/ptrs_fwd.h \
	util/qmap.h \
	util/qmap_fwd.h \
	util/sstream.h \
	util/sublist.h

libart___la_SOURCES = \
	parser/yacc_or_bison.h \
	parser/art++-parse-prefix.h \
	parser/art++-parse-prefix.cc \
	parser/art++-union.cc \
	parser/art++-parse.output.h \
	lexer/art++-lex-prefix.cc \
	lexer/art_lex.h \
	$(AST_CC_FILES) $(AST_H_FILES) \
	AST/art_parser.h \
	AST/art_parser.tcc \
	$(OBJECT_CC_FILES) $(OBJECT_H_FILES) \
	Object/art_object.h \
	util/art_utils.cc \
	$(UTIL_HEADER_FILES) \
	art++.h


# don't actually need -l[f]l
# libart___la_LDADD = @LEXLIB@
ARTXX_YACC_PREFIX = artxx_

# can't depend on the .output alone, not a known dependence with .y[y]
ARTXX_PARSE_OUTPUT = parser/art++-parse.output

# extract num: first matched line, 3rd space-delimited field (#define foo bar)
# "cut" is not a good idea, if # define is separated... :(
# the last awk pipe eliminate extraneous whitespace not filtered by sed
GET_START_TOKEN_ENUM = \
	$(GREP) "define.*MINIMUM_BOGOSITY" parser/art++-parse.h | \
		$(HEAD) -n1 | $(SED) 's/^.*MINIMUM_BOGOSITY[ \t]*//g' | \
		$(AWK) '/.*/{printf($$1);}'

YACC_UNION_SCRIPT_ARGS = -v yaccfile=parser/art++.types \
		-v include="art_parser.h art++-parse-prefix.h" \
		-v namespace=ART::parser \
		-v type=ART::parser::node \
		-v token_enum=`$(GET_START_TOKEN_ENUM)`

AM_CPPFLAGS = -DREGRESSION_TEST_MODE \
	-I$(srcdir)/parser -I$(srcdir)/util -I$(srcdir)/AST \
	-I$(srcdir)/lexer -I$(srcdir)/AST -I$(srcdir)/Object \
	-Iparser

# will need _build directories for "make distcheck" with auto-generated headers
# the last -Iparser is for the relative path in the build directory

# extremely anal-retentive
MORE_CFLAGS = -pipe -W -Wall -Wno-unused -Werror
AM_CFLAGS = $(MORE_CFLAGS)
AM_CXXFLAGS = $(MORE_CFLAGS)
AM_YFLAGS = -d -t -v
AM_LFLAGS = 

# doesn't work
# YACC_PREFIX = -DYACC_PREFIX=artxx_yy
# libart___la_CPPFLAGS = $(YACC_PREFIX) $(AM_CPPFLAGS)

# *COUGH* *HACK*:
# NO_FANCY_YYERROR tells lexer/art++-lex.cc to use un-transfomed symbol names
libbogus_la_CPPFLAGS = -DNO_FANCY_YYERROR $(AM_CPPFLAGS)

# artc_CPPFLAGS = $(AM_CPPFLAGS)
# art__2obj_CPPFLAGS = $(AM_CPPFLAGS)
# artobjdump_CPPFLAGS = $(AM_CPPFLAGS)
EXTRA_DIST = \
	parser/yacc-prefix.awk \
	parser/yacc-output-to-C.awk \
	parser/bison-output-to-C.awk \
	parser/yacc-union-type.awk \
	parser/bison-union-type.awk \
	parser/yyerror_bison_hack.awk

CLEANPARSER = \
	parser/yacc_or_bison.h \
	parser/art++-parse.$(OBJEXT) \
	parser/art++-parse.lo \
	parser/art++-parse.cc \
	parser/art++-parse.h \
	parser/art++-parse.loT \
	parser/art++-parse-prefix.loT \
	parser/art++-parse-prefix.lo \
	parser/art++-parse-prefix.$(OBJEXT) \
	parser/art++-parse-prefix.cc \
	parser/art++-parse-prefix.h \
	parser/art++-parse.output \
	parser/art++-parse.output.h \
	parser/libart___la-art++-parse.loT \
	parser/libbogus_la-art++-parse.lo \
	parser/libbogus_la-art++-parse.$(OBJEXT) \
	parser/art++-union.lo \
	parser/art++-union.$(OBJEXT) \
	parser/art++-union.cc \
	parser/art++.types

CLEANLEXER = \
	lexer/art++-lex-prefix.$(OBJEXT) \
	lexer/art++-lex-prefix.lo \
	lexer/art++-lex-prefix.cc \
	lexer/art++-lex.cc \
	lexer/libbogus_la-art++-lex.loT \
	lexer/libbogus_la-art++-lex.lo \
	lexer/libbogus_la-art++-lex.$(OBJEXT)

CLEANFILES = $(CLEANPARSER) $(CLEANLEXER)
DISTCLEANFILES = 
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .yy .l .cc .ll .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Make.stddef $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
parser/$(am__dirstamp):
	@$(mkdir_p) parser
	@: > parser/$(am__dirstamp)
parser/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) parser/$(DEPDIR)
	@: > parser/$(DEPDIR)/$(am__dirstamp)
parser/art++-parse-prefix.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/art++-union.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
lexer/$(am__dirstamp):
	@$(mkdir_p) lexer
	@: > lexer/$(am__dirstamp)
lexer/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) lexer/$(DEPDIR)
	@: > lexer/$(DEPDIR)/$(am__dirstamp)
lexer/art++-lex-prefix.lo: lexer/$(am__dirstamp) \
	lexer/$(DEPDIR)/$(am__dirstamp)
AST/$(am__dirstamp):
	@$(mkdir_p) AST
	@: > AST/$(am__dirstamp)
AST/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) AST/$(DEPDIR)
	@: > AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_base.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_expr.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_token.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_definition.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_instance.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_formal.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_chp.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_hse.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
AST/art_parser_prs.lo: AST/$(am__dirstamp) \
	AST/$(DEPDIR)/$(am__dirstamp)
Object/$(am__dirstamp):
	@$(mkdir_p) Object
	@: > Object/$(am__dirstamp)
Object/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) Object/$(DEPDIR)
	@: > Object/$(DEPDIR)/$(am__dirstamp)
Object/art_context.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_base.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_expr.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_definition.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_type_ref.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_instance.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_inst_ref.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_connect.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_object_IO.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
Object/art_built_ins.lo: Object/$(am__dirstamp) \
	Object/$(DEPDIR)/$(am__dirstamp)
util/$(am__dirstamp):
	@$(mkdir_p) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/art_utils.lo: util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
libart++.la: $(libart___la_OBJECTS) $(libart___la_DEPENDENCIES) 
	$(CXXLINK)  $(libart___la_LDFLAGS) $(libart___la_OBJECTS) $(libart___la_LIBADD) $(LIBS)
lexer/libbogus_la-art++-lex.lo: lexer/$(am__dirstamp) \
	lexer/$(DEPDIR)/$(am__dirstamp)
parser/art++-parse.h: parser/art++-parse.cc
	@if test ! -f $@; then \
	  rm -f parser/art++-parse.cc; \
	  $(MAKE) parser/art++-parse.cc; \
	else :; fi
parser/libbogus_la-art++-parse.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
libbogus.la: $(libbogus_la_OBJECTS) $(libbogus_la_DEPENDENCIES) 
	$(CXXLINK)  $(libbogus_la_LDFLAGS) $(libbogus_la_OBJECTS) $(libbogus_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
art++2obj$(EXEEXT): $(art__2obj_OBJECTS) $(art__2obj_DEPENDENCIES) 
	@rm -f art++2obj$(EXEEXT)
	$(CXXLINK) $(art__2obj_LDFLAGS) $(art__2obj_OBJECTS) $(art__2obj_LDADD) $(LIBS)
artc$(EXEEXT): $(artc_OBJECTS) $(artc_DEPENDENCIES) 
	@rm -f artc$(EXEEXT)
	$(CXXLINK) $(artc_LDFLAGS) $(artc_OBJECTS) $(artc_LDADD) $(LIBS)
artobjdump$(EXEEXT): $(artobjdump_OBJECTS) $(artobjdump_DEPENDENCIES) 
	@rm -f artobjdump$(EXEEXT)
	$(CXXLINK) $(artobjdump_LDFLAGS) $(artobjdump_OBJECTS) $(artobjdump_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f AST/art_parser_base.$(OBJEXT)
	-rm -f AST/art_parser_base.lo
	-rm -f AST/art_parser_chp.$(OBJEXT)
	-rm -f AST/art_parser_chp.lo
	-rm -f AST/art_parser_definition.$(OBJEXT)
	-rm -f AST/art_parser_definition.lo
	-rm -f AST/art_parser_expr.$(OBJEXT)
	-rm -f AST/art_parser_expr.lo
	-rm -f AST/art_parser_formal.$(OBJEXT)
	-rm -f AST/art_parser_formal.lo
	-rm -f AST/art_parser_hse.$(OBJEXT)
	-rm -f AST/art_parser_hse.lo
	-rm -f AST/art_parser_instance.$(OBJEXT)
	-rm -f AST/art_parser_instance.lo
	-rm -f AST/art_parser_prs.$(OBJEXT)
	-rm -f AST/art_parser_prs.lo
	-rm -f AST/art_parser_token.$(OBJEXT)
	-rm -f AST/art_parser_token.lo
	-rm -f Object/art_built_ins.$(OBJEXT)
	-rm -f Object/art_built_ins.lo
	-rm -f Object/art_context.$(OBJEXT)
	-rm -f Object/art_context.lo
	-rm -f Object/art_object_IO.$(OBJEXT)
	-rm -f Object/art_object_IO.lo
	-rm -f Object/art_object_base.$(OBJEXT)
	-rm -f Object/art_object_base.lo
	-rm -f Object/art_object_connect.$(OBJEXT)
	-rm -f Object/art_object_connect.lo
	-rm -f Object/art_object_definition.$(OBJEXT)
	-rm -f Object/art_object_definition.lo
	-rm -f Object/art_object_expr.$(OBJEXT)
	-rm -f Object/art_object_expr.lo
	-rm -f Object/art_object_inst_ref.$(OBJEXT)
	-rm -f Object/art_object_inst_ref.lo
	-rm -f Object/art_object_instance.$(OBJEXT)
	-rm -f Object/art_object_instance.lo
	-rm -f Object/art_object_type_ref.$(OBJEXT)
	-rm -f Object/art_object_type_ref.lo
	-rm -f lexer/art++-lex-prefix.$(OBJEXT)
	-rm -f lexer/art++-lex-prefix.lo
	-rm -f lexer/libbogus_la-art++-lex.$(OBJEXT)
	-rm -f lexer/libbogus_la-art++-lex.lo
	-rm -f parser/art++-parse-prefix.$(OBJEXT)
	-rm -f parser/art++-parse-prefix.lo
	-rm -f parser/art++-union.$(OBJEXT)
	-rm -f parser/art++-union.lo
	-rm -f parser/libbogus_la-art++-parse.$(OBJEXT)
	-rm -f parser/libbogus_la-art++-parse.lo
	-rm -f util/art_utils.$(OBJEXT)
	-rm -f util/art_utils.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/art++2obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/art_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artobjdump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_chp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_definition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_expr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_formal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_hse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_instance.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_prs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@AST/$(DEPDIR)/art_parser_token.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_built_ins.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_context.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_IO.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_connect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_definition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_expr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_inst_ref.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_instance.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Object/$(DEPDIR)/art_object_type_ref.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@lexer/$(DEPDIR)/art++-lex-prefix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@lexer/$(DEPDIR)/libbogus_la-art++-lex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/art++-parse-prefix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/art++-union.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/libbogus_la-art++-parse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/art_utils.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`; \
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Plo"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

lexer/libbogus_la-art++-lex.lo: lexer/art++-lex.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbogus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lexer/libbogus_la-art++-lex.lo -MD -MP -MF "lexer/$(DEPDIR)/libbogus_la-art++-lex.Tpo" -c -o lexer/libbogus_la-art++-lex.lo `test -f 'lexer/art++-lex.cc' || echo '$(srcdir)/'`lexer/art++-lex.cc; \
@am__fastdepCXX_TRUE@	then mv -f "lexer/$(DEPDIR)/libbogus_la-art++-lex.Tpo" "lexer/$(DEPDIR)/libbogus_la-art++-lex.Plo"; else rm -f "lexer/$(DEPDIR)/libbogus_la-art++-lex.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexer/art++-lex.cc' object='lexer/libbogus_la-art++-lex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbogus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lexer/libbogus_la-art++-lex.lo `test -f 'lexer/art++-lex.cc' || echo '$(srcdir)/'`lexer/art++-lex.cc

parser/libbogus_la-art++-parse.lo: parser/art++-parse.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbogus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/libbogus_la-art++-parse.lo -MD -MP -MF "parser/$(DEPDIR)/libbogus_la-art++-parse.Tpo" -c -o parser/libbogus_la-art++-parse.lo `test -f 'parser/art++-parse.cc' || echo '$(srcdir)/'`parser/art++-parse.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/libbogus_la-art++-parse.Tpo" "parser/$(DEPDIR)/libbogus_la-art++-parse.Plo"; else rm -f "parser/$(DEPDIR)/libbogus_la-art++-parse.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/art++-parse.cc' object='parser/libbogus_la-art++-parse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbogus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/libbogus_la-art++-parse.lo `test -f 'parser/art++-parse.cc' || echo '$(srcdir)/'`parser/art++-parse.cc

.ll.cc:
	$(LEXCOMPILE) $<
	sed '/^#/ s|$(LEX_OUTPUT_ROOT)\.c|$@|' $(LEX_OUTPUT_ROOT).c >$@
	rm -f $(LEX_OUTPUT_ROOT).c

.yy.cc:
	$(YACCCOMPILE) $<
	if test -f y.tab.h; then \
	  to=`echo "$*_H" | sed \
                -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/' \
                -e 's/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ]/_/g'`; \
	  sed "/^#/ s/Y_TAB_H/$$to/g" y.tab.h >$*.ht; \
	  rm -f y.tab.h; \
	  if cmp -s $*.ht $*.h; then \
	    rm -f $*.ht ;\
	  else \
	    mv $*.ht $*.h; \
	  fi; \
	fi
	if test -f y.output; then \
	  mv y.output $*.output; \
	fi
	sed '/^#/ s|y\.tab\.c|$@|' y.tab.c >$@t && mv $@t $@
	rm -f y.tab.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf AST/.libs AST/_libs
	-rm -rf Object/.libs Object/_libs
	-rm -rf lexer/.libs lexer/_libs
	-rm -rf parser/.libs parser/_libs
	-rm -rf util/.libs util/_libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/.. $(distdir)/lexer $(distdir)/parser
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f AST/$(DEPDIR)/$(am__dirstamp)
	-rm -f AST/$(am__dirstamp)
	-rm -f lexer/$(DEPDIR)/$(am__dirstamp)
	-rm -f lexer/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f parser/$(DEPDIR)/$(am__dirstamp)
	-rm -f parser/$(am__dirstamp)
	-rm -f Object/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)
	-rm -f Object/$(DEPDIR)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-rm -f parser/art++-parse.h
	-rm -f lexer/art++-lex.cc
	-rm -f parser/art++-parse.cc
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) AST/$(DEPDIR) Object/$(DEPDIR) lexer/$(DEPDIR) parser/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) AST/$(DEPDIR) Object/$(DEPDIR) lexer/$(DEPDIR) parser/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES ctags dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

@HAVE_BISON_TRUE@parser/yacc_or_bison.h:
@HAVE_BISON_TRUE@	@$(ECHO) "// \"$@\"" > $@
@HAVE_BISON_TRUE@	@$(ECHO) "// automatically generated by Makefile" >> $@
@HAVE_BISON_TRUE@	@$(ECHO) "#define USING_BISON 1" >> $@
@HAVE_BISON_TRUE@	@$(ECHO) "#define USING_YACC 0" >> $@
@HAVE_BISON_FALSE@parser/yacc_or_bison.h:
@HAVE_BISON_FALSE@	@$(ECHO) "// \"$@\"" > $@
@HAVE_BISON_FALSE@	@$(ECHO) "// automatically generated by Makefile" >> $@
@HAVE_BISON_FALSE@	@$(ECHO) "#define USING_BISON 0" >> $@
@HAVE_BISON_FALSE@	@$(ECHO) "#define USING_YACC 1" >> $@
art_main.$(OBJEXT) art_main.lo: parser/art++-parse-prefix.h
art++2obj.$(OBJEXT) art++2obj.lo: parser/art++-parse-prefix.h
artobjdump.$(OBJEXT) artobjdump.lo: parser/art++-parse-prefix.h

# rules for the prefix-transformed versions of generated lexer/parser sources
# make these conditional on yacc vs. bison
@HAVE_BISON_TRUE@parser/art++-parse-prefix.cc: parser/art++-parse.cc
@HAVE_BISON_TRUE@	$(AWK) -f $(srcdir)/parser/yyerror_bison_hack.awk $? | \
@HAVE_BISON_TRUE@	$(AWK) -f $(srcdir)/parser/yacc-prefix.awk \
@HAVE_BISON_TRUE@		-v PREFIX=$(ARTXX_YACC_PREFIX) > $@
@HAVE_BISON_FALSE@parser/art++-parse-prefix.cc: parser/art++-parse.cc
@HAVE_BISON_FALSE@	$(AWK) -f $(srcdir)/parser/yacc-prefix.awk \
@HAVE_BISON_FALSE@		-v PREFIX=$(ARTXX_YACC_PREFIX) $? > $@

parser/art++-parse-prefix.h: parser/art++-parse.h
	$(AWK) -f $(srcdir)/parser/yacc-prefix.awk \
		-v PREFIX=$(ARTXX_YACC_PREFIX) $? > $@

lexer/art++-lex-prefix.cc: lexer/art++-lex.cc
	$(AWK) -f $(srcdir)/parser/yacc-prefix.awk \
		-v PREFIX=$(ARTXX_YACC_PREFIX) $? > $@
$(ARTXX_PARSE_OUTPUT): parser/art++-parse.h

$(ARTXX_PARSE_OUTPUT).h: $(ARTXX_PARSE_OUTPUT)
	@if $(GREP) "conflict" $?; then exit 1; fi
	$(AWK) -f $(YACC_OUTPUT_H_SCRIPT) $? | \
	$(AWK) -f $(srcdir)/parser/yacc-prefix.awk \
		-v PREFIX=$(ARTXX_YACC_PREFIX) > $@

parser/art++.types: parser/art++-parse.yy
	$(CAT) $? | $(GREP) -v "#include" | $(CPP) -P | $(GREP) -v pragma | \
		$(SED) -e "/^%start/,$$$$d" -e "/%{/,/%}/d" | \
		$(SED) '/^[ \t]*$$/d' > $@
# so far, yacc token enums start at 257 consistently, but we take no chances.

parser/art++-union.cc: $(ARTXX_PARSE_OUTPUT) parser/art++.types parser/art++-parse-prefix.h
	$(AWK) -f $(YACC_UNION_SCRIPT) \
		$(YACC_UNION_SCRIPT_ARGS) parser/art++-parse.output > $@

clean-parser:
	rm -f $(CLEANPARSER)

clean-lexer:
	rm -f $(CLEANLEXER)

# implies CLEANFILES
clean-local:

dist-hook:
	for f in $(DISTCLEANFILES) $(CLEANFILES); do \
		rm -f $(distdir)/$$f ; \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
