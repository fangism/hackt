# "Make.vars"
# make-independent definitions, sepcific to this project
# "Make.stddef" must preceed inclusion of this file

############################ commands and options #############################
CC = gcc
CXX = g++

LD = g++
# for C++ programs, need LD = g++ for certain standard libraries to link

# hint: may need to add this to environment for dynamic linked libraries...
# setenv LD_LIBRARY_PATH /usr/local/compiler/lib

# use CPPFLAGS to pass in preprocessor macros, such as debug flags
# using gcc, because Mach ld needs some additional directives on Mac...
#	will eventually get around to self-configuring

# other potentially anal warnings not covered by -Wall, how far can we go?
MORE_WARN = -Wcast-qual -Wpointer-arith 
# -Wstrict-prototypes -Wmissing-prototypes (only appropriate for C)
# "traditional" is for C-only
# -Wtraditional -Wwrite-strings \
# "shadow" and "write-strings" affects y.tab.o, depending on yacc version
# -Wshadow -Woverloaded-virtual

NO_WARN = -Wno-unused
# "no-unused" affects art.yy.o, from flex (yyunput unused)

# extremely anal about warnings... report as errors!
WARN_FLAGS = -Wall -W $(MORE_WARN) $(NO_WARN) -Werror

CFLAGS = -O2 -g -pipe
# -static ?
# -fkeep-inline-functions
# turn on -O4 later...
ALL_CFLAGS = $(CFLAGS) $(WARN_FLAGS) $(CPPFLAGS)

LDFLAGS =

LEX = flex
LFLAGS = -t

YACC = yacc
YFLAGS = -d -t -v
# note: do not use bison -y !

MAKEDEPEND = $(CC) -MM


########################### project-specific files ############################
# Main targets
ARTC = artc
TARGETS = $(ARTC)
TARBALL = art.tar.gz

# documentation configuration
DOXYGEN_CONFIG = art.doxygen.config

# object files
LANG_OBJ = y.tab.o y.union.o art.yy.o
ART_OBJ = $(LANG_OBJ) \
	art_parser.o art_parser_prs.o art_parser_hse.o \
	art_parser_chp.o art_parser_expr.o art_parser_token.o \
	art_parser_definition.o art_parser_instance.o art_parser_formal.o \
	art_symbol_table.o \
	art_object.o art_object_expr.o art_object_definition.o \
	art_object_type_ref.o art_object_instance.o art_object_inst_ref.o \
	art_object_connect.o \
	art_utils.o art_built_ins.o \
	art_main.o

# automatic dependencies
ART_DEPS = $(ART_OBJ:.o=.d)

# regression testing files
TEST_SUBJECTS = 
# this file defines and accumulates TEST_SUBJECTS (without their suffixes)
include test/Make.inc

# command to filter regression outputs for comparison
TEST_FILTER = $(AWK) -f test/state_enum_filter.awk

# test summary file
TEST_REPORT = test-report.txt


