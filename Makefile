# "Makefile"
# I insist on keeping this Makefile standard-make compatible!
# I'm trying to make this as self-contained as possible to avoid 
# ugly dependencies.  

SHELL = /bin/sh

AWK = awk
CAT = cat
ECHO = echo
GREP = grep
RM = rm -f
MV = mv -f
TAR = tar -czvf

# defined with intention of self-modification...
THISMAKEFILE = Makefile

# to use ccache, override with: make CC="ccache gcc"
# to use distcc, can even prefix compile command with "distcc"

CC = gcc
LD = $(CC)
# using gcc, because Mach ld needs some additional directives on Mac...
#	will eventually get around to self-configuring
CFLAGS = -O2 -Wall -c -g -pipe
# -fkeep-inline-functions
# turn on -O4 later...
LDFLAGS = -lc -lstdc++
#	-lfl: don't need this for flex, because classes are self-contained
#	NOTE: -lc MUST appear before -lstdc++ on darwin gcc-3.3!!!
LEX = flex
LFLAGS = -t
YACC = yacc
YFLAGS = -d -t -v
MAKEDEPEND = $(CC) -MM

TARGETS = artc
TARBALL = art.tar.gz

DOXYGEN_CONFIG = art.doxygen.config

.SUFFIXES: .cc .o .l .yy .d

# careful using this...
.BEGIN:	.depend

.cc.o:
	$(CC) $(CFLAGS) $< -o $@

.cc.d:
	$(MAKEDEPEND) $< > $@

default: all

all: .depend $(TARGETS)

ART_OBJ = y.tab.o art.yy.o art_parser.o art_parser_prs.o art_parser_hse.o \
	art_parser_chp.o art_parser_expr.o art_parser_token.o \
	art_symbol_table.o art_main.o art_utils.o art_object.o
ART_DEPS = $(ART_OBJ:.o=.d)

artc: $(ART_OBJ)
	$(LD) $(LDFLAGS) $(ART_OBJ) -o $@
# gmake doesn't interpret $> correctly, otherwise the following would work:
#	$(LD) $(LDFLAGS) $> -o $@

# self-modifying makefile alert!
# BSD make implcitly include .depend if it exists, but gmake doesn't
# so we must tell gmake... however BSD make dies trying to explicitly
# include a file that doesn't exist, even though it 
# includes it implcitly (only when it exists).  
# Therefore we only append the include directive to the end of this makefile
# after the .depend has been created.  
# Be sure to clobber it before committing by using "make commit"!
.depend: $(ART_DEPS)
	$(CAT) $(ART_DEPS) > $@
	if grep "^include \.depend" $(THISMAKEFILE); \
		then $(ECHO); \
		else $(ECHO) "include .depend" >> $(THISMAKEFILE); \
	fi

art.yy.cc: art.l y.tab.h
	$(LEX) $(LFLAGS) art.l > $@

# y.tab.cc will depend on y.output.h
y.tab.h y.tab.cc y.output.h: art.yy
	-$(YACC) $(YFLAGS) $?; \
	$(AWK) -f yacc-output-to-C.awk y.output > y.output.h; \
	$(MV) y.tab.c y.tab.cc

# documentation targets
docs:
	doxygen $(DOXYGEN_CONFIG)
	(cd dox/latex; $(MAKE) < /dev/null )

cleanlexer:
	-$(RM) *.yy.*

cleanparser:
	-$(RM) y.tab.*
	-$(RM) y.output
	-$(RM) y.output.h

cleandepend:
	-$(RM) *.d

clean: cleanlexer cleanparser cleandepend
	-$(RM) *.o
	-$(RM) *.tmp.*
	-$(RM) *.core

# for now don't always clobber this, until everyone else can generate docs...
nodocs:
	-$(RM) -r dox/html
	-$(RM) -r dox/latex

# self-modifying makefile alert!
# removing explicit inclusion of .depend because BSD make dies when it
# doesn't exist, even though it includes it implcitly (only when it exists)
# It will be re-generated by the .depend build rule
clobberdepend: cleandepend
	-$(RM) .depend
	$(GREP) -v "^include \.depend" $(THISMAKEFILE) > $(THISMAKEFILE).temp; \
	$(MV) $(THISMAKEFILE).temp $(THISMAKEFILE)

clobber: clean clobberdepend
	-$(RM) $(TARGETS)

tarball: clobber
	-$(RM) $(TARBALL)
	$(TAR) $(TARBALL) ./*

# temporary files are ignored by .cvsignore
commit: clobberdepend
	cvs commit

# header file dependencies generated with gcc -MM, saved to .depend

# gmake needs to include dependencies explcitly, 
# whereas BSD make doesn't: it's implicit
# but BSD make dies when it can't find it :(
# hence the self-modifying Makefile
# the following line will magically appear and disappear...
include .depend
