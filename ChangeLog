"ChangeLog"

2004-09-10	David Fang	<fangism@users.sourceforge.net>

	* Major reworking of instance management: all instantiations, 
	  parameters, assignments, connections that appear outside of
	  definitions will be globally ordered into a namespace-independent
	  instance management list, to preserve source ordering.  
	  Each definition will have its own local instance management list.
	  Instance management lists will expand into sequentially scoped 
	  bodies, such as loop scopes and conditional scopes.  
	  Namespaces no longer have separate assignment or connection lists.  
	  (most affected: Object/art_context.* Object/art_object_base.*)

	* class instantiation_statement encapsulates a sequential 
	  addition of instance (possible to an array).

	* Object de/serialization interface now uses class "module" instead
	  of the root namespace.  "module" implements standard
	  de/serialization interface.  

	* Introduced new top-level object "module" which includes a
	  global namespace and a globally ordered instance management list.  
	  Note: type enumeration shifts as a result.  

	* Some more documentation on the language spec, for templates, 
	  typedefs, and type-equivalence.

	* Some general improvements and extensions to algorithm library
	  interface (functors and adapters) in the util/ directory.  

	* Minor insignificant shifts in object class hierarchy.  


2004-09-03	David Fang	<fangism@users.sourceforge.net>

	* Started a documentation directory dox/lang for the language
	  specification documentation, not to be mixed with the 
	  doxygen-generated code reference manual.  

	* Added some rather harmless data structure tests that have been 
	  sitting around for a long time (in src/util/test).  


2004-09-01	David Fang	<fangism@users.sourceforge.net>

	* Reworked connection and assignment management in class scopespace.
	  Now kept in separate lists.  (No more connection_assignment_base.)

	* Some initial groundwork for unrolling parameters and instances.  
	  Some major languauge issues need to be resolved first.  

	* Wrote and tested some data structures for multidimensional maps, 
	  both true multidimensional, and pseudo-multidimensional 
	  (with multidimensional key in a flat map).  
	  Also renamed some namespaces along the way.  

	* Note the change in email address.  :)


2004-08-21	David Fang	<fangism@gmail.com>

	* Release 0.1.3.

	* Completed object de/serialization for core classes.  
	  Recycle old type-check test inputs for object dump diff testing.  
	  New tests read in file, produce object file, and text dump.  
	  Second part takes object file and produces text dump.  
	  Text dumps are compared for consistency.  


2004-08-19	David Fang	<fangism@gmail.com>

	* Wrote majority of (semi-tested) object serialization /
	  deserialization code for Object class hierarchy.  
	  So far regression tests run clean, with self_test_no_file().  

	* The next release (0.1.3) should contain a new set of tests
	  for verifying object integrity through dump-and-load.  


2004-08-13	David Fang	<fangism@gmail.com>

	* Release 0.1.2.

	* Made parser code robust to variations in yacc/bison versions, 
	  updated test expected outputs.  This was not trivial.  
	  Works on FreeBSD yacc/bison-1.875, linux yacc/bison-1.35.  

	* Minor tweaks in configuration and Makefile.am's.  


2004-08-12	David Fang	<fangism@gmail.com>

	* Releasing 0.1.1, the completely GNU-ified version.  

	* Completed porting process, with slightly restructured test suite.
	  Short test scripts are automatically generated by the Makefile
	  and run by "make check".  
	  Tests are now run recursively by directory, and recursion 
	  terminates as soon as there is one failure in a directory.  

	* Considerable effort was spent getting the parser grammar files
	  to work with bison, whereas they were exclusively compiled 
	  with yacc only before.  Even test outputs were augmented
	  to account for differences between yacc and bison.  


2004-08-10	David Fang	<fangism@gmail.com>

	* Took the old flattened source directory, and prepared it
	  for use with automake, autoconf, and libtool.  
	  Moving sources into subdirectories meant severing files
	  from their previous revision history, which should remain
	  in the CVS repository's Attic.  

