#!/bin/sh
# "bootstrap" 
# Maintainer script for regenerating Makefiles and configure scripts.
# (also known as autogen.sh in some conventions)
#	$Id: bootstrap,v 1.5 2006/11/04 03:21:41 fang Exp $

# this regenerates some critical files
# run this after "make maintainer-clean" or "make distclean"

PROJECT=hackt
TEST_TYPE=-f
FILE=INSTALL

# May need this to break chicken-before-the-egg
touch src/headers_deps.make

DIE=0
ACLOCAL_FLAGS="-I config"

# TODO: version compare

(autoconf --version) < /dev/null > /dev/null 2>&1 || {
        echo
        echo "You must have autoconf installed to bootstrap $PROJECT from CVS."
        echo "Download the appropriate package for your distribution,"
        echo "or get the source tarball at: "
	echo "http://ftp.gnu.org/gnu/autoconf/autoconf-2.60.tar.gz"
        DIE=1
}

(libtoolize --version) < /dev/null > /dev/null 2>&1 || {
        echo
        echo "You must have libtool installed to bootstrap $PROJECT from CVS."
	echo "Get ftp://ftp.gnu.org/gnu/libtool/libtool-1.5.22.tar.gz"
        echo "(or a newer version if it is available)"
        DIE=1
}

(automake --version) < /dev/null > /dev/null 2>&1 || {
        echo
        echo "You must have automake installed to bootstrap $PROJECT from CVS."
        echo "Get http://ftp.gnu.org/gnu/automake/automake-1.9.6.tar.gz"
        echo "(or a newer version if it is available)"
        DIE=1
}

if test "$DIE" -eq 1; then
        exit 1
fi

test $TEST_TYPE $FILE || {
        echo "You must run this script in the top-level $PROJECT directory"
        exit 1
}


libtoolize --copy --force
aclocal $ACLOCAL_FLAGS
# optionally feature autoheader
(autoheader --version)  < /dev/null > /dev/null 2>&1 && autoheader $ACLOCAL_FLAGS
automake --copy --add-missing --verbose --gnu $am_opt
autoconf $ACLOCAL_FLAGS
# really, 'autoreconf' with flags should suffice

# may not want verbose for autoconf, aclocal, and autoheader

