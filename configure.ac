# "configure.ac"
# Process this file with "autoconf" to generate the "configure" script.
# (Prior to 2005/06/19, this file was "configure.in", 
#	in case one should want to trace back the CVS revision history.)
#
#	$Id: configure.ac,v 1.42.2.3 2006/02/23 06:29:59 fang Exp $

# Hint: Try running "autoscan" for suggestions on what should go in here.  
# Results of autoscan appear in "configure.scan".  

AC_PREREQ(2.59)
AC_INIT(hackt, 0.1.4-devel-20060220, fangism@users.sourceforge.net)
AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER(config.h)
AC_CONFIG_SRCDIR([src/main/main_funcs.cc])

# don't need this yet
# AC_CONFIG_SUBDIRS

# Propagate the make warning flags recursively
AM_INIT_AUTOMAKE([1.9 -Wall -Werror])

# Enable or disable automatic reconfiguring.  
# AM_MAINTAINER_MODE

# Disabling shared library linking may speed up beta-testing and building.  
# AC_DISABLE_SHARED

AC_CANONICAL_HOST


AC_CHECK_PROG([SH], sh, sh)
AC_PATH_PROG(SH_PATH, sh)

# CALLMAKE is intended for shell scripts' invocations of make
# NOT intended for direct use in configured Makefiles, because
# MAKE is more appropriate and configured for automake already.
AC_CHECK_PROGS([CALLMAKE], gmake make)

# basic program checks
AC_PROG_LN_S
AC_CHECK_PROG([CAT], cat, cat)
AC_CHECK_PROG([CPP_TRADITIONAL], cpp, cpp)
AC_CHECK_PROG([CHMOD], chmod, chmod)
# CVS is not required, but will enable some handy targets
AC_CHECK_PROG([CVS], cvs, cvs)
AM_CONDITIONAL(HAVE_CVS, test -n "$CVS")
AC_CHECK_PROG([DATE], date, date)
AC_CHECK_PROG([DIFF], diff, diff)
AC_CHECK_PROG([PATCH], patch, patch)
AC_CHECK_PROG([FIND], find, find)
AC_CHECK_PROG([GREP], grep, grep)
AC_CHECK_PROG([ECHO], echo, echo)
AC_CHECK_PROG([SORT], sort, sort)
AC_CHECK_PROG([CUT], cut, cut)
AC_CHECK_PROG([PASTE], paste, paste)
AC_CHECK_PROG([HEAD], head, head)
AC_CHECK_PROG([TAIL], tail, tail)
# AC_CHECK_PROG([PWD], pwd, pwd)
#	checking for PWD doesn't work as expected...
AC_CHECK_PROG([SED], sed, sed)
AC_CHECK_PROG([TOUCH], touch, touch)
AC_PROG_SLEEP
AC_CHECK_PROG([INDENT], indent, indent)
AC_CHECK_PROGS([M4], gm4 m4, m4)

# AC_PROG_PERL
AC_CHECK_PROG([PERL], perl, perl)
AC_PATH_PROG([PERL_PATH], perl)

# documentation support, macros efined in "config/documentation.m4"
DOC_CHECK_PROG_DOXYGEN
DOC_CHECK_PROG_DOT
DOC_CHECK_PROG_LATEX
DOC_CHECK_PROG_PDFLATEX
DOC_CHECK_PROG_DVIPS
DOC_CHECK_PROG_BIBTEX
DOC_CHECK_PROG_MAKEINDEX
DOC_CHECK_PROG_PS2PDF

# figure related stuff
AC_CHECK_PROG([XFIG], xfig, xfig)
AC_CHECK_PROG([TRANSFIG], transfig, transfig)
dnl only fig2dev is needed for converting xfigs
AC_CHECK_PROG([FIG2DEV], fig2dev, fig2dev)

# checking for old CAST tools for regression and backwards compatibility tests
# no big deal if they don't exist...
# NOTE: AM_CONDITIONAL is usable in generation of AC_CONFIG_FILES
#	just use @VAR_TRUE@ instead of the if ... version in automake
AC_CHECK_PROG([PRSIM], prsim, prsim)
AC_CHECK_PROG([CFLAT], cflat, cflat)
AM_CONDITIONAL(HAVE_PRSIM, test -n "$PRSIM" )
AM_CONDITIONAL(HAVE_CFLAT, test -n "$CFLAT" )

# Lex/Yacc support
AM_PROG_LEX
AC_PROG_YACC

HACKT_ARG_VAR_LEX
HACKT_ARG_VAR_YACC
HACKT_AM_CONDITIONAL_HAVE_YACC
HACKT_YACC_VERSION
HACKT_LEX_VERSION

# comment out until time for release
# this causes too many rebuilds during development
# AC_DEFINE_UNQUOTED(HACKT_BUILD_DATE, "`$DATE`", [Define the build date.])

# This takes care of many standard C[++] compiler configuration checks.  
AC_PROG_RANLIB
AC_PROG_LIBTOOL
HACKT_ARG_ENABLE_LIBTOOL_VERBOSE
# Automatically update if libtool script is outdated.  
# Adds corresponding dependencies to "Makefile.in".  
AC_SUBST(LIBTOOL_DEPS)

dnl defined in config.hackt.m4
HACKT_ARG_ENABLE_GOD_MODE
dnl defined in config/header_validation.m4
AC_ARG_ENABLE_HEADER_VALIDATION
dnl from "config/rl_el.m4"
AC_ARG_WITH_READLINE_EDITLINE

dnl whether or not to build universal binary (config/hackt.m4)
dnl not actually implemented yet
HACKT_ARG_ENABLE_UNIVERSAL_BINARY

dnl AC_ARG_ENABLE for building documentation (on by default)
dnl from "config/documentation.m4"
DOC_ARG_ENABLE_DOCS

dnl enable or disable fun modules ("config/hackt.m4")
HACKT_ARG_ENABLE_FUN

dnl define WORDS_BIGENDIAN if is big endian
dnl not actually needed in this project yet
AC_C_BIGENDIAN

AC_PROG_CXX

dnl from "config/cxx.m4"
AC_CXX_VERSION

dnl we need these anal flags for checking for certain charateristics
dnl TODO: what are the equivalent flags for other compilers?
dnl from "config/cxx.m4"
FANG_ANAL_COMPILE_FLAGS
FANG_AM_FLAGS

dnl which set of pre-determined compiler flags to apply?
AM_CONDITIONAL_HAVE_GXX
dnl TODO: add other conditionals for other common compilers
dnl XLC++, ICC, HPCC, etc...

AM_PROG_CC_C_O
AC_ISC_POSIX

AC_CXX_ATTRIBUTE_UNUSED
AC_CXX_ATTRIBUTE_UNUSED_CTOR
AC_CXX_ATTRIBUTE_CONST
AC_CXX_ATTRIBUTE_PURE
AC_CXX_ATTRIBUTE_HOLY
AC_CXX_ATTRIBUTE_NORETURN
AC_CXX_ATTRIBUTE_MALLOC
AC_CXX_ATTRIBUTE_VISIBILITY
AC_CXX_ATTRIBUTE_PACKED
AC_CXX_ATTRIBUTE_ALIGNED
AC_CXX_ATTRIBUTE_ALIGNED_SIZE
AC_CXX_ATTRIBUTE_EVIL

AC_CXX_STL_REVERSE_ITERATOR_COMPARISONS

# additional header checks
AC_HEADER_STDC
AC_CHECK_HEADERS([stddef.h stdlib.h string.h unistd.h getopt.h])
AC_CHECK_HEADERS(pthread.h)
AC_CHECK_HEADERS([malloc.h])
AC_CHECK_HEADERS([ctype.h])
AC_HEADER_DIRENT
AC_CHECK_HEADERS([dirent.h sys/dirent.h])

dnl checks tons of standard C++ headers in various locations
dnl from "config/cxx_STL.m4"
AC_HEADER_STDCXX

dnl suggestions from autoscan
AC_FUNC_ALLOCA			dnl wanted by the y.tab.c generated
AC_FUNC_CLOSEDIR_VOID		dnl wanted by src/util/dirent.cc
AC_FUNC_STAT			dnl wanted by src/util/file_status.h

# compiler characteristic checks
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_C_VOLATILE
AC_TYPEDEF_FILE			dnl defined in "config/cc.m4"
AC_CHECK_TYPES([ptrdiff_t])
AC_CHECK_FUNCS([sqrt])
AC_CHECK_FUNCS([getopt])
AC_CHECK_FUNCS([strsep strtok strtok_r]) dnl strsep is missing on Solaris 2.9
AC_CHECK_FUNCS([strdup])
dnl <stdio.h>
AC_CHECK_FUNCS([fgets fputs fputc fgetc fopen fclose fflush])
AC_CHECK_FUNCS([ferror feof clearerr])
AC_CHECK_FUNCS([fseek ftell rewind fgetpos fsetpos])
AC_CHECK_FUNCS([tmpfile tmpnam tempnam])
AC_CHECK_FUNCS([remove rename])
AC_CHECK_FUNCS([setbuf setbuffer setlinebuf setvbuf])
AC_FUNC_SETVBUF_REVERSED
dnl <ctype.h>
AC_CHECK_FUNCS([isascii isspace isdigit isalpha isalnum islower isupper])
AC_CHECK_FUNCS([iscntrl isgraph ishexnumber isideogram isnumber isphonogram])
AC_CHECK_FUNCS([isspecial isprint ispunct isrune isxdigit tolower toupper])

AC_CHECK_FUNCS([system])
AC_CHECK_FUNCS([getenv setenv putenv unsetenv])

# library functions
AC_FUNC_ERROR_AT_LINE
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([calloc free])
AC_MSG_CHECKING([for free food])
AC_MSG_RESULT([YES]);

# sizeof checks, useful for checking ILP model
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)
AC_CHECK_SIZEOF(long double)
AC_CHECK_SIZEOF(void*)
AC_CHECK_SIZEOF(size_t)
AC_CHECK_SIZEOF(int64_t)
AC_CHECK_SIZEOF(uint64_t)

HACKT_CHECK_SANITY

dnl readline or editline support
AC_CHECK_READLINE
AC_CHECK_EDITLINE
dnl check prototype of readline() if applicable
AC_CHECK_READLINE_ARG_CONST

dnl first, create a useful variable substitution script for use in config.status
AC_CONFIG_FILES([config_subst.awk.sh:config/config_subst.awk],
[dollar=$
at=@
cat > config_subst.awk.sh <<EOF
#!$SHELL
awk -f $srcdir/config/config_subst.awk $dollar$at
EOF
chmod +x config_subst.awk.sh
])

CONFIGDATE=`$DATE`
AC_SUBST(CONFIGDATE)

AC_CONFIG_FILES([
	Makefile
	scripts/Makefile
	src/Makefile
	src/util/test/Makefile
	test/Makefile
	test/lexer/Makefile
	test/parser/Makefile
	test/parser/basic/Makefile
	test/parser/namespace/Makefile
	test/parser/param/Makefile
	test/parser/array/Makefile
	test/parser/process/Makefile
	test/parser/prs/Makefile
	test/parser/chp/Makefile
	test/parser/datatype/Makefile
	test/parser/channel/Makefile
	test/parser/template/Makefile
	test/parser/typedef/Makefile
	test/parser/connect/Makefile
	test/parser/flow/Makefile
	test/benchmarks/Makefile
	dox/Makefile
	dox/mk/Makefile
	dox/lang/Makefile
	dox/util/Makefile
	dox/objfmt/Makefile
	dox/man/Makefile
	dox/tutorial/Makefile
	lib/Makefile
	hackt.doxygen.config
])
AC_CONFIG_FILES([scripts/replace_if_changed.sh],
	[chmod +x scripts/replace_if_changed.sh])
AC_CONFIG_FILES([src/util/test/test-expect.sh],
	[chmod +x src/util/test/test-expect.sh])
AC_CONFIG_FILES([src/scripts/deps_to_dot.awk],
	[chmod +x src/scripts/deps_to_dot.awk])
AC_CONFIG_FILES([test/parse-test-expect.sh],
	[chmod +x test/parse-test-expect.sh])
AC_CONFIG_FILES([test/hackt-obj-diff.sh],
	[chmod +x test/hackt-obj-diff.sh])
AC_CONFIG_FILES([test/hackt-unroll-expect.sh],
	[chmod +x test/hackt-unroll-expect.sh])
AC_CONFIG_FILES([test/hackt-create-expect.sh],
	[chmod +x test/hackt-create-expect.sh])
AC_CONFIG_FILES([test/check-create-consistency.sh],
	[chmod +x test/check-create-consistency.sh])
AC_CONFIG_FILES([test/hackt-alloc-expect.sh],
	[chmod +x test/hackt-alloc-expect.sh])
AC_CONFIG_FILES([test/hackt-cflat-expect.sh],
	[chmod +x test/hackt-cflat-expect.sh])
AC_CONFIG_FILES([test/hackt-cflat-sprs-expect.sh],
	[chmod +x test/hackt-cflat-sprs-expect.sh])
AC_CONFIG_FILES([test/hackt-prsim-expr-alloc-expect.sh],
	[chmod +x test/hackt-prsim-expr-alloc-expect.sh])
AC_CONFIG_FILES([test/test-series.sh],
	[chmod +x test/test-series.sh])

dnl the AC_CONFIG_HEADERS macro does not perform AC_SUBST-itution
dnl so we have to fall back onto AC_CONFIG_FILES :(
dnl It wouldve been nice to have difference checking from AC_CONFIG_HEADERS...
dnl work on this nicety later...

dnl no input file needed, just referencing arbitrary existing file
dnl AC_CONFIG_FILES([configdate.h:config/macro-value.h.in],
dnl	[out=configdate.h
dnl	date=`./config_subst.awk.sh -v var=DATE config.status`
dnl	sed 's/MACRO/CONFIGDATE/g' $srcdir/config/macro-value.h.in | \
dnl		sed "s/VALUE/\"`$date`\"/g" > $out
dnl	])

AC_CONFIG_FILES([configdate.h src/buildhost.h])
AC_CONFIG_FILES([src/cxxflags.h src/cxx_version.h])
AC_CONFIG_FILES([src/lexer/lex_version.h src/parser/yacc_version.h])

AC_CONFIG_FILES([src/parser/hackt-parse.yy:src/parser/hackt-parse.yy.in],
	[out=src/parser/hackt-parse.yy
	if ( ./config_subst.awk.sh -v var=HAVE_BISON_TRUE config.status | grep -q "#" )
	then
		sed '/%pure.parser/d' $srcdir/$out.in > $out~
	else
		cp $srcdir/$out.in $out~
	fi
	scripts/replace_if_changed.sh $out~ $out
	])

AC_CONFIG_FILES([src/parser/instref-parse.yy:src/parser/instref-parse.yy.in],
	[out=src/parser/instref-parse.yy
	if ( ./config_subst.awk.sh -v var=HAVE_BISON_TRUE config.status | grep -q "#" )
	then
		sed '/%pure.parser/d' $srcdir/$out.in > $out~
	else
		cp $srcdir/$out.in $out~
	fi
	scripts/replace_if_changed.sh $out~ $out
	])

AC_CONFIG_FILES([src/util/lang/CX/cx-parse.yy:src/util/lang/CX/cx-parse.yy.in],
	[out=src/util/lang/CX/cx-parse.yy
	if ( ./config_subst.awk.sh -v var=HAVE_BISON_TRUE config.status | grep -q "#" )
	then
		sed '/%pure.parser/d' $srcdir/$out.in > $out~
	else
		cp $srcdir/$out.in $out~
	fi
	scripts/replace_if_changed.sh $out~ $out
	])
dnl initialize and reset header check dependencies
dnl also depend on Makefile?
dnl can't run make until depfiles has run! doh... work on this later...
dnl
dnl AC_CONFIG_FILES([src/headers_deps.make],
dnl 	[out=src/headers_deps.make
dnl 	(cd src && make echo-header-depbases) | \
dnl 		awk -f $srcdir/src/scripts/automake_include.awk >> $out
dnl 	])

AC_OUTPUT

