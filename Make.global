# "Make.global"
#	vi: ft=automake
# Project-wide Makefile targets and dependencies.
# Generally, it is recommended to include this Makefile last.  
# This file may be used as an includable Makefile snippet, 
# or with automake for automatic inlining.  
# NOTE: standard definition macros appear in "Make.stddef" and should
# be included *before* the inclusion of this Makefile.  
# NOTE: the for-loop syntax used requires that SHELL = sh, not bash.
#	$Id: Make.global,v 1.22 2006/09/03 22:03:18 fang Exp $

# automatically runs autotools (and recursively in dubdirectories)
reconf: force
	autoreconf

ALL_CVSIGNORE =
# RECURSIVE_TARGETS =

# blatantly copied from Makefile.in, generated by automake
RECURSIVE_TARGET_SCRIPT = \
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"


if NO_VPATH
# .cvsignore for this project will always be semi-automatically generated
# .cvsignore is never needed for VPATH builds, duh!
.cvsignore: $(srcdir)/Makefile.am $(top_srcdir)/Make.global

# make cvsignore by default
ALL_CVSIGNORE += cvsignore-am

# phony recursive target
cvsignore-recursive: .cvsignore force

cvsignore: cvsignore-recursive

cvsignore-am: .cvsignore cvsignore-local

clean-cvsignore: clean-cvsignore-recursive

clean-cvsignore-am: clean-cvsignore-local
	-$(RM) .cvsignore

PHONY_CVSIGNORE = clean-cvsignore-local clean-cvsignore-am cvsignore \
	clean-cvsignore cvsignore-local cvsignore-am

# automake doesn't like b/c RECURSIVE_TARGETS not defined early enough
MORE_RECURSIVE_TARGETS += clean-cvsignore-recursive cvsignore-recursive

DISTCLEANFILES += .cvsignore
endif

all-local: $(ALL_CVSIGNORE)

# convenient target for building subtree of the distribution
# not a recursive target
# this also clears out the target distribution directory first
distdir-subdir:
	top_distdir="$(top_builddir)/$(PACKAGE)-$(VERSION)" ; \
	distdir="$$top_distdir/$(subdir)" ; \
	until rm -fr $$distdir ; do : ; done ; \
	$(mkdir_p) $$distdir ; \
	$(MAKE) top_distdir="$$top_distdir" distdir="$$distdir" distdir
	@$(ECHO) "$$distdir ready for inspection."

DISTCLEANFILES += check.log cvsdiffs

distcleandirs:
	-$(RM) -r $(DISTCLEANDIRS)

distclean-local: distcleandirs

dist-hook-autoclean:
	-cd $(distdir) && { test -z "$(DISTHOOK_CLEANFILES)" || rm -f $(DISTHOOK_CLEANFILES) ;}

dist-hook: dist-hook-autoclean

# list of files to automatically CVS ignore, accumulated over Makefile
AUTO_IGNORE += .gdb_history \
	Makefile.in Makefile make.log ignore backup temp \
	$(CLEANFILES) $(DISTCLEANFILES)

# echo makefile debugging
echo-extra-dist: force
	@$(ECHO) $(EXTRA_DIST)

# list the automatically distributed files
echo-dist-common: force
	@$(ECHO) $(DIST_COMMON)

echo-cleanfiles: force
	@$(ECHO) $(CLEANFILES)

echo-distcleanfiles: force
	@$(ECHO) $(DISTCLEANFILES)

echo-auto-ignore: force
	@$(ECHO) $(AUTO_IGNORE)

echo-config: force
	cd $(top_builddir) && ./config.status --version

echo-srcdir: force
	@$(ECHO) $(srcdir)

echo-top-srcdir: force
	@$(ECHO) $(top_srcdir)

echo-top-builddir: force
	@$(ECHO) $(top_builddir)

echo-subdir: force
	@$(ECHO) $(subdir)

echo-build: force
	@$(ECHO) $(build)

echo-host: force
	@$(ECHO) $(host)

echo-program-transform-name: force
	@$(ECHO) $(program_transform_name)

echo-prefix: force
	@$(ECHO) $(prefix)

echo-exec-prefix: force
	@$(ECHO) $(exec_prefix)

echo-programs: force
	@$(ECHO) $(PROGRAMS)

echo-scripts: force
	@$(ECHO) $(SCRIPTS)

echo-package: force
	@$(ECHO) $(PACKAGE)

echo-package-bugreport: force
	@$(ECHO) $(PACKAGE_BUGREPORT)

echo-package-version: force
	@$(ECHO) $(PACKAGE_VERSION)

echo-SUFFIXES: force
	@$(ECHO) $(SUFFIXES)

echo-LEX: force
	@$(ECHO) $(LEX)

echo-YACC: force
	@$(ECHO) $(YACC)

echo-AM_CFLAGS: force
	@$(ECHO) $(AM_CFLAGS)

echo-AM_CXXFLAGS: force
	@$(ECHO) $(AM_CXXFLAGS)

echo-AM_CPPFLAGS: force
	@$(ECHO) $(AM_CPPFLAGS)

echo-AM_LDFLAGS: force
	@$(ECHO) $(AM_LDFLAGS)

echo-CFLAGS: force
	@$(ECHO) $(CFLAGS)

echo-CXXFLAGS: force
	@$(ECHO) $(CXXFLAGS)

echo-CPPFLAGS: force
	@$(ECHO) $(CPPFLAGS)

echo-LDFLAGS: force
	@$(ECHO) $(LDFLAGS)

echo-LIBS: force
	@$(ECHO) $(LIBS)

# might as well include this for non-maintainers too
# again, can't append to file with cat redirection because distclean
# sets permissions of new files as read-only
# NOTE: local.cvsignore may be normal or automatically generated
if NO_VPATH
.cvsignore: local.cvsignore
	@$(ECHO) $(AUTO_IGNORE) | $(SPACES_TO_NEWLINE) > $@.temp
	-$(CAT) $< $@.temp > $@
	-$(RM) $@.temp
endif

# -k option allows continuation past directories with failed tests
check.log: force
	@$(ECHO) "Logging results of \"make -k check\" in $@ ..."
	@$(ECHO) Tests started `$(DATE)` > $@.tmp
	-$(MAKE) -k check >> $@.tmp 2>&1
	-$(MV) $@.tmp $@
# dump failures
	-$(GREP) -v "^PASS" $@
#	@$(ECHO) `$(GREP) "Abort trap" $@ | wc -l` cases crashed.
#	@$(ECHO) Total of `$(GREP) ^FAIL $@ | wc -l` failures encountered.
	$(AWK) -f $(top_srcdir)/scripts/tally_tests.awk $@

if HAVE_CVS
cvsdiffs: force
	-{ cd $(srcdir) && $(CVS) diff -uN ;} > $@
	@$(ECHO) `$(GREP) "^-" $@ | $(GREP) -v "^---" | wc -l` "lines removed"
	@$(ECHO) `$(GREP) "^+" $@ | $(GREP) -v "^+++" | wc -l` "lines added"
else
cvsdiffs:
	@$(ECHO) "Sorry, no 'cvs' found in path."
endif

# general rule for recursive targets
$(MORE_RECURSIVE_TARGETS):
	$(RECURSIVE_TARGET_SCRIPT)

# this shouldn't be parallel...
# .NOTPARALLEL: help
# .NOTPARALLEL unfortunately kills everything...
# help: help-global help-local
help: 
# ignore stderr
	-@$(CALLMAKE) help-global 2> /dev/null
	-@$(CALLMAKE) help-local 2> /dev/null

help-local:

# brief description of targets
help-global:
	@$(ECHO) "Global make targets:"
	@$(ECHO) "    help: lists some useful make targets"
	@$(ECHO) "    all: builds everything (recursive)"
	@$(ECHO) "    clean: removes make targets (recursive)"
	@$(ECHO) "    distclean: removes configure targets (recursive)"
	@$(ECHO) "    cvsdiffs: creates difference patch from CVS"
if NO_VPATH
	@$(ECHO) "    cvsignore: generates .cvsignore (recursive)"
	@$(ECHO) "    clean-cvsignore: cleans .cvsignore (recursive)"
endif
	@$(ECHO) "    check: runs tests (recursive)"
	@$(ECHO) "    check.log: logs make check -k"
	@$(ECHO) "    distdir-subdir: packages subtree of distribution"
	@$(ECHO) "    pdf: builds PDFs (recursive)"
	@$(ECHO) "    ps: builds PostScripts (recursive)"
	@$(ECHO) "    info: builds texinfo files (recursive)"
	@$(ECHO) "    html: builds HTML files (recursive)"
	@$(ECHO) "    echo-*:"
	@$(ECHO) "	config: configure invocation (config.status --version)"
	@$(ECHO) "	cleanfiles: list of cleaned files"
	@$(ECHO) "	distcleanfiles: list of distcleaned files"
	@$(ECHO) "	SUFFIXES: list of Makefile suffixes"
	@$(ECHO) "	extra-dist: list of EXTRA_DIST files"
	@$(ECHO) "	dist-common: list automatic DIST_COMMON files"
	@$(ECHO) "	auto-ignore: list of automatic cvsignored files"
	@$(ECHO) "	srcdir, top-srcdir, top-builddir, subdir, "
	@$(ECHO) "	build, host, prefix, exec-prefix"
	@$(ECHO) "	programs, scripts"
	@$(ECHO) "	program-transform-name, package{,-version,-bugreport}"
	@$(ECHO) "	CFLAGS, CXXFLAGS, CPPFLAGS, LDFLAGS, AM_*FLAGS, LIBS, LEX, YACC"

# standard phony target for unconditional targets
force:

.PHONY: force $(PHONY_CVSIGNORE) $(MORE_RECURSIVE_TARGETS) \
	help help-local help-global dist-hook dist-hook-autoclean

